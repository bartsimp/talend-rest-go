// Code generated by go-swagger; DO NOT EDIT.

package projects_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetGroupProjectAuthorizationsReader is a Reader for the GetGroupProjectAuthorizations structure.
type GetGroupProjectAuthorizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupProjectAuthorizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupProjectAuthorizationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGroupProjectAuthorizationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGroupProjectAuthorizationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGroupProjectAuthorizationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGroupProjectAuthorizationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupProjectAuthorizationsOK creates a GetGroupProjectAuthorizationsOK with default headers values
func NewGetGroupProjectAuthorizationsOK() *GetGroupProjectAuthorizationsOK {
	return &GetGroupProjectAuthorizationsOK{}
}

/*
GetGroupProjectAuthorizationsOK describes a response with status code 200, with default header values.

OK
*/
type GetGroupProjectAuthorizationsOK struct {
	Payload *models.ProjectGroupAuthResponse
}

// IsSuccess returns true when this get group project authorizations o k response has a 2xx status code
func (o *GetGroupProjectAuthorizationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get group project authorizations o k response has a 3xx status code
func (o *GetGroupProjectAuthorizationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group project authorizations o k response has a 4xx status code
func (o *GetGroupProjectAuthorizationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group project authorizations o k response has a 5xx status code
func (o *GetGroupProjectAuthorizationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get group project authorizations o k response a status code equal to that given
func (o *GetGroupProjectAuthorizationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGroupProjectAuthorizationsOK) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsOK  %+v", 200, o.Payload)
}

func (o *GetGroupProjectAuthorizationsOK) String() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsOK  %+v", 200, o.Payload)
}

func (o *GetGroupProjectAuthorizationsOK) GetPayload() *models.ProjectGroupAuthResponse {
	return o.Payload
}

func (o *GetGroupProjectAuthorizationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectGroupAuthResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupProjectAuthorizationsBadRequest creates a GetGroupProjectAuthorizationsBadRequest with default headers values
func NewGetGroupProjectAuthorizationsBadRequest() *GetGroupProjectAuthorizationsBadRequest {
	return &GetGroupProjectAuthorizationsBadRequest{}
}

/*
GetGroupProjectAuthorizationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetGroupProjectAuthorizationsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get group project authorizations bad request response has a 2xx status code
func (o *GetGroupProjectAuthorizationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group project authorizations bad request response has a 3xx status code
func (o *GetGroupProjectAuthorizationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group project authorizations bad request response has a 4xx status code
func (o *GetGroupProjectAuthorizationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group project authorizations bad request response has a 5xx status code
func (o *GetGroupProjectAuthorizationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get group project authorizations bad request response a status code equal to that given
func (o *GetGroupProjectAuthorizationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGroupProjectAuthorizationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGroupProjectAuthorizationsBadRequest) String() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetGroupProjectAuthorizationsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetGroupProjectAuthorizationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupProjectAuthorizationsUnauthorized creates a GetGroupProjectAuthorizationsUnauthorized with default headers values
func NewGetGroupProjectAuthorizationsUnauthorized() *GetGroupProjectAuthorizationsUnauthorized {
	return &GetGroupProjectAuthorizationsUnauthorized{}
}

/*
GetGroupProjectAuthorizationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetGroupProjectAuthorizationsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get group project authorizations unauthorized response has a 2xx status code
func (o *GetGroupProjectAuthorizationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group project authorizations unauthorized response has a 3xx status code
func (o *GetGroupProjectAuthorizationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group project authorizations unauthorized response has a 4xx status code
func (o *GetGroupProjectAuthorizationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group project authorizations unauthorized response has a 5xx status code
func (o *GetGroupProjectAuthorizationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get group project authorizations unauthorized response a status code equal to that given
func (o *GetGroupProjectAuthorizationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGroupProjectAuthorizationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupProjectAuthorizationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGroupProjectAuthorizationsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetGroupProjectAuthorizationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupProjectAuthorizationsForbidden creates a GetGroupProjectAuthorizationsForbidden with default headers values
func NewGetGroupProjectAuthorizationsForbidden() *GetGroupProjectAuthorizationsForbidden {
	return &GetGroupProjectAuthorizationsForbidden{}
}

/*
GetGroupProjectAuthorizationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetGroupProjectAuthorizationsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get group project authorizations forbidden response has a 2xx status code
func (o *GetGroupProjectAuthorizationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group project authorizations forbidden response has a 3xx status code
func (o *GetGroupProjectAuthorizationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group project authorizations forbidden response has a 4xx status code
func (o *GetGroupProjectAuthorizationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get group project authorizations forbidden response has a 5xx status code
func (o *GetGroupProjectAuthorizationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get group project authorizations forbidden response a status code equal to that given
func (o *GetGroupProjectAuthorizationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGroupProjectAuthorizationsForbidden) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsForbidden  %+v", 403, o.Payload)
}

func (o *GetGroupProjectAuthorizationsForbidden) String() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsForbidden  %+v", 403, o.Payload)
}

func (o *GetGroupProjectAuthorizationsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetGroupProjectAuthorizationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupProjectAuthorizationsInternalServerError creates a GetGroupProjectAuthorizationsInternalServerError with default headers values
func NewGetGroupProjectAuthorizationsInternalServerError() *GetGroupProjectAuthorizationsInternalServerError {
	return &GetGroupProjectAuthorizationsInternalServerError{}
}

/*
GetGroupProjectAuthorizationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetGroupProjectAuthorizationsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get group project authorizations internal server error response has a 2xx status code
func (o *GetGroupProjectAuthorizationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get group project authorizations internal server error response has a 3xx status code
func (o *GetGroupProjectAuthorizationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get group project authorizations internal server error response has a 4xx status code
func (o *GetGroupProjectAuthorizationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get group project authorizations internal server error response has a 5xx status code
func (o *GetGroupProjectAuthorizationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get group project authorizations internal server error response a status code equal to that given
func (o *GetGroupProjectAuthorizationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetGroupProjectAuthorizationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupProjectAuthorizationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /projects/{id}/groups][%d] getGroupProjectAuthorizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetGroupProjectAuthorizationsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetGroupProjectAuthorizationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
