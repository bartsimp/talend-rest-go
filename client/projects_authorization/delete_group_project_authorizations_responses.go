// Code generated by go-swagger; DO NOT EDIT.

package projects_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// DeleteGroupProjectAuthorizationsReader is a Reader for the DeleteGroupProjectAuthorizations structure.
type DeleteGroupProjectAuthorizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGroupProjectAuthorizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteGroupProjectAuthorizationsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteGroupProjectAuthorizationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteGroupProjectAuthorizationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteGroupProjectAuthorizationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGroupProjectAuthorizationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteGroupProjectAuthorizationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteGroupProjectAuthorizationsNoContent creates a DeleteGroupProjectAuthorizationsNoContent with default headers values
func NewDeleteGroupProjectAuthorizationsNoContent() *DeleteGroupProjectAuthorizationsNoContent {
	return &DeleteGroupProjectAuthorizationsNoContent{}
}

/*
DeleteGroupProjectAuthorizationsNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteGroupProjectAuthorizationsNoContent struct {
}

// IsSuccess returns true when this delete group project authorizations no content response has a 2xx status code
func (o *DeleteGroupProjectAuthorizationsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete group project authorizations no content response has a 3xx status code
func (o *DeleteGroupProjectAuthorizationsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group project authorizations no content response has a 4xx status code
func (o *DeleteGroupProjectAuthorizationsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete group project authorizations no content response has a 5xx status code
func (o *DeleteGroupProjectAuthorizationsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group project authorizations no content response a status code equal to that given
func (o *DeleteGroupProjectAuthorizationsNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteGroupProjectAuthorizationsNoContent) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsNoContent ", 204)
}

func (o *DeleteGroupProjectAuthorizationsNoContent) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsNoContent ", 204)
}

func (o *DeleteGroupProjectAuthorizationsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGroupProjectAuthorizationsBadRequest creates a DeleteGroupProjectAuthorizationsBadRequest with default headers values
func NewDeleteGroupProjectAuthorizationsBadRequest() *DeleteGroupProjectAuthorizationsBadRequest {
	return &DeleteGroupProjectAuthorizationsBadRequest{}
}

/*
DeleteGroupProjectAuthorizationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteGroupProjectAuthorizationsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete group project authorizations bad request response has a 2xx status code
func (o *DeleteGroupProjectAuthorizationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group project authorizations bad request response has a 3xx status code
func (o *DeleteGroupProjectAuthorizationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group project authorizations bad request response has a 4xx status code
func (o *DeleteGroupProjectAuthorizationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group project authorizations bad request response has a 5xx status code
func (o *DeleteGroupProjectAuthorizationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group project authorizations bad request response a status code equal to that given
func (o *DeleteGroupProjectAuthorizationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteGroupProjectAuthorizationsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteGroupProjectAuthorizationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupProjectAuthorizationsUnauthorized creates a DeleteGroupProjectAuthorizationsUnauthorized with default headers values
func NewDeleteGroupProjectAuthorizationsUnauthorized() *DeleteGroupProjectAuthorizationsUnauthorized {
	return &DeleteGroupProjectAuthorizationsUnauthorized{}
}

/*
DeleteGroupProjectAuthorizationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteGroupProjectAuthorizationsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete group project authorizations unauthorized response has a 2xx status code
func (o *DeleteGroupProjectAuthorizationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group project authorizations unauthorized response has a 3xx status code
func (o *DeleteGroupProjectAuthorizationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group project authorizations unauthorized response has a 4xx status code
func (o *DeleteGroupProjectAuthorizationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group project authorizations unauthorized response has a 5xx status code
func (o *DeleteGroupProjectAuthorizationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group project authorizations unauthorized response a status code equal to that given
func (o *DeleteGroupProjectAuthorizationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteGroupProjectAuthorizationsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteGroupProjectAuthorizationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupProjectAuthorizationsForbidden creates a DeleteGroupProjectAuthorizationsForbidden with default headers values
func NewDeleteGroupProjectAuthorizationsForbidden() *DeleteGroupProjectAuthorizationsForbidden {
	return &DeleteGroupProjectAuthorizationsForbidden{}
}

/*
DeleteGroupProjectAuthorizationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteGroupProjectAuthorizationsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete group project authorizations forbidden response has a 2xx status code
func (o *DeleteGroupProjectAuthorizationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group project authorizations forbidden response has a 3xx status code
func (o *DeleteGroupProjectAuthorizationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group project authorizations forbidden response has a 4xx status code
func (o *DeleteGroupProjectAuthorizationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group project authorizations forbidden response has a 5xx status code
func (o *DeleteGroupProjectAuthorizationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group project authorizations forbidden response a status code equal to that given
func (o *DeleteGroupProjectAuthorizationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteGroupProjectAuthorizationsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsForbidden) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteGroupProjectAuthorizationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupProjectAuthorizationsNotFound creates a DeleteGroupProjectAuthorizationsNotFound with default headers values
func NewDeleteGroupProjectAuthorizationsNotFound() *DeleteGroupProjectAuthorizationsNotFound {
	return &DeleteGroupProjectAuthorizationsNotFound{}
}

/*
DeleteGroupProjectAuthorizationsNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteGroupProjectAuthorizationsNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete group project authorizations not found response has a 2xx status code
func (o *DeleteGroupProjectAuthorizationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group project authorizations not found response has a 3xx status code
func (o *DeleteGroupProjectAuthorizationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group project authorizations not found response has a 4xx status code
func (o *DeleteGroupProjectAuthorizationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group project authorizations not found response has a 5xx status code
func (o *DeleteGroupProjectAuthorizationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group project authorizations not found response a status code equal to that given
func (o *DeleteGroupProjectAuthorizationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteGroupProjectAuthorizationsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsNotFound) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteGroupProjectAuthorizationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupProjectAuthorizationsInternalServerError creates a DeleteGroupProjectAuthorizationsInternalServerError with default headers values
func NewDeleteGroupProjectAuthorizationsInternalServerError() *DeleteGroupProjectAuthorizationsInternalServerError {
	return &DeleteGroupProjectAuthorizationsInternalServerError{}
}

/*
DeleteGroupProjectAuthorizationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteGroupProjectAuthorizationsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete group project authorizations internal server error response has a 2xx status code
func (o *DeleteGroupProjectAuthorizationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group project authorizations internal server error response has a 3xx status code
func (o *DeleteGroupProjectAuthorizationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group project authorizations internal server error response has a 4xx status code
func (o *DeleteGroupProjectAuthorizationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete group project authorizations internal server error response has a 5xx status code
func (o *DeleteGroupProjectAuthorizationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete group project authorizations internal server error response a status code equal to that given
func (o *DeleteGroupProjectAuthorizationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteGroupProjectAuthorizationsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/groups/{groupId}][%d] deleteGroupProjectAuthorizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteGroupProjectAuthorizationsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteGroupProjectAuthorizationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
