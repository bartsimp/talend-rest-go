// Code generated by go-swagger; DO NOT EDIT.

package projects_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// DeleteUserProjectAuthorizationsReader is a Reader for the DeleteUserProjectAuthorizations structure.
type DeleteUserProjectAuthorizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserProjectAuthorizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteUserProjectAuthorizationsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUserProjectAuthorizationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUserProjectAuthorizationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUserProjectAuthorizationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUserProjectAuthorizationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserProjectAuthorizationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteUserProjectAuthorizationsNoContent creates a DeleteUserProjectAuthorizationsNoContent with default headers values
func NewDeleteUserProjectAuthorizationsNoContent() *DeleteUserProjectAuthorizationsNoContent {
	return &DeleteUserProjectAuthorizationsNoContent{}
}

/*
DeleteUserProjectAuthorizationsNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteUserProjectAuthorizationsNoContent struct {
}

// IsSuccess returns true when this delete user project authorizations no content response has a 2xx status code
func (o *DeleteUserProjectAuthorizationsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete user project authorizations no content response has a 3xx status code
func (o *DeleteUserProjectAuthorizationsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user project authorizations no content response has a 4xx status code
func (o *DeleteUserProjectAuthorizationsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user project authorizations no content response has a 5xx status code
func (o *DeleteUserProjectAuthorizationsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user project authorizations no content response a status code equal to that given
func (o *DeleteUserProjectAuthorizationsNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteUserProjectAuthorizationsNoContent) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsNoContent ", 204)
}

func (o *DeleteUserProjectAuthorizationsNoContent) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsNoContent ", 204)
}

func (o *DeleteUserProjectAuthorizationsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserProjectAuthorizationsBadRequest creates a DeleteUserProjectAuthorizationsBadRequest with default headers values
func NewDeleteUserProjectAuthorizationsBadRequest() *DeleteUserProjectAuthorizationsBadRequest {
	return &DeleteUserProjectAuthorizationsBadRequest{}
}

/*
DeleteUserProjectAuthorizationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteUserProjectAuthorizationsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete user project authorizations bad request response has a 2xx status code
func (o *DeleteUserProjectAuthorizationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user project authorizations bad request response has a 3xx status code
func (o *DeleteUserProjectAuthorizationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user project authorizations bad request response has a 4xx status code
func (o *DeleteUserProjectAuthorizationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user project authorizations bad request response has a 5xx status code
func (o *DeleteUserProjectAuthorizationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user project authorizations bad request response a status code equal to that given
func (o *DeleteUserProjectAuthorizationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteUserProjectAuthorizationsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUserProjectAuthorizationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserProjectAuthorizationsUnauthorized creates a DeleteUserProjectAuthorizationsUnauthorized with default headers values
func NewDeleteUserProjectAuthorizationsUnauthorized() *DeleteUserProjectAuthorizationsUnauthorized {
	return &DeleteUserProjectAuthorizationsUnauthorized{}
}

/*
DeleteUserProjectAuthorizationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteUserProjectAuthorizationsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete user project authorizations unauthorized response has a 2xx status code
func (o *DeleteUserProjectAuthorizationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user project authorizations unauthorized response has a 3xx status code
func (o *DeleteUserProjectAuthorizationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user project authorizations unauthorized response has a 4xx status code
func (o *DeleteUserProjectAuthorizationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user project authorizations unauthorized response has a 5xx status code
func (o *DeleteUserProjectAuthorizationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user project authorizations unauthorized response a status code equal to that given
func (o *DeleteUserProjectAuthorizationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteUserProjectAuthorizationsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUserProjectAuthorizationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserProjectAuthorizationsForbidden creates a DeleteUserProjectAuthorizationsForbidden with default headers values
func NewDeleteUserProjectAuthorizationsForbidden() *DeleteUserProjectAuthorizationsForbidden {
	return &DeleteUserProjectAuthorizationsForbidden{}
}

/*
DeleteUserProjectAuthorizationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteUserProjectAuthorizationsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete user project authorizations forbidden response has a 2xx status code
func (o *DeleteUserProjectAuthorizationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user project authorizations forbidden response has a 3xx status code
func (o *DeleteUserProjectAuthorizationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user project authorizations forbidden response has a 4xx status code
func (o *DeleteUserProjectAuthorizationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user project authorizations forbidden response has a 5xx status code
func (o *DeleteUserProjectAuthorizationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user project authorizations forbidden response a status code equal to that given
func (o *DeleteUserProjectAuthorizationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteUserProjectAuthorizationsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsForbidden) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUserProjectAuthorizationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserProjectAuthorizationsNotFound creates a DeleteUserProjectAuthorizationsNotFound with default headers values
func NewDeleteUserProjectAuthorizationsNotFound() *DeleteUserProjectAuthorizationsNotFound {
	return &DeleteUserProjectAuthorizationsNotFound{}
}

/*
DeleteUserProjectAuthorizationsNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteUserProjectAuthorizationsNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete user project authorizations not found response has a 2xx status code
func (o *DeleteUserProjectAuthorizationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user project authorizations not found response has a 3xx status code
func (o *DeleteUserProjectAuthorizationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user project authorizations not found response has a 4xx status code
func (o *DeleteUserProjectAuthorizationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user project authorizations not found response has a 5xx status code
func (o *DeleteUserProjectAuthorizationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user project authorizations not found response a status code equal to that given
func (o *DeleteUserProjectAuthorizationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteUserProjectAuthorizationsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsNotFound) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUserProjectAuthorizationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserProjectAuthorizationsInternalServerError creates a DeleteUserProjectAuthorizationsInternalServerError with default headers values
func NewDeleteUserProjectAuthorizationsInternalServerError() *DeleteUserProjectAuthorizationsInternalServerError {
	return &DeleteUserProjectAuthorizationsInternalServerError{}
}

/*
DeleteUserProjectAuthorizationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteUserProjectAuthorizationsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete user project authorizations internal server error response has a 2xx status code
func (o *DeleteUserProjectAuthorizationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user project authorizations internal server error response has a 3xx status code
func (o *DeleteUserProjectAuthorizationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user project authorizations internal server error response has a 4xx status code
func (o *DeleteUserProjectAuthorizationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user project authorizations internal server error response has a 5xx status code
func (o *DeleteUserProjectAuthorizationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user project authorizations internal server error response a status code equal to that given
func (o *DeleteUserProjectAuthorizationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteUserProjectAuthorizationsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/users/{userId}][%d] deleteUserProjectAuthorizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserProjectAuthorizationsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteUserProjectAuthorizationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
