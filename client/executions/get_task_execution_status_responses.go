// Code generated by go-swagger; DO NOT EDIT.

package executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetTaskExecutionStatusReader is a Reader for the GetTaskExecutionStatus structure.
type GetTaskExecutionStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTaskExecutionStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTaskExecutionStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTaskExecutionStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTaskExecutionStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTaskExecutionStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTaskExecutionStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTaskExecutionStatusTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTaskExecutionStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTaskExecutionStatusOK creates a GetTaskExecutionStatusOK with default headers values
func NewGetTaskExecutionStatusOK() *GetTaskExecutionStatusOK {
	return &GetTaskExecutionStatusOK{}
}

/*
GetTaskExecutionStatusOK describes a response with status code 200, with default header values.

Successful response
*/
type GetTaskExecutionStatusOK struct {
	Payload *models.JobExecutionStatusV21
}

// IsSuccess returns true when this get task execution status o k response has a 2xx status code
func (o *GetTaskExecutionStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get task execution status o k response has a 3xx status code
func (o *GetTaskExecutionStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task execution status o k response has a 4xx status code
func (o *GetTaskExecutionStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get task execution status o k response has a 5xx status code
func (o *GetTaskExecutionStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get task execution status o k response a status code equal to that given
func (o *GetTaskExecutionStatusOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTaskExecutionStatusOK) Error() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusOK  %+v", 200, o.Payload)
}

func (o *GetTaskExecutionStatusOK) String() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusOK  %+v", 200, o.Payload)
}

func (o *GetTaskExecutionStatusOK) GetPayload() *models.JobExecutionStatusV21 {
	return o.Payload
}

func (o *GetTaskExecutionStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobExecutionStatusV21)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskExecutionStatusBadRequest creates a GetTaskExecutionStatusBadRequest with default headers values
func NewGetTaskExecutionStatusBadRequest() *GetTaskExecutionStatusBadRequest {
	return &GetTaskExecutionStatusBadRequest{}
}

/*
GetTaskExecutionStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTaskExecutionStatusBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task execution status bad request response has a 2xx status code
func (o *GetTaskExecutionStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task execution status bad request response has a 3xx status code
func (o *GetTaskExecutionStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task execution status bad request response has a 4xx status code
func (o *GetTaskExecutionStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task execution status bad request response has a 5xx status code
func (o *GetTaskExecutionStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get task execution status bad request response a status code equal to that given
func (o *GetTaskExecutionStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetTaskExecutionStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetTaskExecutionStatusBadRequest) String() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetTaskExecutionStatusBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskExecutionStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskExecutionStatusUnauthorized creates a GetTaskExecutionStatusUnauthorized with default headers values
func NewGetTaskExecutionStatusUnauthorized() *GetTaskExecutionStatusUnauthorized {
	return &GetTaskExecutionStatusUnauthorized{}
}

/*
GetTaskExecutionStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTaskExecutionStatusUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task execution status unauthorized response has a 2xx status code
func (o *GetTaskExecutionStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task execution status unauthorized response has a 3xx status code
func (o *GetTaskExecutionStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task execution status unauthorized response has a 4xx status code
func (o *GetTaskExecutionStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task execution status unauthorized response has a 5xx status code
func (o *GetTaskExecutionStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get task execution status unauthorized response a status code equal to that given
func (o *GetTaskExecutionStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetTaskExecutionStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTaskExecutionStatusUnauthorized) String() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTaskExecutionStatusUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskExecutionStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskExecutionStatusForbidden creates a GetTaskExecutionStatusForbidden with default headers values
func NewGetTaskExecutionStatusForbidden() *GetTaskExecutionStatusForbidden {
	return &GetTaskExecutionStatusForbidden{}
}

/*
GetTaskExecutionStatusForbidden describes a response with status code 403, with default header values.

Forbidden - no permissions to access resource
*/
type GetTaskExecutionStatusForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task execution status forbidden response has a 2xx status code
func (o *GetTaskExecutionStatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task execution status forbidden response has a 3xx status code
func (o *GetTaskExecutionStatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task execution status forbidden response has a 4xx status code
func (o *GetTaskExecutionStatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task execution status forbidden response has a 5xx status code
func (o *GetTaskExecutionStatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get task execution status forbidden response a status code equal to that given
func (o *GetTaskExecutionStatusForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetTaskExecutionStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusForbidden  %+v", 403, o.Payload)
}

func (o *GetTaskExecutionStatusForbidden) String() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusForbidden  %+v", 403, o.Payload)
}

func (o *GetTaskExecutionStatusForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskExecutionStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskExecutionStatusNotFound creates a GetTaskExecutionStatusNotFound with default headers values
func NewGetTaskExecutionStatusNotFound() *GetTaskExecutionStatusNotFound {
	return &GetTaskExecutionStatusNotFound{}
}

/*
GetTaskExecutionStatusNotFound describes a response with status code 404, with default header values.

Not found - resource not found
*/
type GetTaskExecutionStatusNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task execution status not found response has a 2xx status code
func (o *GetTaskExecutionStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task execution status not found response has a 3xx status code
func (o *GetTaskExecutionStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task execution status not found response has a 4xx status code
func (o *GetTaskExecutionStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task execution status not found response has a 5xx status code
func (o *GetTaskExecutionStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get task execution status not found response a status code equal to that given
func (o *GetTaskExecutionStatusNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetTaskExecutionStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetTaskExecutionStatusNotFound) String() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetTaskExecutionStatusNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskExecutionStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskExecutionStatusTooManyRequests creates a GetTaskExecutionStatusTooManyRequests with default headers values
func NewGetTaskExecutionStatusTooManyRequests() *GetTaskExecutionStatusTooManyRequests {
	return &GetTaskExecutionStatusTooManyRequests{}
}

/*
GetTaskExecutionStatusTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetTaskExecutionStatusTooManyRequests struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task execution status too many requests response has a 2xx status code
func (o *GetTaskExecutionStatusTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task execution status too many requests response has a 3xx status code
func (o *GetTaskExecutionStatusTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task execution status too many requests response has a 4xx status code
func (o *GetTaskExecutionStatusTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task execution status too many requests response has a 5xx status code
func (o *GetTaskExecutionStatusTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get task execution status too many requests response a status code equal to that given
func (o *GetTaskExecutionStatusTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetTaskExecutionStatusTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTaskExecutionStatusTooManyRequests) String() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTaskExecutionStatusTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskExecutionStatusTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskExecutionStatusInternalServerError creates a GetTaskExecutionStatusInternalServerError with default headers values
func NewGetTaskExecutionStatusInternalServerError() *GetTaskExecutionStatusInternalServerError {
	return &GetTaskExecutionStatusInternalServerError{}
}

/*
GetTaskExecutionStatusInternalServerError describes a response with status code 500, with default header values.

Server error - something went wrong on server side
*/
type GetTaskExecutionStatusInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task execution status internal server error response has a 2xx status code
func (o *GetTaskExecutionStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task execution status internal server error response has a 3xx status code
func (o *GetTaskExecutionStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task execution status internal server error response has a 4xx status code
func (o *GetTaskExecutionStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get task execution status internal server error response has a 5xx status code
func (o *GetTaskExecutionStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get task execution status internal server error response a status code equal to that given
func (o *GetTaskExecutionStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetTaskExecutionStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTaskExecutionStatusInternalServerError) String() string {
	return fmt.Sprintf("[GET /executions/{id}][%d] getTaskExecutionStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTaskExecutionStatusInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskExecutionStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
