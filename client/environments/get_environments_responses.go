// Code generated by go-swagger; DO NOT EDIT.

package environments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetEnvironmentsReader is a Reader for the GetEnvironments structure.
type GetEnvironmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnvironmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnvironmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEnvironmentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEnvironmentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEnvironmentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEnvironmentsOK creates a GetEnvironmentsOK with default headers values
func NewGetEnvironmentsOK() *GetEnvironmentsOK {
	return &GetEnvironmentsOK{}
}

/*
GetEnvironmentsOK describes a response with status code 200, with default header values.

OK
*/
type GetEnvironmentsOK struct {
	Payload []*models.EnvironmentInfo
}

// IsSuccess returns true when this get environments o k response has a 2xx status code
func (o *GetEnvironmentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get environments o k response has a 3xx status code
func (o *GetEnvironmentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environments o k response has a 4xx status code
func (o *GetEnvironmentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get environments o k response has a 5xx status code
func (o *GetEnvironmentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get environments o k response a status code equal to that given
func (o *GetEnvironmentsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetEnvironmentsOK) Error() string {
	return fmt.Sprintf("[GET /environments][%d] getEnvironmentsOK  %+v", 200, o.Payload)
}

func (o *GetEnvironmentsOK) String() string {
	return fmt.Sprintf("[GET /environments][%d] getEnvironmentsOK  %+v", 200, o.Payload)
}

func (o *GetEnvironmentsOK) GetPayload() []*models.EnvironmentInfo {
	return o.Payload
}

func (o *GetEnvironmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentsUnauthorized creates a GetEnvironmentsUnauthorized with default headers values
func NewGetEnvironmentsUnauthorized() *GetEnvironmentsUnauthorized {
	return &GetEnvironmentsUnauthorized{}
}

/*
GetEnvironmentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEnvironmentsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get environments unauthorized response has a 2xx status code
func (o *GetEnvironmentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environments unauthorized response has a 3xx status code
func (o *GetEnvironmentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environments unauthorized response has a 4xx status code
func (o *GetEnvironmentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environments unauthorized response has a 5xx status code
func (o *GetEnvironmentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get environments unauthorized response a status code equal to that given
func (o *GetEnvironmentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetEnvironmentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /environments][%d] getEnvironmentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEnvironmentsUnauthorized) String() string {
	return fmt.Sprintf("[GET /environments][%d] getEnvironmentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEnvironmentsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEnvironmentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentsForbidden creates a GetEnvironmentsForbidden with default headers values
func NewGetEnvironmentsForbidden() *GetEnvironmentsForbidden {
	return &GetEnvironmentsForbidden{}
}

/*
GetEnvironmentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEnvironmentsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get environments forbidden response has a 2xx status code
func (o *GetEnvironmentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environments forbidden response has a 3xx status code
func (o *GetEnvironmentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environments forbidden response has a 4xx status code
func (o *GetEnvironmentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environments forbidden response has a 5xx status code
func (o *GetEnvironmentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get environments forbidden response a status code equal to that given
func (o *GetEnvironmentsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetEnvironmentsForbidden) Error() string {
	return fmt.Sprintf("[GET /environments][%d] getEnvironmentsForbidden  %+v", 403, o.Payload)
}

func (o *GetEnvironmentsForbidden) String() string {
	return fmt.Sprintf("[GET /environments][%d] getEnvironmentsForbidden  %+v", 403, o.Payload)
}

func (o *GetEnvironmentsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEnvironmentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentsInternalServerError creates a GetEnvironmentsInternalServerError with default headers values
func NewGetEnvironmentsInternalServerError() *GetEnvironmentsInternalServerError {
	return &GetEnvironmentsInternalServerError{}
}

/*
GetEnvironmentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetEnvironmentsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get environments internal server error response has a 2xx status code
func (o *GetEnvironmentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environments internal server error response has a 3xx status code
func (o *GetEnvironmentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environments internal server error response has a 4xx status code
func (o *GetEnvironmentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get environments internal server error response has a 5xx status code
func (o *GetEnvironmentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get environments internal server error response a status code equal to that given
func (o *GetEnvironmentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetEnvironmentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /environments][%d] getEnvironmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEnvironmentsInternalServerError) String() string {
	return fmt.Sprintf("[GET /environments][%d] getEnvironmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEnvironmentsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEnvironmentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
