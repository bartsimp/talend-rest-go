// Code generated by go-swagger; DO NOT EDIT.

package environments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// DeleteEnvironmentReader is a Reader for the DeleteEnvironment structure.
type DeleteEnvironmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEnvironmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteEnvironmentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteEnvironmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteEnvironmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteEnvironmentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEnvironmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteEnvironmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEnvironmentNoContent creates a DeleteEnvironmentNoContent with default headers values
func NewDeleteEnvironmentNoContent() *DeleteEnvironmentNoContent {
	return &DeleteEnvironmentNoContent{}
}

/*
DeleteEnvironmentNoContent describes a response with status code 204, with default header values.

Environment successfully deleted
*/
type DeleteEnvironmentNoContent struct {
}

// IsSuccess returns true when this delete environment no content response has a 2xx status code
func (o *DeleteEnvironmentNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete environment no content response has a 3xx status code
func (o *DeleteEnvironmentNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete environment no content response has a 4xx status code
func (o *DeleteEnvironmentNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete environment no content response has a 5xx status code
func (o *DeleteEnvironmentNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete environment no content response a status code equal to that given
func (o *DeleteEnvironmentNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteEnvironmentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentNoContent ", 204)
}

func (o *DeleteEnvironmentNoContent) String() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentNoContent ", 204)
}

func (o *DeleteEnvironmentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEnvironmentBadRequest creates a DeleteEnvironmentBadRequest with default headers values
func NewDeleteEnvironmentBadRequest() *DeleteEnvironmentBadRequest {
	return &DeleteEnvironmentBadRequest{}
}

/*
DeleteEnvironmentBadRequest describes a response with status code 400, with default header values.

Cannot delete environment: it is used in promotions(s)
*/
type DeleteEnvironmentBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete environment bad request response has a 2xx status code
func (o *DeleteEnvironmentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete environment bad request response has a 3xx status code
func (o *DeleteEnvironmentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete environment bad request response has a 4xx status code
func (o *DeleteEnvironmentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete environment bad request response has a 5xx status code
func (o *DeleteEnvironmentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete environment bad request response a status code equal to that given
func (o *DeleteEnvironmentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteEnvironmentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteEnvironmentBadRequest) String() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteEnvironmentBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteEnvironmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEnvironmentUnauthorized creates a DeleteEnvironmentUnauthorized with default headers values
func NewDeleteEnvironmentUnauthorized() *DeleteEnvironmentUnauthorized {
	return &DeleteEnvironmentUnauthorized{}
}

/*
DeleteEnvironmentUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteEnvironmentUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete environment unauthorized response has a 2xx status code
func (o *DeleteEnvironmentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete environment unauthorized response has a 3xx status code
func (o *DeleteEnvironmentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete environment unauthorized response has a 4xx status code
func (o *DeleteEnvironmentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete environment unauthorized response has a 5xx status code
func (o *DeleteEnvironmentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete environment unauthorized response a status code equal to that given
func (o *DeleteEnvironmentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteEnvironmentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteEnvironmentUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteEnvironmentUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteEnvironmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEnvironmentForbidden creates a DeleteEnvironmentForbidden with default headers values
func NewDeleteEnvironmentForbidden() *DeleteEnvironmentForbidden {
	return &DeleteEnvironmentForbidden{}
}

/*
DeleteEnvironmentForbidden describes a response with status code 403, with default header values.

Not authorized to delete the environment
*/
type DeleteEnvironmentForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete environment forbidden response has a 2xx status code
func (o *DeleteEnvironmentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete environment forbidden response has a 3xx status code
func (o *DeleteEnvironmentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete environment forbidden response has a 4xx status code
func (o *DeleteEnvironmentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete environment forbidden response has a 5xx status code
func (o *DeleteEnvironmentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete environment forbidden response a status code equal to that given
func (o *DeleteEnvironmentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteEnvironmentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentForbidden  %+v", 403, o.Payload)
}

func (o *DeleteEnvironmentForbidden) String() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentForbidden  %+v", 403, o.Payload)
}

func (o *DeleteEnvironmentForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteEnvironmentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEnvironmentNotFound creates a DeleteEnvironmentNotFound with default headers values
func NewDeleteEnvironmentNotFound() *DeleteEnvironmentNotFound {
	return &DeleteEnvironmentNotFound{}
}

/*
DeleteEnvironmentNotFound describes a response with status code 404, with default header values.

Environment not found
*/
type DeleteEnvironmentNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete environment not found response has a 2xx status code
func (o *DeleteEnvironmentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete environment not found response has a 3xx status code
func (o *DeleteEnvironmentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete environment not found response has a 4xx status code
func (o *DeleteEnvironmentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete environment not found response has a 5xx status code
func (o *DeleteEnvironmentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete environment not found response a status code equal to that given
func (o *DeleteEnvironmentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteEnvironmentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentNotFound  %+v", 404, o.Payload)
}

func (o *DeleteEnvironmentNotFound) String() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentNotFound  %+v", 404, o.Payload)
}

func (o *DeleteEnvironmentNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteEnvironmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEnvironmentInternalServerError creates a DeleteEnvironmentInternalServerError with default headers values
func NewDeleteEnvironmentInternalServerError() *DeleteEnvironmentInternalServerError {
	return &DeleteEnvironmentInternalServerError{}
}

/*
DeleteEnvironmentInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteEnvironmentInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete environment internal server error response has a 2xx status code
func (o *DeleteEnvironmentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete environment internal server error response has a 3xx status code
func (o *DeleteEnvironmentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete environment internal server error response has a 4xx status code
func (o *DeleteEnvironmentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete environment internal server error response has a 5xx status code
func (o *DeleteEnvironmentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete environment internal server error response a status code equal to that given
func (o *DeleteEnvironmentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteEnvironmentInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteEnvironmentInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /environments/{environmentId}][%d] deleteEnvironmentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteEnvironmentInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteEnvironmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
