// Code generated by go-swagger; DO NOT EDIT.

package plans_executables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetPlanRunConfigurationReader is a Reader for the GetPlanRunConfiguration structure.
type GetPlanRunConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPlanRunConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPlanRunConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPlanRunConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPlanRunConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPlanRunConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPlanRunConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPlanRunConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPlanRunConfigurationOK creates a GetPlanRunConfigurationOK with default headers values
func NewGetPlanRunConfigurationOK() *GetPlanRunConfigurationOK {
	return &GetPlanRunConfigurationOK{}
}

/*
GetPlanRunConfigurationOK describes a response with status code 200, with default header values.

OK
*/
type GetPlanRunConfigurationOK struct {
	Payload *models.PlanRunConfig
}

// IsSuccess returns true when this get plan run configuration o k response has a 2xx status code
func (o *GetPlanRunConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get plan run configuration o k response has a 3xx status code
func (o *GetPlanRunConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan run configuration o k response has a 4xx status code
func (o *GetPlanRunConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plan run configuration o k response has a 5xx status code
func (o *GetPlanRunConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan run configuration o k response a status code equal to that given
func (o *GetPlanRunConfigurationOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetPlanRunConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationOK  %+v", 200, o.Payload)
}

func (o *GetPlanRunConfigurationOK) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationOK  %+v", 200, o.Payload)
}

func (o *GetPlanRunConfigurationOK) GetPayload() *models.PlanRunConfig {
	return o.Payload
}

func (o *GetPlanRunConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlanRunConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanRunConfigurationBadRequest creates a GetPlanRunConfigurationBadRequest with default headers values
func NewGetPlanRunConfigurationBadRequest() *GetPlanRunConfigurationBadRequest {
	return &GetPlanRunConfigurationBadRequest{}
}

/*
GetPlanRunConfigurationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPlanRunConfigurationBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan run configuration bad request response has a 2xx status code
func (o *GetPlanRunConfigurationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan run configuration bad request response has a 3xx status code
func (o *GetPlanRunConfigurationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan run configuration bad request response has a 4xx status code
func (o *GetPlanRunConfigurationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan run configuration bad request response has a 5xx status code
func (o *GetPlanRunConfigurationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan run configuration bad request response a status code equal to that given
func (o *GetPlanRunConfigurationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetPlanRunConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GetPlanRunConfigurationBadRequest) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GetPlanRunConfigurationBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanRunConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanRunConfigurationUnauthorized creates a GetPlanRunConfigurationUnauthorized with default headers values
func NewGetPlanRunConfigurationUnauthorized() *GetPlanRunConfigurationUnauthorized {
	return &GetPlanRunConfigurationUnauthorized{}
}

/*
GetPlanRunConfigurationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPlanRunConfigurationUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan run configuration unauthorized response has a 2xx status code
func (o *GetPlanRunConfigurationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan run configuration unauthorized response has a 3xx status code
func (o *GetPlanRunConfigurationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan run configuration unauthorized response has a 4xx status code
func (o *GetPlanRunConfigurationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan run configuration unauthorized response has a 5xx status code
func (o *GetPlanRunConfigurationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan run configuration unauthorized response a status code equal to that given
func (o *GetPlanRunConfigurationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetPlanRunConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPlanRunConfigurationUnauthorized) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPlanRunConfigurationUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanRunConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanRunConfigurationForbidden creates a GetPlanRunConfigurationForbidden with default headers values
func NewGetPlanRunConfigurationForbidden() *GetPlanRunConfigurationForbidden {
	return &GetPlanRunConfigurationForbidden{}
}

/*
GetPlanRunConfigurationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPlanRunConfigurationForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan run configuration forbidden response has a 2xx status code
func (o *GetPlanRunConfigurationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan run configuration forbidden response has a 3xx status code
func (o *GetPlanRunConfigurationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan run configuration forbidden response has a 4xx status code
func (o *GetPlanRunConfigurationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan run configuration forbidden response has a 5xx status code
func (o *GetPlanRunConfigurationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan run configuration forbidden response a status code equal to that given
func (o *GetPlanRunConfigurationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetPlanRunConfigurationForbidden) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationForbidden  %+v", 403, o.Payload)
}

func (o *GetPlanRunConfigurationForbidden) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationForbidden  %+v", 403, o.Payload)
}

func (o *GetPlanRunConfigurationForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanRunConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanRunConfigurationNotFound creates a GetPlanRunConfigurationNotFound with default headers values
func NewGetPlanRunConfigurationNotFound() *GetPlanRunConfigurationNotFound {
	return &GetPlanRunConfigurationNotFound{}
}

/*
GetPlanRunConfigurationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPlanRunConfigurationNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan run configuration not found response has a 2xx status code
func (o *GetPlanRunConfigurationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan run configuration not found response has a 3xx status code
func (o *GetPlanRunConfigurationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan run configuration not found response has a 4xx status code
func (o *GetPlanRunConfigurationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan run configuration not found response has a 5xx status code
func (o *GetPlanRunConfigurationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan run configuration not found response a status code equal to that given
func (o *GetPlanRunConfigurationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetPlanRunConfigurationNotFound) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationNotFound  %+v", 404, o.Payload)
}

func (o *GetPlanRunConfigurationNotFound) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationNotFound  %+v", 404, o.Payload)
}

func (o *GetPlanRunConfigurationNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanRunConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanRunConfigurationInternalServerError creates a GetPlanRunConfigurationInternalServerError with default headers values
func NewGetPlanRunConfigurationInternalServerError() *GetPlanRunConfigurationInternalServerError {
	return &GetPlanRunConfigurationInternalServerError{}
}

/*
GetPlanRunConfigurationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPlanRunConfigurationInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan run configuration internal server error response has a 2xx status code
func (o *GetPlanRunConfigurationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan run configuration internal server error response has a 3xx status code
func (o *GetPlanRunConfigurationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan run configuration internal server error response has a 4xx status code
func (o *GetPlanRunConfigurationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plan run configuration internal server error response has a 5xx status code
func (o *GetPlanRunConfigurationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get plan run configuration internal server error response a status code equal to that given
func (o *GetPlanRunConfigurationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetPlanRunConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPlanRunConfigurationInternalServerError) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config][%d] getPlanRunConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPlanRunConfigurationInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanRunConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
