// Code generated by go-swagger; DO NOT EDIT.

package plans_executables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetAvailablePlansReader is a Reader for the GetAvailablePlans structure.
type GetAvailablePlansReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAvailablePlansReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAvailablePlansOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAvailablePlansBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAvailablePlansUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAvailablePlansForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAvailablePlansInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAvailablePlansOK creates a GetAvailablePlansOK with default headers values
func NewGetAvailablePlansOK() *GetAvailablePlansOK {
	return &GetAvailablePlansOK{}
}

/*
GetAvailablePlansOK describes a response with status code 200, with default header values.

OK
*/
type GetAvailablePlansOK struct {
	Payload *models.Page
}

// IsSuccess returns true when this get available plans o k response has a 2xx status code
func (o *GetAvailablePlansOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get available plans o k response has a 3xx status code
func (o *GetAvailablePlansOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available plans o k response has a 4xx status code
func (o *GetAvailablePlansOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get available plans o k response has a 5xx status code
func (o *GetAvailablePlansOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get available plans o k response a status code equal to that given
func (o *GetAvailablePlansOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAvailablePlansOK) Error() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansOK  %+v", 200, o.Payload)
}

func (o *GetAvailablePlansOK) String() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansOK  %+v", 200, o.Payload)
}

func (o *GetAvailablePlansOK) GetPayload() *models.Page {
	return o.Payload
}

func (o *GetAvailablePlansOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Page)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailablePlansBadRequest creates a GetAvailablePlansBadRequest with default headers values
func NewGetAvailablePlansBadRequest() *GetAvailablePlansBadRequest {
	return &GetAvailablePlansBadRequest{}
}

/*
GetAvailablePlansBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAvailablePlansBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get available plans bad request response has a 2xx status code
func (o *GetAvailablePlansBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available plans bad request response has a 3xx status code
func (o *GetAvailablePlansBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available plans bad request response has a 4xx status code
func (o *GetAvailablePlansBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available plans bad request response has a 5xx status code
func (o *GetAvailablePlansBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get available plans bad request response a status code equal to that given
func (o *GetAvailablePlansBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAvailablePlansBadRequest) Error() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansBadRequest  %+v", 400, o.Payload)
}

func (o *GetAvailablePlansBadRequest) String() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansBadRequest  %+v", 400, o.Payload)
}

func (o *GetAvailablePlansBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAvailablePlansBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailablePlansUnauthorized creates a GetAvailablePlansUnauthorized with default headers values
func NewGetAvailablePlansUnauthorized() *GetAvailablePlansUnauthorized {
	return &GetAvailablePlansUnauthorized{}
}

/*
GetAvailablePlansUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAvailablePlansUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get available plans unauthorized response has a 2xx status code
func (o *GetAvailablePlansUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available plans unauthorized response has a 3xx status code
func (o *GetAvailablePlansUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available plans unauthorized response has a 4xx status code
func (o *GetAvailablePlansUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available plans unauthorized response has a 5xx status code
func (o *GetAvailablePlansUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get available plans unauthorized response a status code equal to that given
func (o *GetAvailablePlansUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAvailablePlansUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAvailablePlansUnauthorized) String() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAvailablePlansUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAvailablePlansUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailablePlansForbidden creates a GetAvailablePlansForbidden with default headers values
func NewGetAvailablePlansForbidden() *GetAvailablePlansForbidden {
	return &GetAvailablePlansForbidden{}
}

/*
GetAvailablePlansForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAvailablePlansForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get available plans forbidden response has a 2xx status code
func (o *GetAvailablePlansForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available plans forbidden response has a 3xx status code
func (o *GetAvailablePlansForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available plans forbidden response has a 4xx status code
func (o *GetAvailablePlansForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available plans forbidden response has a 5xx status code
func (o *GetAvailablePlansForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get available plans forbidden response a status code equal to that given
func (o *GetAvailablePlansForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAvailablePlansForbidden) Error() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansForbidden  %+v", 403, o.Payload)
}

func (o *GetAvailablePlansForbidden) String() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansForbidden  %+v", 403, o.Payload)
}

func (o *GetAvailablePlansForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAvailablePlansForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailablePlansInternalServerError creates a GetAvailablePlansInternalServerError with default headers values
func NewGetAvailablePlansInternalServerError() *GetAvailablePlansInternalServerError {
	return &GetAvailablePlansInternalServerError{}
}

/*
GetAvailablePlansInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAvailablePlansInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get available plans internal server error response has a 2xx status code
func (o *GetAvailablePlansInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available plans internal server error response has a 3xx status code
func (o *GetAvailablePlansInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available plans internal server error response has a 4xx status code
func (o *GetAvailablePlansInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get available plans internal server error response has a 5xx status code
func (o *GetAvailablePlansInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get available plans internal server error response a status code equal to that given
func (o *GetAvailablePlansInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAvailablePlansInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAvailablePlansInternalServerError) String() string {
	return fmt.Sprintf("[GET /executables/plans][%d] getAvailablePlansInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAvailablePlansInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAvailablePlansInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
