// Code generated by go-swagger; DO NOT EDIT.

package plans_executables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetPlanScheduledEventsReader is a Reader for the GetPlanScheduledEvents structure.
type GetPlanScheduledEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPlanScheduledEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPlanScheduledEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPlanScheduledEventsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPlanScheduledEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPlanScheduledEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPlanScheduledEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPlanScheduledEventsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPlanScheduledEventsOK creates a GetPlanScheduledEventsOK with default headers values
func NewGetPlanScheduledEventsOK() *GetPlanScheduledEventsOK {
	return &GetPlanScheduledEventsOK{}
}

/*
GetPlanScheduledEventsOK describes a response with status code 200, with default header values.

OK
*/
type GetPlanScheduledEventsOK struct {
	Payload *models.Page
}

// IsSuccess returns true when this get plan scheduled events o k response has a 2xx status code
func (o *GetPlanScheduledEventsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get plan scheduled events o k response has a 3xx status code
func (o *GetPlanScheduledEventsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan scheduled events o k response has a 4xx status code
func (o *GetPlanScheduledEventsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plan scheduled events o k response has a 5xx status code
func (o *GetPlanScheduledEventsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan scheduled events o k response a status code equal to that given
func (o *GetPlanScheduledEventsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetPlanScheduledEventsOK) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsOK  %+v", 200, o.Payload)
}

func (o *GetPlanScheduledEventsOK) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsOK  %+v", 200, o.Payload)
}

func (o *GetPlanScheduledEventsOK) GetPayload() *models.Page {
	return o.Payload
}

func (o *GetPlanScheduledEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Page)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanScheduledEventsBadRequest creates a GetPlanScheduledEventsBadRequest with default headers values
func NewGetPlanScheduledEventsBadRequest() *GetPlanScheduledEventsBadRequest {
	return &GetPlanScheduledEventsBadRequest{}
}

/*
GetPlanScheduledEventsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPlanScheduledEventsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan scheduled events bad request response has a 2xx status code
func (o *GetPlanScheduledEventsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan scheduled events bad request response has a 3xx status code
func (o *GetPlanScheduledEventsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan scheduled events bad request response has a 4xx status code
func (o *GetPlanScheduledEventsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan scheduled events bad request response has a 5xx status code
func (o *GetPlanScheduledEventsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan scheduled events bad request response a status code equal to that given
func (o *GetPlanScheduledEventsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetPlanScheduledEventsBadRequest) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsBadRequest  %+v", 400, o.Payload)
}

func (o *GetPlanScheduledEventsBadRequest) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsBadRequest  %+v", 400, o.Payload)
}

func (o *GetPlanScheduledEventsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanScheduledEventsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanScheduledEventsUnauthorized creates a GetPlanScheduledEventsUnauthorized with default headers values
func NewGetPlanScheduledEventsUnauthorized() *GetPlanScheduledEventsUnauthorized {
	return &GetPlanScheduledEventsUnauthorized{}
}

/*
GetPlanScheduledEventsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPlanScheduledEventsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan scheduled events unauthorized response has a 2xx status code
func (o *GetPlanScheduledEventsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan scheduled events unauthorized response has a 3xx status code
func (o *GetPlanScheduledEventsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan scheduled events unauthorized response has a 4xx status code
func (o *GetPlanScheduledEventsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan scheduled events unauthorized response has a 5xx status code
func (o *GetPlanScheduledEventsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan scheduled events unauthorized response a status code equal to that given
func (o *GetPlanScheduledEventsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetPlanScheduledEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPlanScheduledEventsUnauthorized) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPlanScheduledEventsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanScheduledEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanScheduledEventsForbidden creates a GetPlanScheduledEventsForbidden with default headers values
func NewGetPlanScheduledEventsForbidden() *GetPlanScheduledEventsForbidden {
	return &GetPlanScheduledEventsForbidden{}
}

/*
GetPlanScheduledEventsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPlanScheduledEventsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan scheduled events forbidden response has a 2xx status code
func (o *GetPlanScheduledEventsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan scheduled events forbidden response has a 3xx status code
func (o *GetPlanScheduledEventsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan scheduled events forbidden response has a 4xx status code
func (o *GetPlanScheduledEventsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan scheduled events forbidden response has a 5xx status code
func (o *GetPlanScheduledEventsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan scheduled events forbidden response a status code equal to that given
func (o *GetPlanScheduledEventsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetPlanScheduledEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsForbidden  %+v", 403, o.Payload)
}

func (o *GetPlanScheduledEventsForbidden) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsForbidden  %+v", 403, o.Payload)
}

func (o *GetPlanScheduledEventsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanScheduledEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanScheduledEventsNotFound creates a GetPlanScheduledEventsNotFound with default headers values
func NewGetPlanScheduledEventsNotFound() *GetPlanScheduledEventsNotFound {
	return &GetPlanScheduledEventsNotFound{}
}

/*
GetPlanScheduledEventsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPlanScheduledEventsNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan scheduled events not found response has a 2xx status code
func (o *GetPlanScheduledEventsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan scheduled events not found response has a 3xx status code
func (o *GetPlanScheduledEventsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan scheduled events not found response has a 4xx status code
func (o *GetPlanScheduledEventsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan scheduled events not found response has a 5xx status code
func (o *GetPlanScheduledEventsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan scheduled events not found response a status code equal to that given
func (o *GetPlanScheduledEventsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetPlanScheduledEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsNotFound  %+v", 404, o.Payload)
}

func (o *GetPlanScheduledEventsNotFound) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsNotFound  %+v", 404, o.Payload)
}

func (o *GetPlanScheduledEventsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanScheduledEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanScheduledEventsInternalServerError creates a GetPlanScheduledEventsInternalServerError with default headers values
func NewGetPlanScheduledEventsInternalServerError() *GetPlanScheduledEventsInternalServerError {
	return &GetPlanScheduledEventsInternalServerError{}
}

/*
GetPlanScheduledEventsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPlanScheduledEventsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan scheduled events internal server error response has a 2xx status code
func (o *GetPlanScheduledEventsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan scheduled events internal server error response has a 3xx status code
func (o *GetPlanScheduledEventsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan scheduled events internal server error response has a 4xx status code
func (o *GetPlanScheduledEventsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plan scheduled events internal server error response has a 5xx status code
func (o *GetPlanScheduledEventsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get plan scheduled events internal server error response a status code equal to that given
func (o *GetPlanScheduledEventsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetPlanScheduledEventsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPlanScheduledEventsInternalServerError) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}/run-config/events][%d] getPlanScheduledEventsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPlanScheduledEventsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanScheduledEventsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
