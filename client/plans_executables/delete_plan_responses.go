// Code generated by go-swagger; DO NOT EDIT.

package plans_executables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// DeletePlanReader is a Reader for the DeletePlan structure.
type DeletePlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePlanNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeletePlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeletePlanConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeletePlanNoContent creates a DeletePlanNoContent with default headers values
func NewDeletePlanNoContent() *DeletePlanNoContent {
	return &DeletePlanNoContent{}
}

/*
DeletePlanNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeletePlanNoContent struct {
}

// IsSuccess returns true when this delete plan no content response has a 2xx status code
func (o *DeletePlanNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete plan no content response has a 3xx status code
func (o *DeletePlanNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plan no content response has a 4xx status code
func (o *DeletePlanNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete plan no content response has a 5xx status code
func (o *DeletePlanNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plan no content response a status code equal to that given
func (o *DeletePlanNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeletePlanNoContent) Error() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanNoContent ", 204)
}

func (o *DeletePlanNoContent) String() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanNoContent ", 204)
}

func (o *DeletePlanNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePlanBadRequest creates a DeletePlanBadRequest with default headers values
func NewDeletePlanBadRequest() *DeletePlanBadRequest {
	return &DeletePlanBadRequest{}
}

/*
DeletePlanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeletePlanBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete plan bad request response has a 2xx status code
func (o *DeletePlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete plan bad request response has a 3xx status code
func (o *DeletePlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plan bad request response has a 4xx status code
func (o *DeletePlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete plan bad request response has a 5xx status code
func (o *DeletePlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plan bad request response a status code equal to that given
func (o *DeletePlanBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeletePlanBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanBadRequest  %+v", 400, o.Payload)
}

func (o *DeletePlanBadRequest) String() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanBadRequest  %+v", 400, o.Payload)
}

func (o *DeletePlanBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePlanUnauthorized creates a DeletePlanUnauthorized with default headers values
func NewDeletePlanUnauthorized() *DeletePlanUnauthorized {
	return &DeletePlanUnauthorized{}
}

/*
DeletePlanUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeletePlanUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete plan unauthorized response has a 2xx status code
func (o *DeletePlanUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete plan unauthorized response has a 3xx status code
func (o *DeletePlanUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plan unauthorized response has a 4xx status code
func (o *DeletePlanUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete plan unauthorized response has a 5xx status code
func (o *DeletePlanUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plan unauthorized response a status code equal to that given
func (o *DeletePlanUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeletePlanUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanUnauthorized  %+v", 401, o.Payload)
}

func (o *DeletePlanUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanUnauthorized  %+v", 401, o.Payload)
}

func (o *DeletePlanUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePlanForbidden creates a DeletePlanForbidden with default headers values
func NewDeletePlanForbidden() *DeletePlanForbidden {
	return &DeletePlanForbidden{}
}

/*
DeletePlanForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeletePlanForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete plan forbidden response has a 2xx status code
func (o *DeletePlanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete plan forbidden response has a 3xx status code
func (o *DeletePlanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plan forbidden response has a 4xx status code
func (o *DeletePlanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete plan forbidden response has a 5xx status code
func (o *DeletePlanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plan forbidden response a status code equal to that given
func (o *DeletePlanForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeletePlanForbidden) Error() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanForbidden  %+v", 403, o.Payload)
}

func (o *DeletePlanForbidden) String() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanForbidden  %+v", 403, o.Payload)
}

func (o *DeletePlanForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePlanNotFound creates a DeletePlanNotFound with default headers values
func NewDeletePlanNotFound() *DeletePlanNotFound {
	return &DeletePlanNotFound{}
}

/*
DeletePlanNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeletePlanNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete plan not found response has a 2xx status code
func (o *DeletePlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete plan not found response has a 3xx status code
func (o *DeletePlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plan not found response has a 4xx status code
func (o *DeletePlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete plan not found response has a 5xx status code
func (o *DeletePlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plan not found response a status code equal to that given
func (o *DeletePlanNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeletePlanNotFound) Error() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanNotFound  %+v", 404, o.Payload)
}

func (o *DeletePlanNotFound) String() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanNotFound  %+v", 404, o.Payload)
}

func (o *DeletePlanNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePlanConflict creates a DeletePlanConflict with default headers values
func NewDeletePlanConflict() *DeletePlanConflict {
	return &DeletePlanConflict{}
}

/*
DeletePlanConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeletePlanConflict struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete plan conflict response has a 2xx status code
func (o *DeletePlanConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete plan conflict response has a 3xx status code
func (o *DeletePlanConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plan conflict response has a 4xx status code
func (o *DeletePlanConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete plan conflict response has a 5xx status code
func (o *DeletePlanConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plan conflict response a status code equal to that given
func (o *DeletePlanConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeletePlanConflict) Error() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanConflict  %+v", 409, o.Payload)
}

func (o *DeletePlanConflict) String() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanConflict  %+v", 409, o.Payload)
}

func (o *DeletePlanConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlanConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePlanInternalServerError creates a DeletePlanInternalServerError with default headers values
func NewDeletePlanInternalServerError() *DeletePlanInternalServerError {
	return &DeletePlanInternalServerError{}
}

/*
DeletePlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeletePlanInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete plan internal server error response has a 2xx status code
func (o *DeletePlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete plan internal server error response has a 3xx status code
func (o *DeletePlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plan internal server error response has a 4xx status code
func (o *DeletePlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete plan internal server error response has a 5xx status code
func (o *DeletePlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete plan internal server error response a status code equal to that given
func (o *DeletePlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeletePlanInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *DeletePlanInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /executables/plans/{planId}][%d] deletePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *DeletePlanInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
