// Code generated by go-swagger; DO NOT EDIT.

package plans_executables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// ConfigurePlanExecutionReader is a Reader for the ConfigurePlanExecution structure.
type ConfigurePlanExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfigurePlanExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConfigurePlanExecutionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewConfigurePlanExecutionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewConfigurePlanExecutionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewConfigurePlanExecutionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConfigurePlanExecutionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewConfigurePlanExecutionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewConfigurePlanExecutionOK creates a ConfigurePlanExecutionOK with default headers values
func NewConfigurePlanExecutionOK() *ConfigurePlanExecutionOK {
	return &ConfigurePlanExecutionOK{}
}

/*
ConfigurePlanExecutionOK describes a response with status code 200, with default header values.

OK
*/
type ConfigurePlanExecutionOK struct {
	Payload *models.PlanRunConfig
}

// IsSuccess returns true when this configure plan execution o k response has a 2xx status code
func (o *ConfigurePlanExecutionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this configure plan execution o k response has a 3xx status code
func (o *ConfigurePlanExecutionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure plan execution o k response has a 4xx status code
func (o *ConfigurePlanExecutionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this configure plan execution o k response has a 5xx status code
func (o *ConfigurePlanExecutionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this configure plan execution o k response a status code equal to that given
func (o *ConfigurePlanExecutionOK) IsCode(code int) bool {
	return code == 200
}

func (o *ConfigurePlanExecutionOK) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionOK  %+v", 200, o.Payload)
}

func (o *ConfigurePlanExecutionOK) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionOK  %+v", 200, o.Payload)
}

func (o *ConfigurePlanExecutionOK) GetPayload() *models.PlanRunConfig {
	return o.Payload
}

func (o *ConfigurePlanExecutionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlanRunConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigurePlanExecutionBadRequest creates a ConfigurePlanExecutionBadRequest with default headers values
func NewConfigurePlanExecutionBadRequest() *ConfigurePlanExecutionBadRequest {
	return &ConfigurePlanExecutionBadRequest{}
}

/*
ConfigurePlanExecutionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ConfigurePlanExecutionBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this configure plan execution bad request response has a 2xx status code
func (o *ConfigurePlanExecutionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this configure plan execution bad request response has a 3xx status code
func (o *ConfigurePlanExecutionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure plan execution bad request response has a 4xx status code
func (o *ConfigurePlanExecutionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this configure plan execution bad request response has a 5xx status code
func (o *ConfigurePlanExecutionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this configure plan execution bad request response a status code equal to that given
func (o *ConfigurePlanExecutionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ConfigurePlanExecutionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *ConfigurePlanExecutionBadRequest) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *ConfigurePlanExecutionBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConfigurePlanExecutionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigurePlanExecutionUnauthorized creates a ConfigurePlanExecutionUnauthorized with default headers values
func NewConfigurePlanExecutionUnauthorized() *ConfigurePlanExecutionUnauthorized {
	return &ConfigurePlanExecutionUnauthorized{}
}

/*
ConfigurePlanExecutionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ConfigurePlanExecutionUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this configure plan execution unauthorized response has a 2xx status code
func (o *ConfigurePlanExecutionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this configure plan execution unauthorized response has a 3xx status code
func (o *ConfigurePlanExecutionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure plan execution unauthorized response has a 4xx status code
func (o *ConfigurePlanExecutionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this configure plan execution unauthorized response has a 5xx status code
func (o *ConfigurePlanExecutionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this configure plan execution unauthorized response a status code equal to that given
func (o *ConfigurePlanExecutionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ConfigurePlanExecutionUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *ConfigurePlanExecutionUnauthorized) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *ConfigurePlanExecutionUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConfigurePlanExecutionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigurePlanExecutionForbidden creates a ConfigurePlanExecutionForbidden with default headers values
func NewConfigurePlanExecutionForbidden() *ConfigurePlanExecutionForbidden {
	return &ConfigurePlanExecutionForbidden{}
}

/*
ConfigurePlanExecutionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ConfigurePlanExecutionForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this configure plan execution forbidden response has a 2xx status code
func (o *ConfigurePlanExecutionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this configure plan execution forbidden response has a 3xx status code
func (o *ConfigurePlanExecutionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure plan execution forbidden response has a 4xx status code
func (o *ConfigurePlanExecutionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this configure plan execution forbidden response has a 5xx status code
func (o *ConfigurePlanExecutionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this configure plan execution forbidden response a status code equal to that given
func (o *ConfigurePlanExecutionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ConfigurePlanExecutionForbidden) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionForbidden  %+v", 403, o.Payload)
}

func (o *ConfigurePlanExecutionForbidden) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionForbidden  %+v", 403, o.Payload)
}

func (o *ConfigurePlanExecutionForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConfigurePlanExecutionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigurePlanExecutionNotFound creates a ConfigurePlanExecutionNotFound with default headers values
func NewConfigurePlanExecutionNotFound() *ConfigurePlanExecutionNotFound {
	return &ConfigurePlanExecutionNotFound{}
}

/*
ConfigurePlanExecutionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ConfigurePlanExecutionNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this configure plan execution not found response has a 2xx status code
func (o *ConfigurePlanExecutionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this configure plan execution not found response has a 3xx status code
func (o *ConfigurePlanExecutionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure plan execution not found response has a 4xx status code
func (o *ConfigurePlanExecutionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this configure plan execution not found response has a 5xx status code
func (o *ConfigurePlanExecutionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this configure plan execution not found response a status code equal to that given
func (o *ConfigurePlanExecutionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ConfigurePlanExecutionNotFound) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionNotFound  %+v", 404, o.Payload)
}

func (o *ConfigurePlanExecutionNotFound) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionNotFound  %+v", 404, o.Payload)
}

func (o *ConfigurePlanExecutionNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConfigurePlanExecutionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigurePlanExecutionInternalServerError creates a ConfigurePlanExecutionInternalServerError with default headers values
func NewConfigurePlanExecutionInternalServerError() *ConfigurePlanExecutionInternalServerError {
	return &ConfigurePlanExecutionInternalServerError{}
}

/*
ConfigurePlanExecutionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ConfigurePlanExecutionInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this configure plan execution internal server error response has a 2xx status code
func (o *ConfigurePlanExecutionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this configure plan execution internal server error response has a 3xx status code
func (o *ConfigurePlanExecutionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure plan execution internal server error response has a 4xx status code
func (o *ConfigurePlanExecutionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this configure plan execution internal server error response has a 5xx status code
func (o *ConfigurePlanExecutionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this configure plan execution internal server error response a status code equal to that given
func (o *ConfigurePlanExecutionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ConfigurePlanExecutionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *ConfigurePlanExecutionInternalServerError) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}/run-config][%d] configurePlanExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *ConfigurePlanExecutionInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConfigurePlanExecutionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
