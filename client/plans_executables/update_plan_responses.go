// Code generated by go-swagger; DO NOT EDIT.

package plans_executables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// UpdatePlanReader is a Reader for the UpdatePlan structure.
type UpdatePlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdatePlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdatePlanOK creates a UpdatePlanOK with default headers values
func NewUpdatePlanOK() *UpdatePlanOK {
	return &UpdatePlanOK{}
}

/*
UpdatePlanOK describes a response with status code 200, with default header values.

OK
*/
type UpdatePlanOK struct {
	Payload *models.Plan
}

// IsSuccess returns true when this update plan o k response has a 2xx status code
func (o *UpdatePlanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update plan o k response has a 3xx status code
func (o *UpdatePlanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update plan o k response has a 4xx status code
func (o *UpdatePlanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update plan o k response has a 5xx status code
func (o *UpdatePlanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update plan o k response a status code equal to that given
func (o *UpdatePlanOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdatePlanOK) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanOK  %+v", 200, o.Payload)
}

func (o *UpdatePlanOK) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanOK  %+v", 200, o.Payload)
}

func (o *UpdatePlanOK) GetPayload() *models.Plan {
	return o.Payload
}

func (o *UpdatePlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Plan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePlanBadRequest creates a UpdatePlanBadRequest with default headers values
func NewUpdatePlanBadRequest() *UpdatePlanBadRequest {
	return &UpdatePlanBadRequest{}
}

/*
UpdatePlanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdatePlanBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update plan bad request response has a 2xx status code
func (o *UpdatePlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update plan bad request response has a 3xx status code
func (o *UpdatePlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update plan bad request response has a 4xx status code
func (o *UpdatePlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update plan bad request response has a 5xx status code
func (o *UpdatePlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update plan bad request response a status code equal to that given
func (o *UpdatePlanBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdatePlanBadRequest) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanBadRequest  %+v", 400, o.Payload)
}

func (o *UpdatePlanBadRequest) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanBadRequest  %+v", 400, o.Payload)
}

func (o *UpdatePlanBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdatePlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePlanUnauthorized creates a UpdatePlanUnauthorized with default headers values
func NewUpdatePlanUnauthorized() *UpdatePlanUnauthorized {
	return &UpdatePlanUnauthorized{}
}

/*
UpdatePlanUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdatePlanUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update plan unauthorized response has a 2xx status code
func (o *UpdatePlanUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update plan unauthorized response has a 3xx status code
func (o *UpdatePlanUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update plan unauthorized response has a 4xx status code
func (o *UpdatePlanUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update plan unauthorized response has a 5xx status code
func (o *UpdatePlanUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update plan unauthorized response a status code equal to that given
func (o *UpdatePlanUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdatePlanUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdatePlanUnauthorized) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdatePlanUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdatePlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePlanForbidden creates a UpdatePlanForbidden with default headers values
func NewUpdatePlanForbidden() *UpdatePlanForbidden {
	return &UpdatePlanForbidden{}
}

/*
UpdatePlanForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdatePlanForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update plan forbidden response has a 2xx status code
func (o *UpdatePlanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update plan forbidden response has a 3xx status code
func (o *UpdatePlanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update plan forbidden response has a 4xx status code
func (o *UpdatePlanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update plan forbidden response has a 5xx status code
func (o *UpdatePlanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update plan forbidden response a status code equal to that given
func (o *UpdatePlanForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdatePlanForbidden) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanForbidden  %+v", 403, o.Payload)
}

func (o *UpdatePlanForbidden) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanForbidden  %+v", 403, o.Payload)
}

func (o *UpdatePlanForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdatePlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePlanNotFound creates a UpdatePlanNotFound with default headers values
func NewUpdatePlanNotFound() *UpdatePlanNotFound {
	return &UpdatePlanNotFound{}
}

/*
UpdatePlanNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdatePlanNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update plan not found response has a 2xx status code
func (o *UpdatePlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update plan not found response has a 3xx status code
func (o *UpdatePlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update plan not found response has a 4xx status code
func (o *UpdatePlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update plan not found response has a 5xx status code
func (o *UpdatePlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update plan not found response a status code equal to that given
func (o *UpdatePlanNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdatePlanNotFound) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanNotFound  %+v", 404, o.Payload)
}

func (o *UpdatePlanNotFound) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanNotFound  %+v", 404, o.Payload)
}

func (o *UpdatePlanNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdatePlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePlanInternalServerError creates a UpdatePlanInternalServerError with default headers values
func NewUpdatePlanInternalServerError() *UpdatePlanInternalServerError {
	return &UpdatePlanInternalServerError{}
}

/*
UpdatePlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdatePlanInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update plan internal server error response has a 2xx status code
func (o *UpdatePlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update plan internal server error response has a 3xx status code
func (o *UpdatePlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update plan internal server error response has a 4xx status code
func (o *UpdatePlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update plan internal server error response has a 5xx status code
func (o *UpdatePlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update plan internal server error response a status code equal to that given
func (o *UpdatePlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdatePlanInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdatePlanInternalServerError) String() string {
	return fmt.Sprintf("[PUT /executables/plans/{planId}][%d] updatePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdatePlanInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdatePlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
