// Code generated by go-swagger; DO NOT EDIT.

package plans_executables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetExecutableDetailsReader is a Reader for the GetExecutableDetails structure.
type GetExecutableDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExecutableDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExecutableDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExecutableDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExecutableDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExecutableDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExecutableDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetExecutableDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExecutableDetailsOK creates a GetExecutableDetailsOK with default headers values
func NewGetExecutableDetailsOK() *GetExecutableDetailsOK {
	return &GetExecutableDetailsOK{}
}

/*
GetExecutableDetailsOK describes a response with status code 200, with default header values.

Successful response
*/
type GetExecutableDetailsOK struct {
	Payload *models.PlanExecutabledetails
}

// IsSuccess returns true when this get executable details o k response has a 2xx status code
func (o *GetExecutableDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get executable details o k response has a 3xx status code
func (o *GetExecutableDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executable details o k response has a 4xx status code
func (o *GetExecutableDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get executable details o k response has a 5xx status code
func (o *GetExecutableDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get executable details o k response a status code equal to that given
func (o *GetExecutableDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExecutableDetailsOK) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsOK  %+v", 200, o.Payload)
}

func (o *GetExecutableDetailsOK) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsOK  %+v", 200, o.Payload)
}

func (o *GetExecutableDetailsOK) GetPayload() *models.PlanExecutabledetails {
	return o.Payload
}

func (o *GetExecutableDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlanExecutabledetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutableDetailsBadRequest creates a GetExecutableDetailsBadRequest with default headers values
func NewGetExecutableDetailsBadRequest() *GetExecutableDetailsBadRequest {
	return &GetExecutableDetailsBadRequest{}
}

/*
GetExecutableDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetExecutableDetailsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get executable details bad request response has a 2xx status code
func (o *GetExecutableDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executable details bad request response has a 3xx status code
func (o *GetExecutableDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executable details bad request response has a 4xx status code
func (o *GetExecutableDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executable details bad request response has a 5xx status code
func (o *GetExecutableDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get executable details bad request response a status code equal to that given
func (o *GetExecutableDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetExecutableDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetExecutableDetailsBadRequest) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetExecutableDetailsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetExecutableDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutableDetailsUnauthorized creates a GetExecutableDetailsUnauthorized with default headers values
func NewGetExecutableDetailsUnauthorized() *GetExecutableDetailsUnauthorized {
	return &GetExecutableDetailsUnauthorized{}
}

/*
GetExecutableDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetExecutableDetailsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get executable details unauthorized response has a 2xx status code
func (o *GetExecutableDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executable details unauthorized response has a 3xx status code
func (o *GetExecutableDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executable details unauthorized response has a 4xx status code
func (o *GetExecutableDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executable details unauthorized response has a 5xx status code
func (o *GetExecutableDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get executable details unauthorized response a status code equal to that given
func (o *GetExecutableDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExecutableDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExecutableDetailsUnauthorized) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExecutableDetailsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetExecutableDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutableDetailsForbidden creates a GetExecutableDetailsForbidden with default headers values
func NewGetExecutableDetailsForbidden() *GetExecutableDetailsForbidden {
	return &GetExecutableDetailsForbidden{}
}

/*
GetExecutableDetailsForbidden describes a response with status code 403, with default header values.

Forbidden - no permissions to access resource
*/
type GetExecutableDetailsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get executable details forbidden response has a 2xx status code
func (o *GetExecutableDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executable details forbidden response has a 3xx status code
func (o *GetExecutableDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executable details forbidden response has a 4xx status code
func (o *GetExecutableDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executable details forbidden response has a 5xx status code
func (o *GetExecutableDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get executable details forbidden response a status code equal to that given
func (o *GetExecutableDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExecutableDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsForbidden  %+v", 403, o.Payload)
}

func (o *GetExecutableDetailsForbidden) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsForbidden  %+v", 403, o.Payload)
}

func (o *GetExecutableDetailsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetExecutableDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutableDetailsNotFound creates a GetExecutableDetailsNotFound with default headers values
func NewGetExecutableDetailsNotFound() *GetExecutableDetailsNotFound {
	return &GetExecutableDetailsNotFound{}
}

/*
GetExecutableDetailsNotFound describes a response with status code 404, with default header values.

Not found - resource not found
*/
type GetExecutableDetailsNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get executable details not found response has a 2xx status code
func (o *GetExecutableDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executable details not found response has a 3xx status code
func (o *GetExecutableDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executable details not found response has a 4xx status code
func (o *GetExecutableDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executable details not found response has a 5xx status code
func (o *GetExecutableDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get executable details not found response a status code equal to that given
func (o *GetExecutableDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetExecutableDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetExecutableDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetExecutableDetailsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetExecutableDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutableDetailsInternalServerError creates a GetExecutableDetailsInternalServerError with default headers values
func NewGetExecutableDetailsInternalServerError() *GetExecutableDetailsInternalServerError {
	return &GetExecutableDetailsInternalServerError{}
}

/*
GetExecutableDetailsInternalServerError describes a response with status code 500, with default header values.

Server error - something went wrong on server side
*/
type GetExecutableDetailsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get executable details internal server error response has a 2xx status code
func (o *GetExecutableDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executable details internal server error response has a 3xx status code
func (o *GetExecutableDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executable details internal server error response has a 4xx status code
func (o *GetExecutableDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get executable details internal server error response has a 5xx status code
func (o *GetExecutableDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get executable details internal server error response a status code equal to that given
func (o *GetExecutableDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetExecutableDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExecutableDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /executables/plans/{planId}][%d] getExecutableDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetExecutableDetailsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetExecutableDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
