// Code generated by go-swagger; DO NOT EDIT.

package promotions_executables_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// AddPromotionUserReader is a Reader for the AddPromotionUser structure.
type AddPromotionUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPromotionUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddPromotionUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddPromotionUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddPromotionUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddPromotionUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddPromotionUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddPromotionUserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddPromotionUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddPromotionUserNoContent creates a AddPromotionUserNoContent with default headers values
func NewAddPromotionUserNoContent() *AddPromotionUserNoContent {
	return &AddPromotionUserNoContent{}
}

/*
AddPromotionUserNoContent describes a response with status code 204, with default header values.

No Content
*/
type AddPromotionUserNoContent struct {
}

// IsSuccess returns true when this add promotion user no content response has a 2xx status code
func (o *AddPromotionUserNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add promotion user no content response has a 3xx status code
func (o *AddPromotionUserNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add promotion user no content response has a 4xx status code
func (o *AddPromotionUserNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this add promotion user no content response has a 5xx status code
func (o *AddPromotionUserNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this add promotion user no content response a status code equal to that given
func (o *AddPromotionUserNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *AddPromotionUserNoContent) Error() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserNoContent ", 204)
}

func (o *AddPromotionUserNoContent) String() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserNoContent ", 204)
}

func (o *AddPromotionUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPromotionUserBadRequest creates a AddPromotionUserBadRequest with default headers values
func NewAddPromotionUserBadRequest() *AddPromotionUserBadRequest {
	return &AddPromotionUserBadRequest{}
}

/*
AddPromotionUserBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddPromotionUserBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this add promotion user bad request response has a 2xx status code
func (o *AddPromotionUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add promotion user bad request response has a 3xx status code
func (o *AddPromotionUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add promotion user bad request response has a 4xx status code
func (o *AddPromotionUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add promotion user bad request response has a 5xx status code
func (o *AddPromotionUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add promotion user bad request response a status code equal to that given
func (o *AddPromotionUserBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddPromotionUserBadRequest) Error() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserBadRequest  %+v", 400, o.Payload)
}

func (o *AddPromotionUserBadRequest) String() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserBadRequest  %+v", 400, o.Payload)
}

func (o *AddPromotionUserBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddPromotionUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPromotionUserUnauthorized creates a AddPromotionUserUnauthorized with default headers values
func NewAddPromotionUserUnauthorized() *AddPromotionUserUnauthorized {
	return &AddPromotionUserUnauthorized{}
}

/*
AddPromotionUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddPromotionUserUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this add promotion user unauthorized response has a 2xx status code
func (o *AddPromotionUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add promotion user unauthorized response has a 3xx status code
func (o *AddPromotionUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add promotion user unauthorized response has a 4xx status code
func (o *AddPromotionUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add promotion user unauthorized response has a 5xx status code
func (o *AddPromotionUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add promotion user unauthorized response a status code equal to that given
func (o *AddPromotionUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AddPromotionUserUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AddPromotionUserUnauthorized) String() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AddPromotionUserUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddPromotionUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPromotionUserForbidden creates a AddPromotionUserForbidden with default headers values
func NewAddPromotionUserForbidden() *AddPromotionUserForbidden {
	return &AddPromotionUserForbidden{}
}

/*
AddPromotionUserForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddPromotionUserForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this add promotion user forbidden response has a 2xx status code
func (o *AddPromotionUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add promotion user forbidden response has a 3xx status code
func (o *AddPromotionUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add promotion user forbidden response has a 4xx status code
func (o *AddPromotionUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add promotion user forbidden response has a 5xx status code
func (o *AddPromotionUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add promotion user forbidden response a status code equal to that given
func (o *AddPromotionUserForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AddPromotionUserForbidden) Error() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserForbidden  %+v", 403, o.Payload)
}

func (o *AddPromotionUserForbidden) String() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserForbidden  %+v", 403, o.Payload)
}

func (o *AddPromotionUserForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddPromotionUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPromotionUserNotFound creates a AddPromotionUserNotFound with default headers values
func NewAddPromotionUserNotFound() *AddPromotionUserNotFound {
	return &AddPromotionUserNotFound{}
}

/*
AddPromotionUserNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddPromotionUserNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this add promotion user not found response has a 2xx status code
func (o *AddPromotionUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add promotion user not found response has a 3xx status code
func (o *AddPromotionUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add promotion user not found response has a 4xx status code
func (o *AddPromotionUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add promotion user not found response has a 5xx status code
func (o *AddPromotionUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add promotion user not found response a status code equal to that given
func (o *AddPromotionUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AddPromotionUserNotFound) Error() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserNotFound  %+v", 404, o.Payload)
}

func (o *AddPromotionUserNotFound) String() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserNotFound  %+v", 404, o.Payload)
}

func (o *AddPromotionUserNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddPromotionUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPromotionUserConflict creates a AddPromotionUserConflict with default headers values
func NewAddPromotionUserConflict() *AddPromotionUserConflict {
	return &AddPromotionUserConflict{}
}

/*
AddPromotionUserConflict describes a response with status code 409, with default header values.

User is already assigned to the promotion
*/
type AddPromotionUserConflict struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this add promotion user conflict response has a 2xx status code
func (o *AddPromotionUserConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add promotion user conflict response has a 3xx status code
func (o *AddPromotionUserConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add promotion user conflict response has a 4xx status code
func (o *AddPromotionUserConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add promotion user conflict response has a 5xx status code
func (o *AddPromotionUserConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add promotion user conflict response a status code equal to that given
func (o *AddPromotionUserConflict) IsCode(code int) bool {
	return code == 409
}

func (o *AddPromotionUserConflict) Error() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserConflict  %+v", 409, o.Payload)
}

func (o *AddPromotionUserConflict) String() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserConflict  %+v", 409, o.Payload)
}

func (o *AddPromotionUserConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddPromotionUserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPromotionUserInternalServerError creates a AddPromotionUserInternalServerError with default headers values
func NewAddPromotionUserInternalServerError() *AddPromotionUserInternalServerError {
	return &AddPromotionUserInternalServerError{}
}

/*
AddPromotionUserInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AddPromotionUserInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this add promotion user internal server error response has a 2xx status code
func (o *AddPromotionUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add promotion user internal server error response has a 3xx status code
func (o *AddPromotionUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add promotion user internal server error response has a 4xx status code
func (o *AddPromotionUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add promotion user internal server error response has a 5xx status code
func (o *AddPromotionUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add promotion user internal server error response a status code equal to that given
func (o *AddPromotionUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddPromotionUserInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserInternalServerError  %+v", 500, o.Payload)
}

func (o *AddPromotionUserInternalServerError) String() string {
	return fmt.Sprintf("[PUT /executables/promotions/{promotionId}/users/{userId}][%d] addPromotionUserInternalServerError  %+v", 500, o.Payload)
}

func (o *AddPromotionUserInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddPromotionUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
