// Code generated by go-swagger; DO NOT EDIT.

package runtime_engines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// DeleteRemoteEngineReader is a Reader for the DeleteRemoteEngine structure.
type DeleteRemoteEngineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRemoteEngineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteRemoteEngineNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRemoteEngineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRemoteEngineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRemoteEngineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRemoteEngineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteRemoteEngineConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRemoteEngineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRemoteEngineNoContent creates a DeleteRemoteEngineNoContent with default headers values
func NewDeleteRemoteEngineNoContent() *DeleteRemoteEngineNoContent {
	return &DeleteRemoteEngineNoContent{}
}

/*
DeleteRemoteEngineNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteRemoteEngineNoContent struct {
}

// IsSuccess returns true when this delete remote engine no content response has a 2xx status code
func (o *DeleteRemoteEngineNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete remote engine no content response has a 3xx status code
func (o *DeleteRemoteEngineNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete remote engine no content response has a 4xx status code
func (o *DeleteRemoteEngineNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete remote engine no content response has a 5xx status code
func (o *DeleteRemoteEngineNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete remote engine no content response a status code equal to that given
func (o *DeleteRemoteEngineNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteRemoteEngineNoContent) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineNoContent ", 204)
}

func (o *DeleteRemoteEngineNoContent) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineNoContent ", 204)
}

func (o *DeleteRemoteEngineNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRemoteEngineBadRequest creates a DeleteRemoteEngineBadRequest with default headers values
func NewDeleteRemoteEngineBadRequest() *DeleteRemoteEngineBadRequest {
	return &DeleteRemoteEngineBadRequest{}
}

/*
DeleteRemoteEngineBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteRemoteEngineBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete remote engine bad request response has a 2xx status code
func (o *DeleteRemoteEngineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete remote engine bad request response has a 3xx status code
func (o *DeleteRemoteEngineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete remote engine bad request response has a 4xx status code
func (o *DeleteRemoteEngineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete remote engine bad request response has a 5xx status code
func (o *DeleteRemoteEngineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete remote engine bad request response a status code equal to that given
func (o *DeleteRemoteEngineBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteRemoteEngineBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRemoteEngineBadRequest) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRemoteEngineBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRemoteEngineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRemoteEngineUnauthorized creates a DeleteRemoteEngineUnauthorized with default headers values
func NewDeleteRemoteEngineUnauthorized() *DeleteRemoteEngineUnauthorized {
	return &DeleteRemoteEngineUnauthorized{}
}

/*
DeleteRemoteEngineUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteRemoteEngineUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete remote engine unauthorized response has a 2xx status code
func (o *DeleteRemoteEngineUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete remote engine unauthorized response has a 3xx status code
func (o *DeleteRemoteEngineUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete remote engine unauthorized response has a 4xx status code
func (o *DeleteRemoteEngineUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete remote engine unauthorized response has a 5xx status code
func (o *DeleteRemoteEngineUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete remote engine unauthorized response a status code equal to that given
func (o *DeleteRemoteEngineUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteRemoteEngineUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteRemoteEngineUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteRemoteEngineUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRemoteEngineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRemoteEngineForbidden creates a DeleteRemoteEngineForbidden with default headers values
func NewDeleteRemoteEngineForbidden() *DeleteRemoteEngineForbidden {
	return &DeleteRemoteEngineForbidden{}
}

/*
DeleteRemoteEngineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteRemoteEngineForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete remote engine forbidden response has a 2xx status code
func (o *DeleteRemoteEngineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete remote engine forbidden response has a 3xx status code
func (o *DeleteRemoteEngineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete remote engine forbidden response has a 4xx status code
func (o *DeleteRemoteEngineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete remote engine forbidden response has a 5xx status code
func (o *DeleteRemoteEngineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete remote engine forbidden response a status code equal to that given
func (o *DeleteRemoteEngineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteRemoteEngineForbidden) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRemoteEngineForbidden) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRemoteEngineForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRemoteEngineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRemoteEngineNotFound creates a DeleteRemoteEngineNotFound with default headers values
func NewDeleteRemoteEngineNotFound() *DeleteRemoteEngineNotFound {
	return &DeleteRemoteEngineNotFound{}
}

/*
DeleteRemoteEngineNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteRemoteEngineNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete remote engine not found response has a 2xx status code
func (o *DeleteRemoteEngineNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete remote engine not found response has a 3xx status code
func (o *DeleteRemoteEngineNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete remote engine not found response has a 4xx status code
func (o *DeleteRemoteEngineNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete remote engine not found response has a 5xx status code
func (o *DeleteRemoteEngineNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete remote engine not found response a status code equal to that given
func (o *DeleteRemoteEngineNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteRemoteEngineNotFound) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRemoteEngineNotFound) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRemoteEngineNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRemoteEngineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRemoteEngineConflict creates a DeleteRemoteEngineConflict with default headers values
func NewDeleteRemoteEngineConflict() *DeleteRemoteEngineConflict {
	return &DeleteRemoteEngineConflict{}
}

/*
DeleteRemoteEngineConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteRemoteEngineConflict struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete remote engine conflict response has a 2xx status code
func (o *DeleteRemoteEngineConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete remote engine conflict response has a 3xx status code
func (o *DeleteRemoteEngineConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete remote engine conflict response has a 4xx status code
func (o *DeleteRemoteEngineConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete remote engine conflict response has a 5xx status code
func (o *DeleteRemoteEngineConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete remote engine conflict response a status code equal to that given
func (o *DeleteRemoteEngineConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteRemoteEngineConflict) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineConflict  %+v", 409, o.Payload)
}

func (o *DeleteRemoteEngineConflict) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineConflict  %+v", 409, o.Payload)
}

func (o *DeleteRemoteEngineConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRemoteEngineConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRemoteEngineInternalServerError creates a DeleteRemoteEngineInternalServerError with default headers values
func NewDeleteRemoteEngineInternalServerError() *DeleteRemoteEngineInternalServerError {
	return &DeleteRemoteEngineInternalServerError{}
}

/*
DeleteRemoteEngineInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteRemoteEngineInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete remote engine internal server error response has a 2xx status code
func (o *DeleteRemoteEngineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete remote engine internal server error response has a 3xx status code
func (o *DeleteRemoteEngineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete remote engine internal server error response has a 4xx status code
func (o *DeleteRemoteEngineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete remote engine internal server error response has a 5xx status code
func (o *DeleteRemoteEngineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete remote engine internal server error response a status code equal to that given
func (o *DeleteRemoteEngineInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteRemoteEngineInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteRemoteEngineInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{id}][%d] deleteRemoteEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteRemoteEngineInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRemoteEngineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
