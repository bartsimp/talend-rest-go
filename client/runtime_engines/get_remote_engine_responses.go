// Code generated by go-swagger; DO NOT EDIT.

package runtime_engines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetRemoteEngineReader is a Reader for the GetRemoteEngine structure.
type GetRemoteEngineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRemoteEngineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRemoteEngineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRemoteEngineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRemoteEngineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRemoteEngineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRemoteEngineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRemoteEngineOK creates a GetRemoteEngineOK with default headers values
func NewGetRemoteEngineOK() *GetRemoteEngineOK {
	return &GetRemoteEngineOK{}
}

/*
GetRemoteEngineOK describes a response with status code 200, with default header values.

OK
*/
type GetRemoteEngineOK struct {
	Payload *models.Engine
}

// IsSuccess returns true when this get remote engine o k response has a 2xx status code
func (o *GetRemoteEngineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get remote engine o k response has a 3xx status code
func (o *GetRemoteEngineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine o k response has a 4xx status code
func (o *GetRemoteEngineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get remote engine o k response has a 5xx status code
func (o *GetRemoteEngineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get remote engine o k response a status code equal to that given
func (o *GetRemoteEngineOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRemoteEngineOK) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineOK  %+v", 200, o.Payload)
}

func (o *GetRemoteEngineOK) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineOK  %+v", 200, o.Payload)
}

func (o *GetRemoteEngineOK) GetPayload() *models.Engine {
	return o.Payload
}

func (o *GetRemoteEngineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Engine)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRemoteEngineUnauthorized creates a GetRemoteEngineUnauthorized with default headers values
func NewGetRemoteEngineUnauthorized() *GetRemoteEngineUnauthorized {
	return &GetRemoteEngineUnauthorized{}
}

/*
GetRemoteEngineUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRemoteEngineUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get remote engine unauthorized response has a 2xx status code
func (o *GetRemoteEngineUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get remote engine unauthorized response has a 3xx status code
func (o *GetRemoteEngineUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine unauthorized response has a 4xx status code
func (o *GetRemoteEngineUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get remote engine unauthorized response has a 5xx status code
func (o *GetRemoteEngineUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get remote engine unauthorized response a status code equal to that given
func (o *GetRemoteEngineUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRemoteEngineUnauthorized) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRemoteEngineUnauthorized) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRemoteEngineUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRemoteEngineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRemoteEngineForbidden creates a GetRemoteEngineForbidden with default headers values
func NewGetRemoteEngineForbidden() *GetRemoteEngineForbidden {
	return &GetRemoteEngineForbidden{}
}

/*
GetRemoteEngineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRemoteEngineForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get remote engine forbidden response has a 2xx status code
func (o *GetRemoteEngineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get remote engine forbidden response has a 3xx status code
func (o *GetRemoteEngineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine forbidden response has a 4xx status code
func (o *GetRemoteEngineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get remote engine forbidden response has a 5xx status code
func (o *GetRemoteEngineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get remote engine forbidden response a status code equal to that given
func (o *GetRemoteEngineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRemoteEngineForbidden) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineForbidden  %+v", 403, o.Payload)
}

func (o *GetRemoteEngineForbidden) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineForbidden  %+v", 403, o.Payload)
}

func (o *GetRemoteEngineForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRemoteEngineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRemoteEngineNotFound creates a GetRemoteEngineNotFound with default headers values
func NewGetRemoteEngineNotFound() *GetRemoteEngineNotFound {
	return &GetRemoteEngineNotFound{}
}

/*
GetRemoteEngineNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRemoteEngineNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get remote engine not found response has a 2xx status code
func (o *GetRemoteEngineNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get remote engine not found response has a 3xx status code
func (o *GetRemoteEngineNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine not found response has a 4xx status code
func (o *GetRemoteEngineNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get remote engine not found response has a 5xx status code
func (o *GetRemoteEngineNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get remote engine not found response a status code equal to that given
func (o *GetRemoteEngineNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRemoteEngineNotFound) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineNotFound  %+v", 404, o.Payload)
}

func (o *GetRemoteEngineNotFound) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineNotFound  %+v", 404, o.Payload)
}

func (o *GetRemoteEngineNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRemoteEngineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRemoteEngineInternalServerError creates a GetRemoteEngineInternalServerError with default headers values
func NewGetRemoteEngineInternalServerError() *GetRemoteEngineInternalServerError {
	return &GetRemoteEngineInternalServerError{}
}

/*
GetRemoteEngineInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRemoteEngineInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get remote engine internal server error response has a 2xx status code
func (o *GetRemoteEngineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get remote engine internal server error response has a 3xx status code
func (o *GetRemoteEngineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine internal server error response has a 4xx status code
func (o *GetRemoteEngineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get remote engine internal server error response has a 5xx status code
func (o *GetRemoteEngineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get remote engine internal server error response a status code equal to that given
func (o *GetRemoteEngineInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRemoteEngineInternalServerError) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRemoteEngineInternalServerError) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{id}][%d] getRemoteEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRemoteEngineInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRemoteEngineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
