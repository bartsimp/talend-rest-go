// Code generated by go-swagger; DO NOT EDIT.

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// CreateResourceReader is a Reader for the CreateResource structure.
type CreateResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateResourceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateResourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateResourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateResourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateResourceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewCreateResourceRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateResourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateResourceOK creates a CreateResourceOK with default headers values
func NewCreateResourceOK() *CreateResourceOK {
	return &CreateResourceOK{}
}

/*
CreateResourceOK describes a response with status code 200, with default header values.

successful operation
*/
type CreateResourceOK struct {
	Payload *models.Resource
}

// IsSuccess returns true when this create resource o k response has a 2xx status code
func (o *CreateResourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create resource o k response has a 3xx status code
func (o *CreateResourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create resource o k response has a 4xx status code
func (o *CreateResourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create resource o k response has a 5xx status code
func (o *CreateResourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create resource o k response a status code equal to that given
func (o *CreateResourceOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateResourceOK) Error() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceOK  %+v", 200, o.Payload)
}

func (o *CreateResourceOK) String() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceOK  %+v", 200, o.Payload)
}

func (o *CreateResourceOK) GetPayload() *models.Resource {
	return o.Payload
}

func (o *CreateResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Resource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateResourceCreated creates a CreateResourceCreated with default headers values
func NewCreateResourceCreated() *CreateResourceCreated {
	return &CreateResourceCreated{}
}

/*
CreateResourceCreated describes a response with status code 201, with default header values.

Created successfully
*/
type CreateResourceCreated struct {
	Payload *models.Resource
}

// IsSuccess returns true when this create resource created response has a 2xx status code
func (o *CreateResourceCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create resource created response has a 3xx status code
func (o *CreateResourceCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create resource created response has a 4xx status code
func (o *CreateResourceCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create resource created response has a 5xx status code
func (o *CreateResourceCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create resource created response a status code equal to that given
func (o *CreateResourceCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateResourceCreated) Error() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceCreated  %+v", 201, o.Payload)
}

func (o *CreateResourceCreated) String() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceCreated  %+v", 201, o.Payload)
}

func (o *CreateResourceCreated) GetPayload() *models.Resource {
	return o.Payload
}

func (o *CreateResourceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Resource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateResourceBadRequest creates a CreateResourceBadRequest with default headers values
func NewCreateResourceBadRequest() *CreateResourceBadRequest {
	return &CreateResourceBadRequest{}
}

/*
CreateResourceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateResourceBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create resource bad request response has a 2xx status code
func (o *CreateResourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create resource bad request response has a 3xx status code
func (o *CreateResourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create resource bad request response has a 4xx status code
func (o *CreateResourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create resource bad request response has a 5xx status code
func (o *CreateResourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create resource bad request response a status code equal to that given
func (o *CreateResourceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateResourceBadRequest) Error() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceBadRequest  %+v", 400, o.Payload)
}

func (o *CreateResourceBadRequest) String() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceBadRequest  %+v", 400, o.Payload)
}

func (o *CreateResourceBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateResourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateResourceUnauthorized creates a CreateResourceUnauthorized with default headers values
func NewCreateResourceUnauthorized() *CreateResourceUnauthorized {
	return &CreateResourceUnauthorized{}
}

/*
CreateResourceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateResourceUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create resource unauthorized response has a 2xx status code
func (o *CreateResourceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create resource unauthorized response has a 3xx status code
func (o *CreateResourceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create resource unauthorized response has a 4xx status code
func (o *CreateResourceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create resource unauthorized response has a 5xx status code
func (o *CreateResourceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create resource unauthorized response a status code equal to that given
func (o *CreateResourceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateResourceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateResourceUnauthorized) String() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateResourceUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateResourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateResourceForbidden creates a CreateResourceForbidden with default headers values
func NewCreateResourceForbidden() *CreateResourceForbidden {
	return &CreateResourceForbidden{}
}

/*
CreateResourceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateResourceForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create resource forbidden response has a 2xx status code
func (o *CreateResourceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create resource forbidden response has a 3xx status code
func (o *CreateResourceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create resource forbidden response has a 4xx status code
func (o *CreateResourceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create resource forbidden response has a 5xx status code
func (o *CreateResourceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create resource forbidden response a status code equal to that given
func (o *CreateResourceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateResourceForbidden) Error() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceForbidden  %+v", 403, o.Payload)
}

func (o *CreateResourceForbidden) String() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceForbidden  %+v", 403, o.Payload)
}

func (o *CreateResourceForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateResourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateResourceNotFound creates a CreateResourceNotFound with default headers values
func NewCreateResourceNotFound() *CreateResourceNotFound {
	return &CreateResourceNotFound{}
}

/*
CreateResourceNotFound describes a response with status code 404, with default header values.

Workspace id not found.
*/
type CreateResourceNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create resource not found response has a 2xx status code
func (o *CreateResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create resource not found response has a 3xx status code
func (o *CreateResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create resource not found response has a 4xx status code
func (o *CreateResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create resource not found response has a 5xx status code
func (o *CreateResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create resource not found response a status code equal to that given
func (o *CreateResourceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateResourceNotFound) Error() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceNotFound  %+v", 404, o.Payload)
}

func (o *CreateResourceNotFound) String() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceNotFound  %+v", 404, o.Payload)
}

func (o *CreateResourceNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateResourceConflict creates a CreateResourceConflict with default headers values
func NewCreateResourceConflict() *CreateResourceConflict {
	return &CreateResourceConflict{}
}

/*
CreateResourceConflict describes a response with status code 409, with default header values.

Duplicate name.
*/
type CreateResourceConflict struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create resource conflict response has a 2xx status code
func (o *CreateResourceConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create resource conflict response has a 3xx status code
func (o *CreateResourceConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create resource conflict response has a 4xx status code
func (o *CreateResourceConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create resource conflict response has a 5xx status code
func (o *CreateResourceConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create resource conflict response a status code equal to that given
func (o *CreateResourceConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateResourceConflict) Error() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceConflict  %+v", 409, o.Payload)
}

func (o *CreateResourceConflict) String() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceConflict  %+v", 409, o.Payload)
}

func (o *CreateResourceConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateResourceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateResourceRequestEntityTooLarge creates a CreateResourceRequestEntityTooLarge with default headers values
func NewCreateResourceRequestEntityTooLarge() *CreateResourceRequestEntityTooLarge {
	return &CreateResourceRequestEntityTooLarge{}
}

/*
CreateResourceRequestEntityTooLarge describes a response with status code 413, with default header values.

Upload limit exceeded
*/
type CreateResourceRequestEntityTooLarge struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create resource request entity too large response has a 2xx status code
func (o *CreateResourceRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create resource request entity too large response has a 3xx status code
func (o *CreateResourceRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create resource request entity too large response has a 4xx status code
func (o *CreateResourceRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this create resource request entity too large response has a 5xx status code
func (o *CreateResourceRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this create resource request entity too large response a status code equal to that given
func (o *CreateResourceRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *CreateResourceRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *CreateResourceRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *CreateResourceRequestEntityTooLarge) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateResourceRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateResourceInternalServerError creates a CreateResourceInternalServerError with default headers values
func NewCreateResourceInternalServerError() *CreateResourceInternalServerError {
	return &CreateResourceInternalServerError{}
}

/*
CreateResourceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateResourceInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create resource internal server error response has a 2xx status code
func (o *CreateResourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create resource internal server error response has a 3xx status code
func (o *CreateResourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create resource internal server error response has a 4xx status code
func (o *CreateResourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create resource internal server error response has a 5xx status code
func (o *CreateResourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create resource internal server error response a status code equal to that given
func (o *CreateResourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateResourceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateResourceInternalServerError) String() string {
	return fmt.Sprintf("[POST /resources][%d] createResourceInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateResourceInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateResourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
