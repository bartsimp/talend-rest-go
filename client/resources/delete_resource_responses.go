// Code generated by go-swagger; DO NOT EDIT.

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// DeleteResourceReader is a Reader for the DeleteResource structure.
type DeleteResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteResourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteResourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteResourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteResourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteResourceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteResourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteResourceNoContent creates a DeleteResourceNoContent with default headers values
func NewDeleteResourceNoContent() *DeleteResourceNoContent {
	return &DeleteResourceNoContent{}
}

/*
DeleteResourceNoContent describes a response with status code 204, with default header values.

no content
*/
type DeleteResourceNoContent struct {
}

// IsSuccess returns true when this delete resource no content response has a 2xx status code
func (o *DeleteResourceNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete resource no content response has a 3xx status code
func (o *DeleteResourceNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource no content response has a 4xx status code
func (o *DeleteResourceNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resource no content response has a 5xx status code
func (o *DeleteResourceNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource no content response a status code equal to that given
func (o *DeleteResourceNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteResourceNoContent) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceNoContent ", 204)
}

func (o *DeleteResourceNoContent) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceNoContent ", 204)
}

func (o *DeleteResourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourceBadRequest creates a DeleteResourceBadRequest with default headers values
func NewDeleteResourceBadRequest() *DeleteResourceBadRequest {
	return &DeleteResourceBadRequest{}
}

/*
DeleteResourceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteResourceBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete resource bad request response has a 2xx status code
func (o *DeleteResourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource bad request response has a 3xx status code
func (o *DeleteResourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource bad request response has a 4xx status code
func (o *DeleteResourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource bad request response has a 5xx status code
func (o *DeleteResourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource bad request response a status code equal to that given
func (o *DeleteResourceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteResourceBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteResourceBadRequest) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteResourceBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteResourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourceUnauthorized creates a DeleteResourceUnauthorized with default headers values
func NewDeleteResourceUnauthorized() *DeleteResourceUnauthorized {
	return &DeleteResourceUnauthorized{}
}

/*
DeleteResourceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteResourceUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete resource unauthorized response has a 2xx status code
func (o *DeleteResourceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource unauthorized response has a 3xx status code
func (o *DeleteResourceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource unauthorized response has a 4xx status code
func (o *DeleteResourceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource unauthorized response has a 5xx status code
func (o *DeleteResourceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource unauthorized response a status code equal to that given
func (o *DeleteResourceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteResourceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteResourceUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteResourceUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteResourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourceForbidden creates a DeleteResourceForbidden with default headers values
func NewDeleteResourceForbidden() *DeleteResourceForbidden {
	return &DeleteResourceForbidden{}
}

/*
DeleteResourceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteResourceForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete resource forbidden response has a 2xx status code
func (o *DeleteResourceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource forbidden response has a 3xx status code
func (o *DeleteResourceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource forbidden response has a 4xx status code
func (o *DeleteResourceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource forbidden response has a 5xx status code
func (o *DeleteResourceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource forbidden response a status code equal to that given
func (o *DeleteResourceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteResourceForbidden) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceForbidden  %+v", 403, o.Payload)
}

func (o *DeleteResourceForbidden) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceForbidden  %+v", 403, o.Payload)
}

func (o *DeleteResourceForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteResourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourceNotFound creates a DeleteResourceNotFound with default headers values
func NewDeleteResourceNotFound() *DeleteResourceNotFound {
	return &DeleteResourceNotFound{}
}

/*
DeleteResourceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteResourceNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete resource not found response has a 2xx status code
func (o *DeleteResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource not found response has a 3xx status code
func (o *DeleteResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource not found response has a 4xx status code
func (o *DeleteResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource not found response has a 5xx status code
func (o *DeleteResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource not found response a status code equal to that given
func (o *DeleteResourceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteResourceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceNotFound  %+v", 404, o.Payload)
}

func (o *DeleteResourceNotFound) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceNotFound  %+v", 404, o.Payload)
}

func (o *DeleteResourceNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourceConflict creates a DeleteResourceConflict with default headers values
func NewDeleteResourceConflict() *DeleteResourceConflict {
	return &DeleteResourceConflict{}
}

/*
DeleteResourceConflict describes a response with status code 409, with default header values.

Resource is in use
*/
type DeleteResourceConflict struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete resource conflict response has a 2xx status code
func (o *DeleteResourceConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource conflict response has a 3xx status code
func (o *DeleteResourceConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource conflict response has a 4xx status code
func (o *DeleteResourceConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource conflict response has a 5xx status code
func (o *DeleteResourceConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource conflict response a status code equal to that given
func (o *DeleteResourceConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteResourceConflict) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceConflict  %+v", 409, o.Payload)
}

func (o *DeleteResourceConflict) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceConflict  %+v", 409, o.Payload)
}

func (o *DeleteResourceConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteResourceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourceInternalServerError creates a DeleteResourceInternalServerError with default headers values
func NewDeleteResourceInternalServerError() *DeleteResourceInternalServerError {
	return &DeleteResourceInternalServerError{}
}

/*
DeleteResourceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteResourceInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete resource internal server error response has a 2xx status code
func (o *DeleteResourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource internal server error response has a 3xx status code
func (o *DeleteResourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource internal server error response has a 4xx status code
func (o *DeleteResourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resource internal server error response has a 5xx status code
func (o *DeleteResourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete resource internal server error response a status code equal to that given
func (o *DeleteResourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteResourceInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteResourceInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteResourceInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteResourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
