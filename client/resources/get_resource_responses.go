// Code generated by go-swagger; DO NOT EDIT.

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetResourceReader is a Reader for the GetResource structure.
type GetResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetResourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetResourceOK creates a GetResourceOK with default headers values
func NewGetResourceOK() *GetResourceOK {
	return &GetResourceOK{}
}

/*
GetResourceOK describes a response with status code 200, with default header values.

Success
*/
type GetResourceOK struct {
	Payload *models.Resource
}

// IsSuccess returns true when this get resource o k response has a 2xx status code
func (o *GetResourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource o k response has a 3xx status code
func (o *GetResourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource o k response has a 4xx status code
func (o *GetResourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource o k response has a 5xx status code
func (o *GetResourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource o k response a status code equal to that given
func (o *GetResourceOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetResourceOK) Error() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceOK  %+v", 200, o.Payload)
}

func (o *GetResourceOK) String() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceOK  %+v", 200, o.Payload)
}

func (o *GetResourceOK) GetPayload() *models.Resource {
	return o.Payload
}

func (o *GetResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Resource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceBadRequest creates a GetResourceBadRequest with default headers values
func NewGetResourceBadRequest() *GetResourceBadRequest {
	return &GetResourceBadRequest{}
}

/*
GetResourceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetResourceBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get resource bad request response has a 2xx status code
func (o *GetResourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource bad request response has a 3xx status code
func (o *GetResourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource bad request response has a 4xx status code
func (o *GetResourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource bad request response has a 5xx status code
func (o *GetResourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource bad request response a status code equal to that given
func (o *GetResourceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetResourceBadRequest) Error() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceBadRequest  %+v", 400, o.Payload)
}

func (o *GetResourceBadRequest) String() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceBadRequest  %+v", 400, o.Payload)
}

func (o *GetResourceBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetResourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceUnauthorized creates a GetResourceUnauthorized with default headers values
func NewGetResourceUnauthorized() *GetResourceUnauthorized {
	return &GetResourceUnauthorized{}
}

/*
GetResourceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get resource unauthorized response has a 2xx status code
func (o *GetResourceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource unauthorized response has a 3xx status code
func (o *GetResourceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource unauthorized response has a 4xx status code
func (o *GetResourceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource unauthorized response has a 5xx status code
func (o *GetResourceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource unauthorized response a status code equal to that given
func (o *GetResourceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetResourceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetResourceUnauthorized) String() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceUnauthorized  %+v", 401, o.Payload)
}

func (o *GetResourceUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetResourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceForbidden creates a GetResourceForbidden with default headers values
func NewGetResourceForbidden() *GetResourceForbidden {
	return &GetResourceForbidden{}
}

/*
GetResourceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get resource forbidden response has a 2xx status code
func (o *GetResourceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource forbidden response has a 3xx status code
func (o *GetResourceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource forbidden response has a 4xx status code
func (o *GetResourceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource forbidden response has a 5xx status code
func (o *GetResourceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource forbidden response a status code equal to that given
func (o *GetResourceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetResourceForbidden) Error() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceForbidden  %+v", 403, o.Payload)
}

func (o *GetResourceForbidden) String() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceForbidden  %+v", 403, o.Payload)
}

func (o *GetResourceForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetResourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceNotFound creates a GetResourceNotFound with default headers values
func NewGetResourceNotFound() *GetResourceNotFound {
	return &GetResourceNotFound{}
}

/*
GetResourceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get resource not found response has a 2xx status code
func (o *GetResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource not found response has a 3xx status code
func (o *GetResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource not found response has a 4xx status code
func (o *GetResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource not found response has a 5xx status code
func (o *GetResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource not found response a status code equal to that given
func (o *GetResourceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetResourceNotFound) Error() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceNotFound  %+v", 404, o.Payload)
}

func (o *GetResourceNotFound) String() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceNotFound  %+v", 404, o.Payload)
}

func (o *GetResourceNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceInternalServerError creates a GetResourceInternalServerError with default headers values
func NewGetResourceInternalServerError() *GetResourceInternalServerError {
	return &GetResourceInternalServerError{}
}

/*
GetResourceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResourceInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get resource internal server error response has a 2xx status code
func (o *GetResourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource internal server error response has a 3xx status code
func (o *GetResourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource internal server error response has a 4xx status code
func (o *GetResourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource internal server error response has a 5xx status code
func (o *GetResourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource internal server error response a status code equal to that given
func (o *GetResourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetResourceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourceInternalServerError) String() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] getResourceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourceInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetResourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
