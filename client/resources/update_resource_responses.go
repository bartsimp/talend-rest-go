// Code generated by go-swagger; DO NOT EDIT.

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// UpdateResourceReader is a Reader for the UpdateResource structure.
type UpdateResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateResourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateResourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateResourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateResourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateResourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateResourceNoContent creates a UpdateResourceNoContent with default headers values
func NewUpdateResourceNoContent() *UpdateResourceNoContent {
	return &UpdateResourceNoContent{}
}

/*
UpdateResourceNoContent describes a response with status code 204, with default header values.

no content
*/
type UpdateResourceNoContent struct {
}

// IsSuccess returns true when this update resource no content response has a 2xx status code
func (o *UpdateResourceNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update resource no content response has a 3xx status code
func (o *UpdateResourceNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource no content response has a 4xx status code
func (o *UpdateResourceNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update resource no content response has a 5xx status code
func (o *UpdateResourceNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource no content response a status code equal to that given
func (o *UpdateResourceNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateResourceNoContent) Error() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceNoContent ", 204)
}

func (o *UpdateResourceNoContent) String() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceNoContent ", 204)
}

func (o *UpdateResourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateResourceBadRequest creates a UpdateResourceBadRequest with default headers values
func NewUpdateResourceBadRequest() *UpdateResourceBadRequest {
	return &UpdateResourceBadRequest{}
}

/*
UpdateResourceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateResourceBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update resource bad request response has a 2xx status code
func (o *UpdateResourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource bad request response has a 3xx status code
func (o *UpdateResourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource bad request response has a 4xx status code
func (o *UpdateResourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource bad request response has a 5xx status code
func (o *UpdateResourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource bad request response a status code equal to that given
func (o *UpdateResourceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateResourceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateResourceBadRequest) String() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateResourceBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateResourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourceUnauthorized creates a UpdateResourceUnauthorized with default headers values
func NewUpdateResourceUnauthorized() *UpdateResourceUnauthorized {
	return &UpdateResourceUnauthorized{}
}

/*
UpdateResourceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateResourceUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update resource unauthorized response has a 2xx status code
func (o *UpdateResourceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource unauthorized response has a 3xx status code
func (o *UpdateResourceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource unauthorized response has a 4xx status code
func (o *UpdateResourceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource unauthorized response has a 5xx status code
func (o *UpdateResourceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource unauthorized response a status code equal to that given
func (o *UpdateResourceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateResourceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateResourceUnauthorized) String() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateResourceUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateResourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourceForbidden creates a UpdateResourceForbidden with default headers values
func NewUpdateResourceForbidden() *UpdateResourceForbidden {
	return &UpdateResourceForbidden{}
}

/*
UpdateResourceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateResourceForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update resource forbidden response has a 2xx status code
func (o *UpdateResourceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource forbidden response has a 3xx status code
func (o *UpdateResourceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource forbidden response has a 4xx status code
func (o *UpdateResourceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource forbidden response has a 5xx status code
func (o *UpdateResourceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource forbidden response a status code equal to that given
func (o *UpdateResourceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateResourceForbidden) Error() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceForbidden  %+v", 403, o.Payload)
}

func (o *UpdateResourceForbidden) String() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceForbidden  %+v", 403, o.Payload)
}

func (o *UpdateResourceForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateResourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourceNotFound creates a UpdateResourceNotFound with default headers values
func NewUpdateResourceNotFound() *UpdateResourceNotFound {
	return &UpdateResourceNotFound{}
}

/*
UpdateResourceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateResourceNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update resource not found response has a 2xx status code
func (o *UpdateResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource not found response has a 3xx status code
func (o *UpdateResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource not found response has a 4xx status code
func (o *UpdateResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource not found response has a 5xx status code
func (o *UpdateResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource not found response a status code equal to that given
func (o *UpdateResourceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateResourceNotFound) Error() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceNotFound  %+v", 404, o.Payload)
}

func (o *UpdateResourceNotFound) String() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceNotFound  %+v", 404, o.Payload)
}

func (o *UpdateResourceNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourceInternalServerError creates a UpdateResourceInternalServerError with default headers values
func NewUpdateResourceInternalServerError() *UpdateResourceInternalServerError {
	return &UpdateResourceInternalServerError{}
}

/*
UpdateResourceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateResourceInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update resource internal server error response has a 2xx status code
func (o *UpdateResourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource internal server error response has a 3xx status code
func (o *UpdateResourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource internal server error response has a 4xx status code
func (o *UpdateResourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update resource internal server error response has a 5xx status code
func (o *UpdateResourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update resource internal server error response a status code equal to that given
func (o *UpdateResourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateResourceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateResourceInternalServerError) String() string {
	return fmt.Sprintf("[PUT /resources/{id}][%d] updateResourceInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateResourceInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateResourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
