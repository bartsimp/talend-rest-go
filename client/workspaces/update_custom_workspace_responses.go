// Code generated by go-swagger; DO NOT EDIT.

package workspaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// UpdateCustomWorkspaceReader is a Reader for the UpdateCustomWorkspace structure.
type UpdateCustomWorkspaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCustomWorkspaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateCustomWorkspaceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCustomWorkspaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCustomWorkspaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCustomWorkspaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCustomWorkspaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateCustomWorkspaceNoContent creates a UpdateCustomWorkspaceNoContent with default headers values
func NewUpdateCustomWorkspaceNoContent() *UpdateCustomWorkspaceNoContent {
	return &UpdateCustomWorkspaceNoContent{}
}

/*
UpdateCustomWorkspaceNoContent describes a response with status code 204, with default header values.

Workspace successfully updated
*/
type UpdateCustomWorkspaceNoContent struct {
}

// IsSuccess returns true when this update custom workspace no content response has a 2xx status code
func (o *UpdateCustomWorkspaceNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update custom workspace no content response has a 3xx status code
func (o *UpdateCustomWorkspaceNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom workspace no content response has a 4xx status code
func (o *UpdateCustomWorkspaceNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update custom workspace no content response has a 5xx status code
func (o *UpdateCustomWorkspaceNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update custom workspace no content response a status code equal to that given
func (o *UpdateCustomWorkspaceNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateCustomWorkspaceNoContent) Error() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceNoContent ", 204)
}

func (o *UpdateCustomWorkspaceNoContent) String() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceNoContent ", 204)
}

func (o *UpdateCustomWorkspaceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCustomWorkspaceBadRequest creates a UpdateCustomWorkspaceBadRequest with default headers values
func NewUpdateCustomWorkspaceBadRequest() *UpdateCustomWorkspaceBadRequest {
	return &UpdateCustomWorkspaceBadRequest{}
}

/*
UpdateCustomWorkspaceBadRequest describes a response with status code 400, with default header values.

Parameters not valid
*/
type UpdateCustomWorkspaceBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update custom workspace bad request response has a 2xx status code
func (o *UpdateCustomWorkspaceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update custom workspace bad request response has a 3xx status code
func (o *UpdateCustomWorkspaceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom workspace bad request response has a 4xx status code
func (o *UpdateCustomWorkspaceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update custom workspace bad request response has a 5xx status code
func (o *UpdateCustomWorkspaceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update custom workspace bad request response a status code equal to that given
func (o *UpdateCustomWorkspaceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateCustomWorkspaceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCustomWorkspaceBadRequest) String() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCustomWorkspaceBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateCustomWorkspaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomWorkspaceUnauthorized creates a UpdateCustomWorkspaceUnauthorized with default headers values
func NewUpdateCustomWorkspaceUnauthorized() *UpdateCustomWorkspaceUnauthorized {
	return &UpdateCustomWorkspaceUnauthorized{}
}

/*
UpdateCustomWorkspaceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateCustomWorkspaceUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update custom workspace unauthorized response has a 2xx status code
func (o *UpdateCustomWorkspaceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update custom workspace unauthorized response has a 3xx status code
func (o *UpdateCustomWorkspaceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom workspace unauthorized response has a 4xx status code
func (o *UpdateCustomWorkspaceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update custom workspace unauthorized response has a 5xx status code
func (o *UpdateCustomWorkspaceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update custom workspace unauthorized response a status code equal to that given
func (o *UpdateCustomWorkspaceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateCustomWorkspaceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateCustomWorkspaceUnauthorized) String() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateCustomWorkspaceUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateCustomWorkspaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomWorkspaceForbidden creates a UpdateCustomWorkspaceForbidden with default headers values
func NewUpdateCustomWorkspaceForbidden() *UpdateCustomWorkspaceForbidden {
	return &UpdateCustomWorkspaceForbidden{}
}

/*
UpdateCustomWorkspaceForbidden describes a response with status code 403, with default header values.

Not authorized to update the environment
*/
type UpdateCustomWorkspaceForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update custom workspace forbidden response has a 2xx status code
func (o *UpdateCustomWorkspaceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update custom workspace forbidden response has a 3xx status code
func (o *UpdateCustomWorkspaceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom workspace forbidden response has a 4xx status code
func (o *UpdateCustomWorkspaceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update custom workspace forbidden response has a 5xx status code
func (o *UpdateCustomWorkspaceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update custom workspace forbidden response a status code equal to that given
func (o *UpdateCustomWorkspaceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateCustomWorkspaceForbidden) Error() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCustomWorkspaceForbidden) String() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCustomWorkspaceForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateCustomWorkspaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomWorkspaceInternalServerError creates a UpdateCustomWorkspaceInternalServerError with default headers values
func NewUpdateCustomWorkspaceInternalServerError() *UpdateCustomWorkspaceInternalServerError {
	return &UpdateCustomWorkspaceInternalServerError{}
}

/*
UpdateCustomWorkspaceInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateCustomWorkspaceInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this update custom workspace internal server error response has a 2xx status code
func (o *UpdateCustomWorkspaceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update custom workspace internal server error response has a 3xx status code
func (o *UpdateCustomWorkspaceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom workspace internal server error response has a 4xx status code
func (o *UpdateCustomWorkspaceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update custom workspace internal server error response has a 5xx status code
func (o *UpdateCustomWorkspaceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update custom workspace internal server error response a status code equal to that given
func (o *UpdateCustomWorkspaceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateCustomWorkspaceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateCustomWorkspaceInternalServerError) String() string {
	return fmt.Sprintf("[PUT /workspaces/{workspaceId}][%d] updateCustomWorkspaceInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateCustomWorkspaceInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *UpdateCustomWorkspaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
