// Code generated by go-swagger; DO NOT EDIT.

package runtime_pipeline_engines_run_profiles_standard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetStandardRunProfileByIDReader is a Reader for the GetStandardRunProfileByID structure.
type GetStandardRunProfileByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStandardRunProfileByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStandardRunProfileByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStandardRunProfileByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetStandardRunProfileByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetStandardRunProfileByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStandardRunProfileByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStandardRunProfileByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStandardRunProfileByIDOK creates a GetStandardRunProfileByIDOK with default headers values
func NewGetStandardRunProfileByIDOK() *GetStandardRunProfileByIDOK {
	return &GetStandardRunProfileByIDOK{}
}

/*
GetStandardRunProfileByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetStandardRunProfileByIDOK struct {
	Payload *models.StandardRunProfileResponse
}

// IsSuccess returns true when this get standard run profile by Id o k response has a 2xx status code
func (o *GetStandardRunProfileByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get standard run profile by Id o k response has a 3xx status code
func (o *GetStandardRunProfileByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get standard run profile by Id o k response has a 4xx status code
func (o *GetStandardRunProfileByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get standard run profile by Id o k response has a 5xx status code
func (o *GetStandardRunProfileByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get standard run profile by Id o k response a status code equal to that given
func (o *GetStandardRunProfileByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetStandardRunProfileByIDOK) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdOK  %+v", 200, o.Payload)
}

func (o *GetStandardRunProfileByIDOK) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdOK  %+v", 200, o.Payload)
}

func (o *GetStandardRunProfileByIDOK) GetPayload() *models.StandardRunProfileResponse {
	return o.Payload
}

func (o *GetStandardRunProfileByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardRunProfileResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStandardRunProfileByIDBadRequest creates a GetStandardRunProfileByIDBadRequest with default headers values
func NewGetStandardRunProfileByIDBadRequest() *GetStandardRunProfileByIDBadRequest {
	return &GetStandardRunProfileByIDBadRequest{}
}

/*
GetStandardRunProfileByIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetStandardRunProfileByIDBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get standard run profile by Id bad request response has a 2xx status code
func (o *GetStandardRunProfileByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get standard run profile by Id bad request response has a 3xx status code
func (o *GetStandardRunProfileByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get standard run profile by Id bad request response has a 4xx status code
func (o *GetStandardRunProfileByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get standard run profile by Id bad request response has a 5xx status code
func (o *GetStandardRunProfileByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get standard run profile by Id bad request response a status code equal to that given
func (o *GetStandardRunProfileByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetStandardRunProfileByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetStandardRunProfileByIDBadRequest) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetStandardRunProfileByIDBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStandardRunProfileByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStandardRunProfileByIDUnauthorized creates a GetStandardRunProfileByIDUnauthorized with default headers values
func NewGetStandardRunProfileByIDUnauthorized() *GetStandardRunProfileByIDUnauthorized {
	return &GetStandardRunProfileByIDUnauthorized{}
}

/*
GetStandardRunProfileByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetStandardRunProfileByIDUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get standard run profile by Id unauthorized response has a 2xx status code
func (o *GetStandardRunProfileByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get standard run profile by Id unauthorized response has a 3xx status code
func (o *GetStandardRunProfileByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get standard run profile by Id unauthorized response has a 4xx status code
func (o *GetStandardRunProfileByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get standard run profile by Id unauthorized response has a 5xx status code
func (o *GetStandardRunProfileByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get standard run profile by Id unauthorized response a status code equal to that given
func (o *GetStandardRunProfileByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetStandardRunProfileByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetStandardRunProfileByIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetStandardRunProfileByIDUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStandardRunProfileByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStandardRunProfileByIDForbidden creates a GetStandardRunProfileByIDForbidden with default headers values
func NewGetStandardRunProfileByIDForbidden() *GetStandardRunProfileByIDForbidden {
	return &GetStandardRunProfileByIDForbidden{}
}

/*
GetStandardRunProfileByIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetStandardRunProfileByIDForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get standard run profile by Id forbidden response has a 2xx status code
func (o *GetStandardRunProfileByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get standard run profile by Id forbidden response has a 3xx status code
func (o *GetStandardRunProfileByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get standard run profile by Id forbidden response has a 4xx status code
func (o *GetStandardRunProfileByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get standard run profile by Id forbidden response has a 5xx status code
func (o *GetStandardRunProfileByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get standard run profile by Id forbidden response a status code equal to that given
func (o *GetStandardRunProfileByIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetStandardRunProfileByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetStandardRunProfileByIDForbidden) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetStandardRunProfileByIDForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStandardRunProfileByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStandardRunProfileByIDNotFound creates a GetStandardRunProfileByIDNotFound with default headers values
func NewGetStandardRunProfileByIDNotFound() *GetStandardRunProfileByIDNotFound {
	return &GetStandardRunProfileByIDNotFound{}
}

/*
GetStandardRunProfileByIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetStandardRunProfileByIDNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get standard run profile by Id not found response has a 2xx status code
func (o *GetStandardRunProfileByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get standard run profile by Id not found response has a 3xx status code
func (o *GetStandardRunProfileByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get standard run profile by Id not found response has a 4xx status code
func (o *GetStandardRunProfileByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get standard run profile by Id not found response has a 5xx status code
func (o *GetStandardRunProfileByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get standard run profile by Id not found response a status code equal to that given
func (o *GetStandardRunProfileByIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetStandardRunProfileByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetStandardRunProfileByIDNotFound) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetStandardRunProfileByIDNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStandardRunProfileByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStandardRunProfileByIDInternalServerError creates a GetStandardRunProfileByIDInternalServerError with default headers values
func NewGetStandardRunProfileByIDInternalServerError() *GetStandardRunProfileByIDInternalServerError {
	return &GetStandardRunProfileByIDInternalServerError{}
}

/*
GetStandardRunProfileByIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetStandardRunProfileByIDInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get standard run profile by Id internal server error response has a 2xx status code
func (o *GetStandardRunProfileByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get standard run profile by Id internal server error response has a 3xx status code
func (o *GetStandardRunProfileByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get standard run profile by Id internal server error response has a 4xx status code
func (o *GetStandardRunProfileByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get standard run profile by Id internal server error response has a 5xx status code
func (o *GetStandardRunProfileByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get standard run profile by Id internal server error response a status code equal to that given
func (o *GetStandardRunProfileByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetStandardRunProfileByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetStandardRunProfileByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}][%d] getStandardRunProfileByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetStandardRunProfileByIDInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStandardRunProfileByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
