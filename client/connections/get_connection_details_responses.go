// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetConnectionDetailsReader is a Reader for the GetConnectionDetails structure.
type GetConnectionDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectionDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConnectionDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConnectionDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConnectionDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConnectionDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConnectionDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConnectionDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConnectionDetailsOK creates a GetConnectionDetailsOK with default headers values
func NewGetConnectionDetailsOK() *GetConnectionDetailsOK {
	return &GetConnectionDetailsOK{}
}

/*
GetConnectionDetailsOK describes a response with status code 200, with default header values.

OK
*/
type GetConnectionDetailsOK struct {
	Payload *models.ConnectionDetails
}

// IsSuccess returns true when this get connection details o k response has a 2xx status code
func (o *GetConnectionDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get connection details o k response has a 3xx status code
func (o *GetConnectionDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection details o k response has a 4xx status code
func (o *GetConnectionDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connection details o k response has a 5xx status code
func (o *GetConnectionDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection details o k response a status code equal to that given
func (o *GetConnectionDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConnectionDetailsOK) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetConnectionDetailsOK) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetConnectionDetailsOK) GetPayload() *models.ConnectionDetails {
	return o.Payload
}

func (o *GetConnectionDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConnectionDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectionDetailsBadRequest creates a GetConnectionDetailsBadRequest with default headers values
func NewGetConnectionDetailsBadRequest() *GetConnectionDetailsBadRequest {
	return &GetConnectionDetailsBadRequest{}
}

/*
GetConnectionDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetConnectionDetailsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get connection details bad request response has a 2xx status code
func (o *GetConnectionDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection details bad request response has a 3xx status code
func (o *GetConnectionDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection details bad request response has a 4xx status code
func (o *GetConnectionDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection details bad request response has a 5xx status code
func (o *GetConnectionDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection details bad request response a status code equal to that given
func (o *GetConnectionDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConnectionDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConnectionDetailsBadRequest) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConnectionDetailsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetConnectionDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectionDetailsUnauthorized creates a GetConnectionDetailsUnauthorized with default headers values
func NewGetConnectionDetailsUnauthorized() *GetConnectionDetailsUnauthorized {
	return &GetConnectionDetailsUnauthorized{}
}

/*
GetConnectionDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetConnectionDetailsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get connection details unauthorized response has a 2xx status code
func (o *GetConnectionDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection details unauthorized response has a 3xx status code
func (o *GetConnectionDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection details unauthorized response has a 4xx status code
func (o *GetConnectionDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection details unauthorized response has a 5xx status code
func (o *GetConnectionDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection details unauthorized response a status code equal to that given
func (o *GetConnectionDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConnectionDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConnectionDetailsUnauthorized) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConnectionDetailsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetConnectionDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectionDetailsForbidden creates a GetConnectionDetailsForbidden with default headers values
func NewGetConnectionDetailsForbidden() *GetConnectionDetailsForbidden {
	return &GetConnectionDetailsForbidden{}
}

/*
GetConnectionDetailsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetConnectionDetailsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get connection details forbidden response has a 2xx status code
func (o *GetConnectionDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection details forbidden response has a 3xx status code
func (o *GetConnectionDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection details forbidden response has a 4xx status code
func (o *GetConnectionDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection details forbidden response has a 5xx status code
func (o *GetConnectionDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection details forbidden response a status code equal to that given
func (o *GetConnectionDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConnectionDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsForbidden  %+v", 403, o.Payload)
}

func (o *GetConnectionDetailsForbidden) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsForbidden  %+v", 403, o.Payload)
}

func (o *GetConnectionDetailsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetConnectionDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectionDetailsNotFound creates a GetConnectionDetailsNotFound with default headers values
func NewGetConnectionDetailsNotFound() *GetConnectionDetailsNotFound {
	return &GetConnectionDetailsNotFound{}
}

/*
GetConnectionDetailsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetConnectionDetailsNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get connection details not found response has a 2xx status code
func (o *GetConnectionDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection details not found response has a 3xx status code
func (o *GetConnectionDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection details not found response has a 4xx status code
func (o *GetConnectionDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection details not found response has a 5xx status code
func (o *GetConnectionDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection details not found response a status code equal to that given
func (o *GetConnectionDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConnectionDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetConnectionDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetConnectionDetailsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetConnectionDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectionDetailsInternalServerError creates a GetConnectionDetailsInternalServerError with default headers values
func NewGetConnectionDetailsInternalServerError() *GetConnectionDetailsInternalServerError {
	return &GetConnectionDetailsInternalServerError{}
}

/*
GetConnectionDetailsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetConnectionDetailsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get connection details internal server error response has a 2xx status code
func (o *GetConnectionDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection details internal server error response has a 3xx status code
func (o *GetConnectionDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection details internal server error response has a 4xx status code
func (o *GetConnectionDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connection details internal server error response has a 5xx status code
func (o *GetConnectionDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get connection details internal server error response a status code equal to that given
func (o *GetConnectionDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConnectionDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConnectionDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /connections/{id}][%d] getConnectionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConnectionDetailsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetConnectionDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
