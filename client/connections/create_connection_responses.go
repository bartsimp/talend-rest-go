// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// CreateConnectionReader is a Reader for the CreateConnection structure.
type CreateConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateConnectionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateConnectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateConnectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateConnectionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateConnectionOK creates a CreateConnectionOK with default headers values
func NewCreateConnectionOK() *CreateConnectionOK {
	return &CreateConnectionOK{}
}

/*
CreateConnectionOK describes a response with status code 200, with default header values.

successful operation
*/
type CreateConnectionOK struct {
	Payload *models.ConnectionDetails
}

// IsSuccess returns true when this create connection o k response has a 2xx status code
func (o *CreateConnectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create connection o k response has a 3xx status code
func (o *CreateConnectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create connection o k response has a 4xx status code
func (o *CreateConnectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create connection o k response has a 5xx status code
func (o *CreateConnectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create connection o k response a status code equal to that given
func (o *CreateConnectionOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateConnectionOK) Error() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionOK  %+v", 200, o.Payload)
}

func (o *CreateConnectionOK) String() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionOK  %+v", 200, o.Payload)
}

func (o *CreateConnectionOK) GetPayload() *models.ConnectionDetails {
	return o.Payload
}

func (o *CreateConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConnectionDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConnectionCreated creates a CreateConnectionCreated with default headers values
func NewCreateConnectionCreated() *CreateConnectionCreated {
	return &CreateConnectionCreated{}
}

/*
CreateConnectionCreated describes a response with status code 201, with default header values.

Created successfully
*/
type CreateConnectionCreated struct {
	Payload *models.ConnectionDetails
}

// IsSuccess returns true when this create connection created response has a 2xx status code
func (o *CreateConnectionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create connection created response has a 3xx status code
func (o *CreateConnectionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create connection created response has a 4xx status code
func (o *CreateConnectionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create connection created response has a 5xx status code
func (o *CreateConnectionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create connection created response a status code equal to that given
func (o *CreateConnectionCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateConnectionCreated) Error() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionCreated  %+v", 201, o.Payload)
}

func (o *CreateConnectionCreated) String() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionCreated  %+v", 201, o.Payload)
}

func (o *CreateConnectionCreated) GetPayload() *models.ConnectionDetails {
	return o.Payload
}

func (o *CreateConnectionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConnectionDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConnectionBadRequest creates a CreateConnectionBadRequest with default headers values
func NewCreateConnectionBadRequest() *CreateConnectionBadRequest {
	return &CreateConnectionBadRequest{}
}

/*
CreateConnectionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateConnectionBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create connection bad request response has a 2xx status code
func (o *CreateConnectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create connection bad request response has a 3xx status code
func (o *CreateConnectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create connection bad request response has a 4xx status code
func (o *CreateConnectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create connection bad request response has a 5xx status code
func (o *CreateConnectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create connection bad request response a status code equal to that given
func (o *CreateConnectionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateConnectionBadRequest) String() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateConnectionBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConnectionUnauthorized creates a CreateConnectionUnauthorized with default headers values
func NewCreateConnectionUnauthorized() *CreateConnectionUnauthorized {
	return &CreateConnectionUnauthorized{}
}

/*
CreateConnectionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateConnectionUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create connection unauthorized response has a 2xx status code
func (o *CreateConnectionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create connection unauthorized response has a 3xx status code
func (o *CreateConnectionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create connection unauthorized response has a 4xx status code
func (o *CreateConnectionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create connection unauthorized response has a 5xx status code
func (o *CreateConnectionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create connection unauthorized response a status code equal to that given
func (o *CreateConnectionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateConnectionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateConnectionUnauthorized) String() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateConnectionUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateConnectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConnectionForbidden creates a CreateConnectionForbidden with default headers values
func NewCreateConnectionForbidden() *CreateConnectionForbidden {
	return &CreateConnectionForbidden{}
}

/*
CreateConnectionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateConnectionForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create connection forbidden response has a 2xx status code
func (o *CreateConnectionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create connection forbidden response has a 3xx status code
func (o *CreateConnectionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create connection forbidden response has a 4xx status code
func (o *CreateConnectionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create connection forbidden response has a 5xx status code
func (o *CreateConnectionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create connection forbidden response a status code equal to that given
func (o *CreateConnectionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateConnectionForbidden) Error() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionForbidden  %+v", 403, o.Payload)
}

func (o *CreateConnectionForbidden) String() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionForbidden  %+v", 403, o.Payload)
}

func (o *CreateConnectionForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateConnectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConnectionConflict creates a CreateConnectionConflict with default headers values
func NewCreateConnectionConflict() *CreateConnectionConflict {
	return &CreateConnectionConflict{}
}

/*
CreateConnectionConflict describes a response with status code 409, with default header values.

Connection name already exists
*/
type CreateConnectionConflict struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create connection conflict response has a 2xx status code
func (o *CreateConnectionConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create connection conflict response has a 3xx status code
func (o *CreateConnectionConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create connection conflict response has a 4xx status code
func (o *CreateConnectionConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create connection conflict response has a 5xx status code
func (o *CreateConnectionConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create connection conflict response a status code equal to that given
func (o *CreateConnectionConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateConnectionConflict) Error() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionConflict  %+v", 409, o.Payload)
}

func (o *CreateConnectionConflict) String() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionConflict  %+v", 409, o.Payload)
}

func (o *CreateConnectionConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateConnectionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConnectionInternalServerError creates a CreateConnectionInternalServerError with default headers values
func NewCreateConnectionInternalServerError() *CreateConnectionInternalServerError {
	return &CreateConnectionInternalServerError{}
}

/*
CreateConnectionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateConnectionInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create connection internal server error response has a 2xx status code
func (o *CreateConnectionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create connection internal server error response has a 3xx status code
func (o *CreateConnectionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create connection internal server error response has a 4xx status code
func (o *CreateConnectionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create connection internal server error response has a 5xx status code
func (o *CreateConnectionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create connection internal server error response a status code equal to that given
func (o *CreateConnectionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateConnectionInternalServerError) String() string {
	return fmt.Sprintf("[POST /connections][%d] createConnectionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateConnectionInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
