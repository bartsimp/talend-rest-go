// Code generated by go-swagger; DO NOT EDIT.

package runtime_pipeline_engines_run_profiles_big_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new runtime pipeline engines run profiles big data API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for runtime pipeline engines run profiles big data API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateRunProfileBigData(params *CreateRunProfileBigDataParams, opts ...ClientOption) (*CreateRunProfileBigDataCreated, error)

	GetBigDataRunProfileByID(params *GetBigDataRunProfileByIDParams, opts ...ClientOption) (*GetBigDataRunProfileByIDOK, error)

	UpdateRunProfileBigData(params *UpdateRunProfileBigDataParams, opts ...ClientOption) (*UpdateRunProfileBigDataNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateRunProfileBigData creates new run profile
*/
func (a *Client) CreateRunProfileBigData(params *CreateRunProfileBigDataParams, opts ...ClientOption) (*CreateRunProfileBigDataCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateRunProfileBigDataParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createRunProfileBigData",
		Method:             "POST",
		PathPattern:        "/runtimes/pipeline-engines/{engineId}/run-profiles/big-data",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateRunProfileBigDataReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateRunProfileBigDataCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createRunProfileBigData: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetBigDataRunProfileByID gets run profile
*/
func (a *Client) GetBigDataRunProfileByID(params *GetBigDataRunProfileByIDParams, opts ...ClientOption) (*GetBigDataRunProfileByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetBigDataRunProfileByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getBigDataRunProfileById",
		Method:             "GET",
		PathPattern:        "/runtimes/pipeline-engines/{engineId}/run-profiles/big-data/{runProfileId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetBigDataRunProfileByIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetBigDataRunProfileByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getBigDataRunProfileById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateRunProfileBigData updates run profile
*/
func (a *Client) UpdateRunProfileBigData(params *UpdateRunProfileBigDataParams, opts ...ClientOption) (*UpdateRunProfileBigDataNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateRunProfileBigDataParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "updateRunProfileBigData",
		Method:             "PUT",
		PathPattern:        "/runtimes/pipeline-engines/{engineId}/run-profiles/big-data/{runProfileId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateRunProfileBigDataReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateRunProfileBigDataNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateRunProfileBigData: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
