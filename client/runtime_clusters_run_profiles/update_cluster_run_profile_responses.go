// Code generated by go-swagger; DO NOT EDIT.

package runtime_clusters_run_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// UpdateClusterRunProfileReader is a Reader for the UpdateClusterRunProfile structure.
type UpdateClusterRunProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterRunProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClusterRunProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateClusterRunProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateClusterRunProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateClusterRunProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateClusterRunProfileOK creates a UpdateClusterRunProfileOK with default headers values
func NewUpdateClusterRunProfileOK() *UpdateClusterRunProfileOK {
	return &UpdateClusterRunProfileOK{}
}

/*
UpdateClusterRunProfileOK describes a response with status code 200, with default header values.

OK
*/
type UpdateClusterRunProfileOK struct {
	Payload *models.RuntimeRunProfile
}

// IsSuccess returns true when this update cluster run profile o k response has a 2xx status code
func (o *UpdateClusterRunProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster run profile o k response has a 3xx status code
func (o *UpdateClusterRunProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster run profile o k response has a 4xx status code
func (o *UpdateClusterRunProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster run profile o k response has a 5xx status code
func (o *UpdateClusterRunProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster run profile o k response a status code equal to that given
func (o *UpdateClusterRunProfileOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateClusterRunProfileOK) Error() string {
	return fmt.Sprintf("[PUT /runtimes/remote-engine-clusters/{clusterId}/run-profiles/{runProfileId}][%d] updateClusterRunProfileOK  %+v", 200, o.Payload)
}

func (o *UpdateClusterRunProfileOK) String() string {
	return fmt.Sprintf("[PUT /runtimes/remote-engine-clusters/{clusterId}/run-profiles/{runProfileId}][%d] updateClusterRunProfileOK  %+v", 200, o.Payload)
}

func (o *UpdateClusterRunProfileOK) GetPayload() *models.RuntimeRunProfile {
	return o.Payload
}

func (o *UpdateClusterRunProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeRunProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterRunProfileForbidden creates a UpdateClusterRunProfileForbidden with default headers values
func NewUpdateClusterRunProfileForbidden() *UpdateClusterRunProfileForbidden {
	return &UpdateClusterRunProfileForbidden{}
}

/*
UpdateClusterRunProfileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateClusterRunProfileForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update cluster run profile forbidden response has a 2xx status code
func (o *UpdateClusterRunProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster run profile forbidden response has a 3xx status code
func (o *UpdateClusterRunProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster run profile forbidden response has a 4xx status code
func (o *UpdateClusterRunProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster run profile forbidden response has a 5xx status code
func (o *UpdateClusterRunProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster run profile forbidden response a status code equal to that given
func (o *UpdateClusterRunProfileForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateClusterRunProfileForbidden) Error() string {
	return fmt.Sprintf("[PUT /runtimes/remote-engine-clusters/{clusterId}/run-profiles/{runProfileId}][%d] updateClusterRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *UpdateClusterRunProfileForbidden) String() string {
	return fmt.Sprintf("[PUT /runtimes/remote-engine-clusters/{clusterId}/run-profiles/{runProfileId}][%d] updateClusterRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *UpdateClusterRunProfileForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateClusterRunProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterRunProfileNotFound creates a UpdateClusterRunProfileNotFound with default headers values
func NewUpdateClusterRunProfileNotFound() *UpdateClusterRunProfileNotFound {
	return &UpdateClusterRunProfileNotFound{}
}

/*
UpdateClusterRunProfileNotFound describes a response with status code 404, with default header values.

No run profile can be found
*/
type UpdateClusterRunProfileNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update cluster run profile not found response has a 2xx status code
func (o *UpdateClusterRunProfileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster run profile not found response has a 3xx status code
func (o *UpdateClusterRunProfileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster run profile not found response has a 4xx status code
func (o *UpdateClusterRunProfileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster run profile not found response has a 5xx status code
func (o *UpdateClusterRunProfileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster run profile not found response a status code equal to that given
func (o *UpdateClusterRunProfileNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateClusterRunProfileNotFound) Error() string {
	return fmt.Sprintf("[PUT /runtimes/remote-engine-clusters/{clusterId}/run-profiles/{runProfileId}][%d] updateClusterRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *UpdateClusterRunProfileNotFound) String() string {
	return fmt.Sprintf("[PUT /runtimes/remote-engine-clusters/{clusterId}/run-profiles/{runProfileId}][%d] updateClusterRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *UpdateClusterRunProfileNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateClusterRunProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterRunProfileInternalServerError creates a UpdateClusterRunProfileInternalServerError with default headers values
func NewUpdateClusterRunProfileInternalServerError() *UpdateClusterRunProfileInternalServerError {
	return &UpdateClusterRunProfileInternalServerError{}
}

/*
UpdateClusterRunProfileInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateClusterRunProfileInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update cluster run profile internal server error response has a 2xx status code
func (o *UpdateClusterRunProfileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster run profile internal server error response has a 3xx status code
func (o *UpdateClusterRunProfileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster run profile internal server error response has a 4xx status code
func (o *UpdateClusterRunProfileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster run profile internal server error response has a 5xx status code
func (o *UpdateClusterRunProfileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cluster run profile internal server error response a status code equal to that given
func (o *UpdateClusterRunProfileInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateClusterRunProfileInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /runtimes/remote-engine-clusters/{clusterId}/run-profiles/{runProfileId}][%d] updateClusterRunProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateClusterRunProfileInternalServerError) String() string {
	return fmt.Sprintf("[PUT /runtimes/remote-engine-clusters/{clusterId}/run-profiles/{runProfileId}][%d] updateClusterRunProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateClusterRunProfileInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateClusterRunProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
