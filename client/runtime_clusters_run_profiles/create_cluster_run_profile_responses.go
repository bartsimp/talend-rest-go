// Code generated by go-swagger; DO NOT EDIT.

package runtime_clusters_run_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// CreateClusterRunProfileReader is a Reader for the CreateClusterRunProfile structure.
type CreateClusterRunProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClusterRunProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewCreateClusterRunProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateClusterRunProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateClusterRunProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateClusterRunProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateClusterRunProfileBadRequest creates a CreateClusterRunProfileBadRequest with default headers values
func NewCreateClusterRunProfileBadRequest() *CreateClusterRunProfileBadRequest {
	return &CreateClusterRunProfileBadRequest{}
}

/*
CreateClusterRunProfileBadRequest describes a response with status code 400, with default header values.

Bad run profile definition
*/
type CreateClusterRunProfileBadRequest struct {
	Payload *models.RuntimeRunProfile
}

// IsSuccess returns true when this create cluster run profile bad request response has a 2xx status code
func (o *CreateClusterRunProfileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create cluster run profile bad request response has a 3xx status code
func (o *CreateClusterRunProfileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create cluster run profile bad request response has a 4xx status code
func (o *CreateClusterRunProfileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create cluster run profile bad request response has a 5xx status code
func (o *CreateClusterRunProfileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create cluster run profile bad request response a status code equal to that given
func (o *CreateClusterRunProfileBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateClusterRunProfileBadRequest) Error() string {
	return fmt.Sprintf("[POST /runtimes/remote-engine-clusters/{clusterId}/run-profiles][%d] createClusterRunProfileBadRequest  %+v", 400, o.Payload)
}

func (o *CreateClusterRunProfileBadRequest) String() string {
	return fmt.Sprintf("[POST /runtimes/remote-engine-clusters/{clusterId}/run-profiles][%d] createClusterRunProfileBadRequest  %+v", 400, o.Payload)
}

func (o *CreateClusterRunProfileBadRequest) GetPayload() *models.RuntimeRunProfile {
	return o.Payload
}

func (o *CreateClusterRunProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeRunProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterRunProfileForbidden creates a CreateClusterRunProfileForbidden with default headers values
func NewCreateClusterRunProfileForbidden() *CreateClusterRunProfileForbidden {
	return &CreateClusterRunProfileForbidden{}
}

/*
CreateClusterRunProfileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateClusterRunProfileForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create cluster run profile forbidden response has a 2xx status code
func (o *CreateClusterRunProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create cluster run profile forbidden response has a 3xx status code
func (o *CreateClusterRunProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create cluster run profile forbidden response has a 4xx status code
func (o *CreateClusterRunProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create cluster run profile forbidden response has a 5xx status code
func (o *CreateClusterRunProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create cluster run profile forbidden response a status code equal to that given
func (o *CreateClusterRunProfileForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateClusterRunProfileForbidden) Error() string {
	return fmt.Sprintf("[POST /runtimes/remote-engine-clusters/{clusterId}/run-profiles][%d] createClusterRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *CreateClusterRunProfileForbidden) String() string {
	return fmt.Sprintf("[POST /runtimes/remote-engine-clusters/{clusterId}/run-profiles][%d] createClusterRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *CreateClusterRunProfileForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateClusterRunProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterRunProfileNotFound creates a CreateClusterRunProfileNotFound with default headers values
func NewCreateClusterRunProfileNotFound() *CreateClusterRunProfileNotFound {
	return &CreateClusterRunProfileNotFound{}
}

/*
CreateClusterRunProfileNotFound describes a response with status code 404, with default header values.

No cluster can be found by provided
*/
type CreateClusterRunProfileNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create cluster run profile not found response has a 2xx status code
func (o *CreateClusterRunProfileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create cluster run profile not found response has a 3xx status code
func (o *CreateClusterRunProfileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create cluster run profile not found response has a 4xx status code
func (o *CreateClusterRunProfileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create cluster run profile not found response has a 5xx status code
func (o *CreateClusterRunProfileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create cluster run profile not found response a status code equal to that given
func (o *CreateClusterRunProfileNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateClusterRunProfileNotFound) Error() string {
	return fmt.Sprintf("[POST /runtimes/remote-engine-clusters/{clusterId}/run-profiles][%d] createClusterRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *CreateClusterRunProfileNotFound) String() string {
	return fmt.Sprintf("[POST /runtimes/remote-engine-clusters/{clusterId}/run-profiles][%d] createClusterRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *CreateClusterRunProfileNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateClusterRunProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterRunProfileInternalServerError creates a CreateClusterRunProfileInternalServerError with default headers values
func NewCreateClusterRunProfileInternalServerError() *CreateClusterRunProfileInternalServerError {
	return &CreateClusterRunProfileInternalServerError{}
}

/*
CreateClusterRunProfileInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CreateClusterRunProfileInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create cluster run profile internal server error response has a 2xx status code
func (o *CreateClusterRunProfileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create cluster run profile internal server error response has a 3xx status code
func (o *CreateClusterRunProfileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create cluster run profile internal server error response has a 4xx status code
func (o *CreateClusterRunProfileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create cluster run profile internal server error response has a 5xx status code
func (o *CreateClusterRunProfileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create cluster run profile internal server error response a status code equal to that given
func (o *CreateClusterRunProfileInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateClusterRunProfileInternalServerError) Error() string {
	return fmt.Sprintf("[POST /runtimes/remote-engine-clusters/{clusterId}/run-profiles][%d] createClusterRunProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateClusterRunProfileInternalServerError) String() string {
	return fmt.Sprintf("[POST /runtimes/remote-engine-clusters/{clusterId}/run-profiles][%d] createClusterRunProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateClusterRunProfileInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateClusterRunProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
