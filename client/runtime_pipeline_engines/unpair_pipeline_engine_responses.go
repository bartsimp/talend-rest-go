// Code generated by go-swagger; DO NOT EDIT.

package runtime_pipeline_engines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// UnpairPipelineEngineReader is a Reader for the UnpairPipelineEngine structure.
type UnpairPipelineEngineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnpairPipelineEngineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnpairPipelineEngineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnpairPipelineEngineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUnpairPipelineEngineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUnpairPipelineEngineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUnpairPipelineEngineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnpairPipelineEngineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUnpairPipelineEngineOK creates a UnpairPipelineEngineOK with default headers values
func NewUnpairPipelineEngineOK() *UnpairPipelineEngineOK {
	return &UnpairPipelineEngineOK{}
}

/*
UnpairPipelineEngineOK describes a response with status code 200, with default header values.

OK
*/
type UnpairPipelineEngineOK struct {
	Payload string
}

// IsSuccess returns true when this unpair pipeline engine o k response has a 2xx status code
func (o *UnpairPipelineEngineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this unpair pipeline engine o k response has a 3xx status code
func (o *UnpairPipelineEngineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unpair pipeline engine o k response has a 4xx status code
func (o *UnpairPipelineEngineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this unpair pipeline engine o k response has a 5xx status code
func (o *UnpairPipelineEngineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this unpair pipeline engine o k response a status code equal to that given
func (o *UnpairPipelineEngineOK) IsCode(code int) bool {
	return code == 200
}

func (o *UnpairPipelineEngineOK) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineOK  %+v", 200, o.Payload)
}

func (o *UnpairPipelineEngineOK) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineOK  %+v", 200, o.Payload)
}

func (o *UnpairPipelineEngineOK) GetPayload() string {
	return o.Payload
}

func (o *UnpairPipelineEngineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnpairPipelineEngineBadRequest creates a UnpairPipelineEngineBadRequest with default headers values
func NewUnpairPipelineEngineBadRequest() *UnpairPipelineEngineBadRequest {
	return &UnpairPipelineEngineBadRequest{}
}

/*
UnpairPipelineEngineBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UnpairPipelineEngineBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this unpair pipeline engine bad request response has a 2xx status code
func (o *UnpairPipelineEngineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unpair pipeline engine bad request response has a 3xx status code
func (o *UnpairPipelineEngineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unpair pipeline engine bad request response has a 4xx status code
func (o *UnpairPipelineEngineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this unpair pipeline engine bad request response has a 5xx status code
func (o *UnpairPipelineEngineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this unpair pipeline engine bad request response a status code equal to that given
func (o *UnpairPipelineEngineBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UnpairPipelineEngineBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineBadRequest  %+v", 400, o.Payload)
}

func (o *UnpairPipelineEngineBadRequest) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineBadRequest  %+v", 400, o.Payload)
}

func (o *UnpairPipelineEngineBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UnpairPipelineEngineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnpairPipelineEngineUnauthorized creates a UnpairPipelineEngineUnauthorized with default headers values
func NewUnpairPipelineEngineUnauthorized() *UnpairPipelineEngineUnauthorized {
	return &UnpairPipelineEngineUnauthorized{}
}

/*
UnpairPipelineEngineUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UnpairPipelineEngineUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this unpair pipeline engine unauthorized response has a 2xx status code
func (o *UnpairPipelineEngineUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unpair pipeline engine unauthorized response has a 3xx status code
func (o *UnpairPipelineEngineUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unpair pipeline engine unauthorized response has a 4xx status code
func (o *UnpairPipelineEngineUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this unpair pipeline engine unauthorized response has a 5xx status code
func (o *UnpairPipelineEngineUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this unpair pipeline engine unauthorized response a status code equal to that given
func (o *UnpairPipelineEngineUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UnpairPipelineEngineUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *UnpairPipelineEngineUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *UnpairPipelineEngineUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UnpairPipelineEngineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnpairPipelineEngineForbidden creates a UnpairPipelineEngineForbidden with default headers values
func NewUnpairPipelineEngineForbidden() *UnpairPipelineEngineForbidden {
	return &UnpairPipelineEngineForbidden{}
}

/*
UnpairPipelineEngineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UnpairPipelineEngineForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this unpair pipeline engine forbidden response has a 2xx status code
func (o *UnpairPipelineEngineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unpair pipeline engine forbidden response has a 3xx status code
func (o *UnpairPipelineEngineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unpair pipeline engine forbidden response has a 4xx status code
func (o *UnpairPipelineEngineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this unpair pipeline engine forbidden response has a 5xx status code
func (o *UnpairPipelineEngineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this unpair pipeline engine forbidden response a status code equal to that given
func (o *UnpairPipelineEngineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UnpairPipelineEngineForbidden) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineForbidden  %+v", 403, o.Payload)
}

func (o *UnpairPipelineEngineForbidden) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineForbidden  %+v", 403, o.Payload)
}

func (o *UnpairPipelineEngineForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UnpairPipelineEngineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnpairPipelineEngineNotFound creates a UnpairPipelineEngineNotFound with default headers values
func NewUnpairPipelineEngineNotFound() *UnpairPipelineEngineNotFound {
	return &UnpairPipelineEngineNotFound{}
}

/*
UnpairPipelineEngineNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UnpairPipelineEngineNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this unpair pipeline engine not found response has a 2xx status code
func (o *UnpairPipelineEngineNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unpair pipeline engine not found response has a 3xx status code
func (o *UnpairPipelineEngineNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unpair pipeline engine not found response has a 4xx status code
func (o *UnpairPipelineEngineNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this unpair pipeline engine not found response has a 5xx status code
func (o *UnpairPipelineEngineNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this unpair pipeline engine not found response a status code equal to that given
func (o *UnpairPipelineEngineNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UnpairPipelineEngineNotFound) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineNotFound  %+v", 404, o.Payload)
}

func (o *UnpairPipelineEngineNotFound) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineNotFound  %+v", 404, o.Payload)
}

func (o *UnpairPipelineEngineNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UnpairPipelineEngineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnpairPipelineEngineInternalServerError creates a UnpairPipelineEngineInternalServerError with default headers values
func NewUnpairPipelineEngineInternalServerError() *UnpairPipelineEngineInternalServerError {
	return &UnpairPipelineEngineInternalServerError{}
}

/*
UnpairPipelineEngineInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UnpairPipelineEngineInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this unpair pipeline engine internal server error response has a 2xx status code
func (o *UnpairPipelineEngineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unpair pipeline engine internal server error response has a 3xx status code
func (o *UnpairPipelineEngineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unpair pipeline engine internal server error response has a 4xx status code
func (o *UnpairPipelineEngineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this unpair pipeline engine internal server error response has a 5xx status code
func (o *UnpairPipelineEngineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this unpair pipeline engine internal server error response a status code equal to that given
func (o *UnpairPipelineEngineInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UnpairPipelineEngineInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *UnpairPipelineEngineInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}/pairing][%d] unpairPipelineEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *UnpairPipelineEngineInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UnpairPipelineEngineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
