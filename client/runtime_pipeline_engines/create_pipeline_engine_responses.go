// Code generated by go-swagger; DO NOT EDIT.

package runtime_pipeline_engines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// CreatePipelineEngineReader is a Reader for the CreatePipelineEngine structure.
type CreatePipelineEngineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePipelineEngineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreatePipelineEngineCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreatePipelineEngineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreatePipelineEngineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreatePipelineEngineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreatePipelineEngineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreatePipelineEngineCreated creates a CreatePipelineEngineCreated with default headers values
func NewCreatePipelineEngineCreated() *CreatePipelineEngineCreated {
	return &CreatePipelineEngineCreated{}
}

/*
CreatePipelineEngineCreated describes a response with status code 201, with default header values.

Created
*/
type CreatePipelineEngineCreated struct {
	Payload *models.PipelineEngine
}

// IsSuccess returns true when this create pipeline engine created response has a 2xx status code
func (o *CreatePipelineEngineCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create pipeline engine created response has a 3xx status code
func (o *CreatePipelineEngineCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline engine created response has a 4xx status code
func (o *CreatePipelineEngineCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create pipeline engine created response has a 5xx status code
func (o *CreatePipelineEngineCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create pipeline engine created response a status code equal to that given
func (o *CreatePipelineEngineCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreatePipelineEngineCreated) Error() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineCreated  %+v", 201, o.Payload)
}

func (o *CreatePipelineEngineCreated) String() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineCreated  %+v", 201, o.Payload)
}

func (o *CreatePipelineEngineCreated) GetPayload() *models.PipelineEngine {
	return o.Payload
}

func (o *CreatePipelineEngineCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PipelineEngine)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePipelineEngineBadRequest creates a CreatePipelineEngineBadRequest with default headers values
func NewCreatePipelineEngineBadRequest() *CreatePipelineEngineBadRequest {
	return &CreatePipelineEngineBadRequest{}
}

/*
CreatePipelineEngineBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreatePipelineEngineBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create pipeline engine bad request response has a 2xx status code
func (o *CreatePipelineEngineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pipeline engine bad request response has a 3xx status code
func (o *CreatePipelineEngineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline engine bad request response has a 4xx status code
func (o *CreatePipelineEngineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pipeline engine bad request response has a 5xx status code
func (o *CreatePipelineEngineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create pipeline engine bad request response a status code equal to that given
func (o *CreatePipelineEngineBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreatePipelineEngineBadRequest) Error() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineBadRequest  %+v", 400, o.Payload)
}

func (o *CreatePipelineEngineBadRequest) String() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineBadRequest  %+v", 400, o.Payload)
}

func (o *CreatePipelineEngineBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreatePipelineEngineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePipelineEngineUnauthorized creates a CreatePipelineEngineUnauthorized with default headers values
func NewCreatePipelineEngineUnauthorized() *CreatePipelineEngineUnauthorized {
	return &CreatePipelineEngineUnauthorized{}
}

/*
CreatePipelineEngineUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreatePipelineEngineUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create pipeline engine unauthorized response has a 2xx status code
func (o *CreatePipelineEngineUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pipeline engine unauthorized response has a 3xx status code
func (o *CreatePipelineEngineUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline engine unauthorized response has a 4xx status code
func (o *CreatePipelineEngineUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pipeline engine unauthorized response has a 5xx status code
func (o *CreatePipelineEngineUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create pipeline engine unauthorized response a status code equal to that given
func (o *CreatePipelineEngineUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreatePipelineEngineUnauthorized) Error() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *CreatePipelineEngineUnauthorized) String() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *CreatePipelineEngineUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreatePipelineEngineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePipelineEngineForbidden creates a CreatePipelineEngineForbidden with default headers values
func NewCreatePipelineEngineForbidden() *CreatePipelineEngineForbidden {
	return &CreatePipelineEngineForbidden{}
}

/*
CreatePipelineEngineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreatePipelineEngineForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create pipeline engine forbidden response has a 2xx status code
func (o *CreatePipelineEngineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pipeline engine forbidden response has a 3xx status code
func (o *CreatePipelineEngineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline engine forbidden response has a 4xx status code
func (o *CreatePipelineEngineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pipeline engine forbidden response has a 5xx status code
func (o *CreatePipelineEngineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create pipeline engine forbidden response a status code equal to that given
func (o *CreatePipelineEngineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreatePipelineEngineForbidden) Error() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineForbidden  %+v", 403, o.Payload)
}

func (o *CreatePipelineEngineForbidden) String() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineForbidden  %+v", 403, o.Payload)
}

func (o *CreatePipelineEngineForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreatePipelineEngineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePipelineEngineInternalServerError creates a CreatePipelineEngineInternalServerError with default headers values
func NewCreatePipelineEngineInternalServerError() *CreatePipelineEngineInternalServerError {
	return &CreatePipelineEngineInternalServerError{}
}

/*
CreatePipelineEngineInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreatePipelineEngineInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create pipeline engine internal server error response has a 2xx status code
func (o *CreatePipelineEngineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pipeline engine internal server error response has a 3xx status code
func (o *CreatePipelineEngineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline engine internal server error response has a 4xx status code
func (o *CreatePipelineEngineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create pipeline engine internal server error response has a 5xx status code
func (o *CreatePipelineEngineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create pipeline engine internal server error response a status code equal to that given
func (o *CreatePipelineEngineInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreatePipelineEngineInternalServerError) Error() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *CreatePipelineEngineInternalServerError) String() string {
	return fmt.Sprintf("[POST /runtimes/pipeline-engines][%d] createPipelineEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *CreatePipelineEngineInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreatePipelineEngineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
