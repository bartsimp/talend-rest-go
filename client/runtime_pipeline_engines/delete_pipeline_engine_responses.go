// Code generated by go-swagger; DO NOT EDIT.

package runtime_pipeline_engines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// DeletePipelineEngineReader is a Reader for the DeletePipelineEngine structure.
type DeletePipelineEngineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePipelineEngineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePipelineEngineNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePipelineEngineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeletePipelineEngineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePipelineEngineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePipelineEngineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeletePipelineEngineConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePipelineEngineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeletePipelineEngineNoContent creates a DeletePipelineEngineNoContent with default headers values
func NewDeletePipelineEngineNoContent() *DeletePipelineEngineNoContent {
	return &DeletePipelineEngineNoContent{}
}

/*
DeletePipelineEngineNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeletePipelineEngineNoContent struct {
}

// IsSuccess returns true when this delete pipeline engine no content response has a 2xx status code
func (o *DeletePipelineEngineNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete pipeline engine no content response has a 3xx status code
func (o *DeletePipelineEngineNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline engine no content response has a 4xx status code
func (o *DeletePipelineEngineNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete pipeline engine no content response has a 5xx status code
func (o *DeletePipelineEngineNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline engine no content response a status code equal to that given
func (o *DeletePipelineEngineNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeletePipelineEngineNoContent) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineNoContent ", 204)
}

func (o *DeletePipelineEngineNoContent) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineNoContent ", 204)
}

func (o *DeletePipelineEngineNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePipelineEngineBadRequest creates a DeletePipelineEngineBadRequest with default headers values
func NewDeletePipelineEngineBadRequest() *DeletePipelineEngineBadRequest {
	return &DeletePipelineEngineBadRequest{}
}

/*
DeletePipelineEngineBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeletePipelineEngineBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete pipeline engine bad request response has a 2xx status code
func (o *DeletePipelineEngineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline engine bad request response has a 3xx status code
func (o *DeletePipelineEngineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline engine bad request response has a 4xx status code
func (o *DeletePipelineEngineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pipeline engine bad request response has a 5xx status code
func (o *DeletePipelineEngineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline engine bad request response a status code equal to that given
func (o *DeletePipelineEngineBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeletePipelineEngineBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineBadRequest  %+v", 400, o.Payload)
}

func (o *DeletePipelineEngineBadRequest) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineBadRequest  %+v", 400, o.Payload)
}

func (o *DeletePipelineEngineBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePipelineEngineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePipelineEngineUnauthorized creates a DeletePipelineEngineUnauthorized with default headers values
func NewDeletePipelineEngineUnauthorized() *DeletePipelineEngineUnauthorized {
	return &DeletePipelineEngineUnauthorized{}
}

/*
DeletePipelineEngineUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeletePipelineEngineUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete pipeline engine unauthorized response has a 2xx status code
func (o *DeletePipelineEngineUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline engine unauthorized response has a 3xx status code
func (o *DeletePipelineEngineUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline engine unauthorized response has a 4xx status code
func (o *DeletePipelineEngineUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pipeline engine unauthorized response has a 5xx status code
func (o *DeletePipelineEngineUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline engine unauthorized response a status code equal to that given
func (o *DeletePipelineEngineUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeletePipelineEngineUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *DeletePipelineEngineUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *DeletePipelineEngineUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePipelineEngineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePipelineEngineForbidden creates a DeletePipelineEngineForbidden with default headers values
func NewDeletePipelineEngineForbidden() *DeletePipelineEngineForbidden {
	return &DeletePipelineEngineForbidden{}
}

/*
DeletePipelineEngineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeletePipelineEngineForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete pipeline engine forbidden response has a 2xx status code
func (o *DeletePipelineEngineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline engine forbidden response has a 3xx status code
func (o *DeletePipelineEngineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline engine forbidden response has a 4xx status code
func (o *DeletePipelineEngineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pipeline engine forbidden response has a 5xx status code
func (o *DeletePipelineEngineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline engine forbidden response a status code equal to that given
func (o *DeletePipelineEngineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeletePipelineEngineForbidden) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineForbidden  %+v", 403, o.Payload)
}

func (o *DeletePipelineEngineForbidden) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineForbidden  %+v", 403, o.Payload)
}

func (o *DeletePipelineEngineForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePipelineEngineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePipelineEngineNotFound creates a DeletePipelineEngineNotFound with default headers values
func NewDeletePipelineEngineNotFound() *DeletePipelineEngineNotFound {
	return &DeletePipelineEngineNotFound{}
}

/*
DeletePipelineEngineNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeletePipelineEngineNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete pipeline engine not found response has a 2xx status code
func (o *DeletePipelineEngineNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline engine not found response has a 3xx status code
func (o *DeletePipelineEngineNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline engine not found response has a 4xx status code
func (o *DeletePipelineEngineNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pipeline engine not found response has a 5xx status code
func (o *DeletePipelineEngineNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline engine not found response a status code equal to that given
func (o *DeletePipelineEngineNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeletePipelineEngineNotFound) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineNotFound  %+v", 404, o.Payload)
}

func (o *DeletePipelineEngineNotFound) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineNotFound  %+v", 404, o.Payload)
}

func (o *DeletePipelineEngineNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePipelineEngineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePipelineEngineConflict creates a DeletePipelineEngineConflict with default headers values
func NewDeletePipelineEngineConflict() *DeletePipelineEngineConflict {
	return &DeletePipelineEngineConflict{}
}

/*
DeletePipelineEngineConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeletePipelineEngineConflict struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete pipeline engine conflict response has a 2xx status code
func (o *DeletePipelineEngineConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline engine conflict response has a 3xx status code
func (o *DeletePipelineEngineConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline engine conflict response has a 4xx status code
func (o *DeletePipelineEngineConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pipeline engine conflict response has a 5xx status code
func (o *DeletePipelineEngineConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline engine conflict response a status code equal to that given
func (o *DeletePipelineEngineConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeletePipelineEngineConflict) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineConflict  %+v", 409, o.Payload)
}

func (o *DeletePipelineEngineConflict) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineConflict  %+v", 409, o.Payload)
}

func (o *DeletePipelineEngineConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePipelineEngineConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePipelineEngineInternalServerError creates a DeletePipelineEngineInternalServerError with default headers values
func NewDeletePipelineEngineInternalServerError() *DeletePipelineEngineInternalServerError {
	return &DeletePipelineEngineInternalServerError{}
}

/*
DeletePipelineEngineInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeletePipelineEngineInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete pipeline engine internal server error response has a 2xx status code
func (o *DeletePipelineEngineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline engine internal server error response has a 3xx status code
func (o *DeletePipelineEngineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline engine internal server error response has a 4xx status code
func (o *DeletePipelineEngineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete pipeline engine internal server error response has a 5xx status code
func (o *DeletePipelineEngineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete pipeline engine internal server error response a status code equal to that given
func (o *DeletePipelineEngineInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeletePipelineEngineInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *DeletePipelineEngineInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /runtimes/pipeline-engines/{engineId}][%d] deletePipelineEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *DeletePipelineEngineInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePipelineEngineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
