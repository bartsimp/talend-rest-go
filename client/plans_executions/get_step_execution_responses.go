// Code generated by go-swagger; DO NOT EDIT.

package plans_executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetStepExecutionReader is a Reader for the GetStepExecution structure.
type GetStepExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStepExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStepExecutionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStepExecutionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetStepExecutionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetStepExecutionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStepExecutionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStepExecutionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStepExecutionOK creates a GetStepExecutionOK with default headers values
func NewGetStepExecutionOK() *GetStepExecutionOK {
	return &GetStepExecutionOK{}
}

/*
GetStepExecutionOK describes a response with status code 200, with default header values.

Successful response
*/
type GetStepExecutionOK struct {
	Payload *models.PlanExecutionStatus
}

// IsSuccess returns true when this get step execution o k response has a 2xx status code
func (o *GetStepExecutionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get step execution o k response has a 3xx status code
func (o *GetStepExecutionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step execution o k response has a 4xx status code
func (o *GetStepExecutionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get step execution o k response has a 5xx status code
func (o *GetStepExecutionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get step execution o k response a status code equal to that given
func (o *GetStepExecutionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetStepExecutionOK) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionOK  %+v", 200, o.Payload)
}

func (o *GetStepExecutionOK) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionOK  %+v", 200, o.Payload)
}

func (o *GetStepExecutionOK) GetPayload() *models.PlanExecutionStatus {
	return o.Payload
}

func (o *GetStepExecutionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlanExecutionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepExecutionBadRequest creates a GetStepExecutionBadRequest with default headers values
func NewGetStepExecutionBadRequest() *GetStepExecutionBadRequest {
	return &GetStepExecutionBadRequest{}
}

/*
GetStepExecutionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetStepExecutionBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step execution bad request response has a 2xx status code
func (o *GetStepExecutionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step execution bad request response has a 3xx status code
func (o *GetStepExecutionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step execution bad request response has a 4xx status code
func (o *GetStepExecutionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get step execution bad request response has a 5xx status code
func (o *GetStepExecutionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get step execution bad request response a status code equal to that given
func (o *GetStepExecutionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetStepExecutionBadRequest) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *GetStepExecutionBadRequest) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *GetStepExecutionBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepExecutionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepExecutionUnauthorized creates a GetStepExecutionUnauthorized with default headers values
func NewGetStepExecutionUnauthorized() *GetStepExecutionUnauthorized {
	return &GetStepExecutionUnauthorized{}
}

/*
GetStepExecutionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetStepExecutionUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step execution unauthorized response has a 2xx status code
func (o *GetStepExecutionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step execution unauthorized response has a 3xx status code
func (o *GetStepExecutionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step execution unauthorized response has a 4xx status code
func (o *GetStepExecutionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get step execution unauthorized response has a 5xx status code
func (o *GetStepExecutionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get step execution unauthorized response a status code equal to that given
func (o *GetStepExecutionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetStepExecutionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetStepExecutionUnauthorized) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetStepExecutionUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepExecutionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepExecutionForbidden creates a GetStepExecutionForbidden with default headers values
func NewGetStepExecutionForbidden() *GetStepExecutionForbidden {
	return &GetStepExecutionForbidden{}
}

/*
GetStepExecutionForbidden describes a response with status code 403, with default header values.

Forbidden - no permissions to access resource
*/
type GetStepExecutionForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step execution forbidden response has a 2xx status code
func (o *GetStepExecutionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step execution forbidden response has a 3xx status code
func (o *GetStepExecutionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step execution forbidden response has a 4xx status code
func (o *GetStepExecutionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get step execution forbidden response has a 5xx status code
func (o *GetStepExecutionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get step execution forbidden response a status code equal to that given
func (o *GetStepExecutionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetStepExecutionForbidden) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionForbidden  %+v", 403, o.Payload)
}

func (o *GetStepExecutionForbidden) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionForbidden  %+v", 403, o.Payload)
}

func (o *GetStepExecutionForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepExecutionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepExecutionNotFound creates a GetStepExecutionNotFound with default headers values
func NewGetStepExecutionNotFound() *GetStepExecutionNotFound {
	return &GetStepExecutionNotFound{}
}

/*
GetStepExecutionNotFound describes a response with status code 404, with default header values.

Not found - resource not found
*/
type GetStepExecutionNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step execution not found response has a 2xx status code
func (o *GetStepExecutionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step execution not found response has a 3xx status code
func (o *GetStepExecutionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step execution not found response has a 4xx status code
func (o *GetStepExecutionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get step execution not found response has a 5xx status code
func (o *GetStepExecutionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get step execution not found response a status code equal to that given
func (o *GetStepExecutionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetStepExecutionNotFound) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionNotFound  %+v", 404, o.Payload)
}

func (o *GetStepExecutionNotFound) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionNotFound  %+v", 404, o.Payload)
}

func (o *GetStepExecutionNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepExecutionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepExecutionInternalServerError creates a GetStepExecutionInternalServerError with default headers values
func NewGetStepExecutionInternalServerError() *GetStepExecutionInternalServerError {
	return &GetStepExecutionInternalServerError{}
}

/*
GetStepExecutionInternalServerError describes a response with status code 500, with default header values.

Server error - something went wrong on server side
*/
type GetStepExecutionInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step execution internal server error response has a 2xx status code
func (o *GetStepExecutionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step execution internal server error response has a 3xx status code
func (o *GetStepExecutionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step execution internal server error response has a 4xx status code
func (o *GetStepExecutionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get step execution internal server error response has a 5xx status code
func (o *GetStepExecutionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get step execution internal server error response a status code equal to that given
func (o *GetStepExecutionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetStepExecutionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetStepExecutionInternalServerError) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}][%d] getStepExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetStepExecutionInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepExecutionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
