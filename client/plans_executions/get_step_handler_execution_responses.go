// Code generated by go-swagger; DO NOT EDIT.

package plans_executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetStepHandlerExecutionReader is a Reader for the GetStepHandlerExecution structure.
type GetStepHandlerExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStepHandlerExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStepHandlerExecutionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStepHandlerExecutionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetStepHandlerExecutionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetStepHandlerExecutionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStepHandlerExecutionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStepHandlerExecutionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStepHandlerExecutionOK creates a GetStepHandlerExecutionOK with default headers values
func NewGetStepHandlerExecutionOK() *GetStepHandlerExecutionOK {
	return &GetStepHandlerExecutionOK{}
}

/*
GetStepHandlerExecutionOK describes a response with status code 200, with default header values.

Successful response
*/
type GetStepHandlerExecutionOK struct {
	Payload *models.PlanExecutionStatus
}

// IsSuccess returns true when this get step handler execution o k response has a 2xx status code
func (o *GetStepHandlerExecutionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get step handler execution o k response has a 3xx status code
func (o *GetStepHandlerExecutionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step handler execution o k response has a 4xx status code
func (o *GetStepHandlerExecutionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get step handler execution o k response has a 5xx status code
func (o *GetStepHandlerExecutionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get step handler execution o k response a status code equal to that given
func (o *GetStepHandlerExecutionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetStepHandlerExecutionOK) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionOK  %+v", 200, o.Payload)
}

func (o *GetStepHandlerExecutionOK) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionOK  %+v", 200, o.Payload)
}

func (o *GetStepHandlerExecutionOK) GetPayload() *models.PlanExecutionStatus {
	return o.Payload
}

func (o *GetStepHandlerExecutionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlanExecutionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepHandlerExecutionBadRequest creates a GetStepHandlerExecutionBadRequest with default headers values
func NewGetStepHandlerExecutionBadRequest() *GetStepHandlerExecutionBadRequest {
	return &GetStepHandlerExecutionBadRequest{}
}

/*
GetStepHandlerExecutionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetStepHandlerExecutionBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step handler execution bad request response has a 2xx status code
func (o *GetStepHandlerExecutionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step handler execution bad request response has a 3xx status code
func (o *GetStepHandlerExecutionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step handler execution bad request response has a 4xx status code
func (o *GetStepHandlerExecutionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get step handler execution bad request response has a 5xx status code
func (o *GetStepHandlerExecutionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get step handler execution bad request response a status code equal to that given
func (o *GetStepHandlerExecutionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetStepHandlerExecutionBadRequest) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *GetStepHandlerExecutionBadRequest) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *GetStepHandlerExecutionBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepHandlerExecutionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepHandlerExecutionUnauthorized creates a GetStepHandlerExecutionUnauthorized with default headers values
func NewGetStepHandlerExecutionUnauthorized() *GetStepHandlerExecutionUnauthorized {
	return &GetStepHandlerExecutionUnauthorized{}
}

/*
GetStepHandlerExecutionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetStepHandlerExecutionUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step handler execution unauthorized response has a 2xx status code
func (o *GetStepHandlerExecutionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step handler execution unauthorized response has a 3xx status code
func (o *GetStepHandlerExecutionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step handler execution unauthorized response has a 4xx status code
func (o *GetStepHandlerExecutionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get step handler execution unauthorized response has a 5xx status code
func (o *GetStepHandlerExecutionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get step handler execution unauthorized response a status code equal to that given
func (o *GetStepHandlerExecutionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetStepHandlerExecutionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetStepHandlerExecutionUnauthorized) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetStepHandlerExecutionUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepHandlerExecutionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepHandlerExecutionForbidden creates a GetStepHandlerExecutionForbidden with default headers values
func NewGetStepHandlerExecutionForbidden() *GetStepHandlerExecutionForbidden {
	return &GetStepHandlerExecutionForbidden{}
}

/*
GetStepHandlerExecutionForbidden describes a response with status code 403, with default header values.

Forbidden - no permissions to access resource
*/
type GetStepHandlerExecutionForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step handler execution forbidden response has a 2xx status code
func (o *GetStepHandlerExecutionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step handler execution forbidden response has a 3xx status code
func (o *GetStepHandlerExecutionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step handler execution forbidden response has a 4xx status code
func (o *GetStepHandlerExecutionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get step handler execution forbidden response has a 5xx status code
func (o *GetStepHandlerExecutionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get step handler execution forbidden response a status code equal to that given
func (o *GetStepHandlerExecutionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetStepHandlerExecutionForbidden) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionForbidden  %+v", 403, o.Payload)
}

func (o *GetStepHandlerExecutionForbidden) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionForbidden  %+v", 403, o.Payload)
}

func (o *GetStepHandlerExecutionForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepHandlerExecutionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepHandlerExecutionNotFound creates a GetStepHandlerExecutionNotFound with default headers values
func NewGetStepHandlerExecutionNotFound() *GetStepHandlerExecutionNotFound {
	return &GetStepHandlerExecutionNotFound{}
}

/*
GetStepHandlerExecutionNotFound describes a response with status code 404, with default header values.

Not found - resource not found
*/
type GetStepHandlerExecutionNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step handler execution not found response has a 2xx status code
func (o *GetStepHandlerExecutionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step handler execution not found response has a 3xx status code
func (o *GetStepHandlerExecutionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step handler execution not found response has a 4xx status code
func (o *GetStepHandlerExecutionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get step handler execution not found response has a 5xx status code
func (o *GetStepHandlerExecutionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get step handler execution not found response a status code equal to that given
func (o *GetStepHandlerExecutionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetStepHandlerExecutionNotFound) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionNotFound  %+v", 404, o.Payload)
}

func (o *GetStepHandlerExecutionNotFound) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionNotFound  %+v", 404, o.Payload)
}

func (o *GetStepHandlerExecutionNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepHandlerExecutionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStepHandlerExecutionInternalServerError creates a GetStepHandlerExecutionInternalServerError with default headers values
func NewGetStepHandlerExecutionInternalServerError() *GetStepHandlerExecutionInternalServerError {
	return &GetStepHandlerExecutionInternalServerError{}
}

/*
GetStepHandlerExecutionInternalServerError describes a response with status code 500, with default header values.

Server error - something went wrong on server side
*/
type GetStepHandlerExecutionInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get step handler execution internal server error response has a 2xx status code
func (o *GetStepHandlerExecutionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get step handler execution internal server error response has a 3xx status code
func (o *GetStepHandlerExecutionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get step handler execution internal server error response has a 4xx status code
func (o *GetStepHandlerExecutionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get step handler execution internal server error response has a 5xx status code
func (o *GetStepHandlerExecutionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get step handler execution internal server error response a status code equal to that given
func (o *GetStepHandlerExecutionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetStepHandlerExecutionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetStepHandlerExecutionInternalServerError) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler][%d] getStepHandlerExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetStepHandlerExecutionInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStepHandlerExecutionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
