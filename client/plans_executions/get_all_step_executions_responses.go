// Code generated by go-swagger; DO NOT EDIT.

package plans_executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetAllStepExecutionsReader is a Reader for the GetAllStepExecutions structure.
type GetAllStepExecutionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllStepExecutionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllStepExecutionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllStepExecutionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAllStepExecutionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllStepExecutionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllStepExecutionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllStepExecutionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllStepExecutionsOK creates a GetAllStepExecutionsOK with default headers values
func NewGetAllStepExecutionsOK() *GetAllStepExecutionsOK {
	return &GetAllStepExecutionsOK{}
}

/*
GetAllStepExecutionsOK describes a response with status code 200, with default header values.

Successful response
*/
type GetAllStepExecutionsOK struct {
	Payload []*models.StepExecution
}

// IsSuccess returns true when this get all step executions o k response has a 2xx status code
func (o *GetAllStepExecutionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all step executions o k response has a 3xx status code
func (o *GetAllStepExecutionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all step executions o k response has a 4xx status code
func (o *GetAllStepExecutionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all step executions o k response has a 5xx status code
func (o *GetAllStepExecutionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all step executions o k response a status code equal to that given
func (o *GetAllStepExecutionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAllStepExecutionsOK) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsOK  %+v", 200, o.Payload)
}

func (o *GetAllStepExecutionsOK) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsOK  %+v", 200, o.Payload)
}

func (o *GetAllStepExecutionsOK) GetPayload() []*models.StepExecution {
	return o.Payload
}

func (o *GetAllStepExecutionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllStepExecutionsBadRequest creates a GetAllStepExecutionsBadRequest with default headers values
func NewGetAllStepExecutionsBadRequest() *GetAllStepExecutionsBadRequest {
	return &GetAllStepExecutionsBadRequest{}
}

/*
GetAllStepExecutionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllStepExecutionsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get all step executions bad request response has a 2xx status code
func (o *GetAllStepExecutionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all step executions bad request response has a 3xx status code
func (o *GetAllStepExecutionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all step executions bad request response has a 4xx status code
func (o *GetAllStepExecutionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all step executions bad request response has a 5xx status code
func (o *GetAllStepExecutionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all step executions bad request response a status code equal to that given
func (o *GetAllStepExecutionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAllStepExecutionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAllStepExecutionsBadRequest) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAllStepExecutionsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAllStepExecutionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllStepExecutionsUnauthorized creates a GetAllStepExecutionsUnauthorized with default headers values
func NewGetAllStepExecutionsUnauthorized() *GetAllStepExecutionsUnauthorized {
	return &GetAllStepExecutionsUnauthorized{}
}

/*
GetAllStepExecutionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllStepExecutionsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get all step executions unauthorized response has a 2xx status code
func (o *GetAllStepExecutionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all step executions unauthorized response has a 3xx status code
func (o *GetAllStepExecutionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all step executions unauthorized response has a 4xx status code
func (o *GetAllStepExecutionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all step executions unauthorized response has a 5xx status code
func (o *GetAllStepExecutionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all step executions unauthorized response a status code equal to that given
func (o *GetAllStepExecutionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAllStepExecutionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAllStepExecutionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAllStepExecutionsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAllStepExecutionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllStepExecutionsForbidden creates a GetAllStepExecutionsForbidden with default headers values
func NewGetAllStepExecutionsForbidden() *GetAllStepExecutionsForbidden {
	return &GetAllStepExecutionsForbidden{}
}

/*
GetAllStepExecutionsForbidden describes a response with status code 403, with default header values.

Forbidden - no permissions to access resource
*/
type GetAllStepExecutionsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get all step executions forbidden response has a 2xx status code
func (o *GetAllStepExecutionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all step executions forbidden response has a 3xx status code
func (o *GetAllStepExecutionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all step executions forbidden response has a 4xx status code
func (o *GetAllStepExecutionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all step executions forbidden response has a 5xx status code
func (o *GetAllStepExecutionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all step executions forbidden response a status code equal to that given
func (o *GetAllStepExecutionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAllStepExecutionsForbidden) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsForbidden  %+v", 403, o.Payload)
}

func (o *GetAllStepExecutionsForbidden) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsForbidden  %+v", 403, o.Payload)
}

func (o *GetAllStepExecutionsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAllStepExecutionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllStepExecutionsNotFound creates a GetAllStepExecutionsNotFound with default headers values
func NewGetAllStepExecutionsNotFound() *GetAllStepExecutionsNotFound {
	return &GetAllStepExecutionsNotFound{}
}

/*
GetAllStepExecutionsNotFound describes a response with status code 404, with default header values.

Not found - resource not found
*/
type GetAllStepExecutionsNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get all step executions not found response has a 2xx status code
func (o *GetAllStepExecutionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all step executions not found response has a 3xx status code
func (o *GetAllStepExecutionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all step executions not found response has a 4xx status code
func (o *GetAllStepExecutionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all step executions not found response has a 5xx status code
func (o *GetAllStepExecutionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all step executions not found response a status code equal to that given
func (o *GetAllStepExecutionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAllStepExecutionsNotFound) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsNotFound  %+v", 404, o.Payload)
}

func (o *GetAllStepExecutionsNotFound) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsNotFound  %+v", 404, o.Payload)
}

func (o *GetAllStepExecutionsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAllStepExecutionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllStepExecutionsInternalServerError creates a GetAllStepExecutionsInternalServerError with default headers values
func NewGetAllStepExecutionsInternalServerError() *GetAllStepExecutionsInternalServerError {
	return &GetAllStepExecutionsInternalServerError{}
}

/*
GetAllStepExecutionsInternalServerError describes a response with status code 500, with default header values.

Server error - something went wrong on server side
*/
type GetAllStepExecutionsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get all step executions internal server error response has a 2xx status code
func (o *GetAllStepExecutionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all step executions internal server error response has a 3xx status code
func (o *GetAllStepExecutionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all step executions internal server error response has a 4xx status code
func (o *GetAllStepExecutionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all step executions internal server error response has a 5xx status code
func (o *GetAllStepExecutionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all step executions internal server error response a status code equal to that given
func (o *GetAllStepExecutionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAllStepExecutionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllStepExecutionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /executions/plans/{planExecutionId}/steps][%d] getAllStepExecutionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllStepExecutionsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAllStepExecutionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
