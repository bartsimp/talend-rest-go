// Code generated by go-swagger; DO NOT EDIT.

package plans_executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetPlanExecutionStatusReader is a Reader for the GetPlanExecutionStatus structure.
type GetPlanExecutionStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPlanExecutionStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPlanExecutionStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPlanExecutionStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPlanExecutionStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPlanExecutionStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPlanExecutionStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPlanExecutionStatusTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPlanExecutionStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPlanExecutionStatusOK creates a GetPlanExecutionStatusOK with default headers values
func NewGetPlanExecutionStatusOK() *GetPlanExecutionStatusOK {
	return &GetPlanExecutionStatusOK{}
}

/*
GetPlanExecutionStatusOK describes a response with status code 200, with default header values.

Successful response
*/
type GetPlanExecutionStatusOK struct {
	Payload *models.PlanExecutionStatus
}

// IsSuccess returns true when this get plan execution status o k response has a 2xx status code
func (o *GetPlanExecutionStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get plan execution status o k response has a 3xx status code
func (o *GetPlanExecutionStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan execution status o k response has a 4xx status code
func (o *GetPlanExecutionStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plan execution status o k response has a 5xx status code
func (o *GetPlanExecutionStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan execution status o k response a status code equal to that given
func (o *GetPlanExecutionStatusOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetPlanExecutionStatusOK) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusOK  %+v", 200, o.Payload)
}

func (o *GetPlanExecutionStatusOK) String() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusOK  %+v", 200, o.Payload)
}

func (o *GetPlanExecutionStatusOK) GetPayload() *models.PlanExecutionStatus {
	return o.Payload
}

func (o *GetPlanExecutionStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlanExecutionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanExecutionStatusBadRequest creates a GetPlanExecutionStatusBadRequest with default headers values
func NewGetPlanExecutionStatusBadRequest() *GetPlanExecutionStatusBadRequest {
	return &GetPlanExecutionStatusBadRequest{}
}

/*
GetPlanExecutionStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPlanExecutionStatusBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan execution status bad request response has a 2xx status code
func (o *GetPlanExecutionStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan execution status bad request response has a 3xx status code
func (o *GetPlanExecutionStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan execution status bad request response has a 4xx status code
func (o *GetPlanExecutionStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan execution status bad request response has a 5xx status code
func (o *GetPlanExecutionStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan execution status bad request response a status code equal to that given
func (o *GetPlanExecutionStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetPlanExecutionStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetPlanExecutionStatusBadRequest) String() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetPlanExecutionStatusBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanExecutionStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanExecutionStatusUnauthorized creates a GetPlanExecutionStatusUnauthorized with default headers values
func NewGetPlanExecutionStatusUnauthorized() *GetPlanExecutionStatusUnauthorized {
	return &GetPlanExecutionStatusUnauthorized{}
}

/*
GetPlanExecutionStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPlanExecutionStatusUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan execution status unauthorized response has a 2xx status code
func (o *GetPlanExecutionStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan execution status unauthorized response has a 3xx status code
func (o *GetPlanExecutionStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan execution status unauthorized response has a 4xx status code
func (o *GetPlanExecutionStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan execution status unauthorized response has a 5xx status code
func (o *GetPlanExecutionStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan execution status unauthorized response a status code equal to that given
func (o *GetPlanExecutionStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetPlanExecutionStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPlanExecutionStatusUnauthorized) String() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPlanExecutionStatusUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanExecutionStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanExecutionStatusForbidden creates a GetPlanExecutionStatusForbidden with default headers values
func NewGetPlanExecutionStatusForbidden() *GetPlanExecutionStatusForbidden {
	return &GetPlanExecutionStatusForbidden{}
}

/*
GetPlanExecutionStatusForbidden describes a response with status code 403, with default header values.

Forbidden - no permissions to access resource
*/
type GetPlanExecutionStatusForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan execution status forbidden response has a 2xx status code
func (o *GetPlanExecutionStatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan execution status forbidden response has a 3xx status code
func (o *GetPlanExecutionStatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan execution status forbidden response has a 4xx status code
func (o *GetPlanExecutionStatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan execution status forbidden response has a 5xx status code
func (o *GetPlanExecutionStatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan execution status forbidden response a status code equal to that given
func (o *GetPlanExecutionStatusForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetPlanExecutionStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusForbidden  %+v", 403, o.Payload)
}

func (o *GetPlanExecutionStatusForbidden) String() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusForbidden  %+v", 403, o.Payload)
}

func (o *GetPlanExecutionStatusForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanExecutionStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanExecutionStatusNotFound creates a GetPlanExecutionStatusNotFound with default headers values
func NewGetPlanExecutionStatusNotFound() *GetPlanExecutionStatusNotFound {
	return &GetPlanExecutionStatusNotFound{}
}

/*
GetPlanExecutionStatusNotFound describes a response with status code 404, with default header values.

Not found - resource not found
*/
type GetPlanExecutionStatusNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan execution status not found response has a 2xx status code
func (o *GetPlanExecutionStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan execution status not found response has a 3xx status code
func (o *GetPlanExecutionStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan execution status not found response has a 4xx status code
func (o *GetPlanExecutionStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan execution status not found response has a 5xx status code
func (o *GetPlanExecutionStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan execution status not found response a status code equal to that given
func (o *GetPlanExecutionStatusNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetPlanExecutionStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetPlanExecutionStatusNotFound) String() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetPlanExecutionStatusNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanExecutionStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanExecutionStatusTooManyRequests creates a GetPlanExecutionStatusTooManyRequests with default headers values
func NewGetPlanExecutionStatusTooManyRequests() *GetPlanExecutionStatusTooManyRequests {
	return &GetPlanExecutionStatusTooManyRequests{}
}

/*
GetPlanExecutionStatusTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetPlanExecutionStatusTooManyRequests struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan execution status too many requests response has a 2xx status code
func (o *GetPlanExecutionStatusTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan execution status too many requests response has a 3xx status code
func (o *GetPlanExecutionStatusTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan execution status too many requests response has a 4xx status code
func (o *GetPlanExecutionStatusTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plan execution status too many requests response has a 5xx status code
func (o *GetPlanExecutionStatusTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get plan execution status too many requests response a status code equal to that given
func (o *GetPlanExecutionStatusTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetPlanExecutionStatusTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPlanExecutionStatusTooManyRequests) String() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPlanExecutionStatusTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanExecutionStatusTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanExecutionStatusInternalServerError creates a GetPlanExecutionStatusInternalServerError with default headers values
func NewGetPlanExecutionStatusInternalServerError() *GetPlanExecutionStatusInternalServerError {
	return &GetPlanExecutionStatusInternalServerError{}
}

/*
GetPlanExecutionStatusInternalServerError describes a response with status code 500, with default header values.

Server error - something went wrong on server side
*/
type GetPlanExecutionStatusInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get plan execution status internal server error response has a 2xx status code
func (o *GetPlanExecutionStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plan execution status internal server error response has a 3xx status code
func (o *GetPlanExecutionStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plan execution status internal server error response has a 4xx status code
func (o *GetPlanExecutionStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plan execution status internal server error response has a 5xx status code
func (o *GetPlanExecutionStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get plan execution status internal server error response a status code equal to that given
func (o *GetPlanExecutionStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetPlanExecutionStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPlanExecutionStatusInternalServerError) String() string {
	return fmt.Sprintf("[GET /executions/plans/{id}][%d] getPlanExecutionStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPlanExecutionStatusInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlanExecutionStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
