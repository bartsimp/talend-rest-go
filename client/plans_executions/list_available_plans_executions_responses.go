// Code generated by go-swagger; DO NOT EDIT.

package plans_executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// ListAvailablePlansExecutionsReader is a Reader for the ListAvailablePlansExecutions structure.
type ListAvailablePlansExecutionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAvailablePlansExecutionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAvailablePlansExecutionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListAvailablePlansExecutionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListAvailablePlansExecutionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAvailablePlansExecutionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListAvailablePlansExecutionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListAvailablePlansExecutionsOK creates a ListAvailablePlansExecutionsOK with default headers values
func NewListAvailablePlansExecutionsOK() *ListAvailablePlansExecutionsOK {
	return &ListAvailablePlansExecutionsOK{}
}

/*
ListAvailablePlansExecutionsOK describes a response with status code 200, with default header values.

OK
*/
type ListAvailablePlansExecutionsOK struct {
	Payload *models.Page
}

// IsSuccess returns true when this list available plans executions o k response has a 2xx status code
func (o *ListAvailablePlansExecutionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list available plans executions o k response has a 3xx status code
func (o *ListAvailablePlansExecutionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list available plans executions o k response has a 4xx status code
func (o *ListAvailablePlansExecutionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list available plans executions o k response has a 5xx status code
func (o *ListAvailablePlansExecutionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list available plans executions o k response a status code equal to that given
func (o *ListAvailablePlansExecutionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListAvailablePlansExecutionsOK) Error() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsOK  %+v", 200, o.Payload)
}

func (o *ListAvailablePlansExecutionsOK) String() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsOK  %+v", 200, o.Payload)
}

func (o *ListAvailablePlansExecutionsOK) GetPayload() *models.Page {
	return o.Payload
}

func (o *ListAvailablePlansExecutionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Page)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAvailablePlansExecutionsBadRequest creates a ListAvailablePlansExecutionsBadRequest with default headers values
func NewListAvailablePlansExecutionsBadRequest() *ListAvailablePlansExecutionsBadRequest {
	return &ListAvailablePlansExecutionsBadRequest{}
}

/*
ListAvailablePlansExecutionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListAvailablePlansExecutionsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list available plans executions bad request response has a 2xx status code
func (o *ListAvailablePlansExecutionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list available plans executions bad request response has a 3xx status code
func (o *ListAvailablePlansExecutionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list available plans executions bad request response has a 4xx status code
func (o *ListAvailablePlansExecutionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list available plans executions bad request response has a 5xx status code
func (o *ListAvailablePlansExecutionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list available plans executions bad request response a status code equal to that given
func (o *ListAvailablePlansExecutionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListAvailablePlansExecutionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsBadRequest  %+v", 400, o.Payload)
}

func (o *ListAvailablePlansExecutionsBadRequest) String() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsBadRequest  %+v", 400, o.Payload)
}

func (o *ListAvailablePlansExecutionsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListAvailablePlansExecutionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAvailablePlansExecutionsUnauthorized creates a ListAvailablePlansExecutionsUnauthorized with default headers values
func NewListAvailablePlansExecutionsUnauthorized() *ListAvailablePlansExecutionsUnauthorized {
	return &ListAvailablePlansExecutionsUnauthorized{}
}

/*
ListAvailablePlansExecutionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListAvailablePlansExecutionsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list available plans executions unauthorized response has a 2xx status code
func (o *ListAvailablePlansExecutionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list available plans executions unauthorized response has a 3xx status code
func (o *ListAvailablePlansExecutionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list available plans executions unauthorized response has a 4xx status code
func (o *ListAvailablePlansExecutionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list available plans executions unauthorized response has a 5xx status code
func (o *ListAvailablePlansExecutionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list available plans executions unauthorized response a status code equal to that given
func (o *ListAvailablePlansExecutionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListAvailablePlansExecutionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAvailablePlansExecutionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAvailablePlansExecutionsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListAvailablePlansExecutionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAvailablePlansExecutionsForbidden creates a ListAvailablePlansExecutionsForbidden with default headers values
func NewListAvailablePlansExecutionsForbidden() *ListAvailablePlansExecutionsForbidden {
	return &ListAvailablePlansExecutionsForbidden{}
}

/*
ListAvailablePlansExecutionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListAvailablePlansExecutionsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list available plans executions forbidden response has a 2xx status code
func (o *ListAvailablePlansExecutionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list available plans executions forbidden response has a 3xx status code
func (o *ListAvailablePlansExecutionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list available plans executions forbidden response has a 4xx status code
func (o *ListAvailablePlansExecutionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list available plans executions forbidden response has a 5xx status code
func (o *ListAvailablePlansExecutionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list available plans executions forbidden response a status code equal to that given
func (o *ListAvailablePlansExecutionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListAvailablePlansExecutionsForbidden) Error() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsForbidden  %+v", 403, o.Payload)
}

func (o *ListAvailablePlansExecutionsForbidden) String() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsForbidden  %+v", 403, o.Payload)
}

func (o *ListAvailablePlansExecutionsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListAvailablePlansExecutionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAvailablePlansExecutionsInternalServerError creates a ListAvailablePlansExecutionsInternalServerError with default headers values
func NewListAvailablePlansExecutionsInternalServerError() *ListAvailablePlansExecutionsInternalServerError {
	return &ListAvailablePlansExecutionsInternalServerError{}
}

/*
ListAvailablePlansExecutionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListAvailablePlansExecutionsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list available plans executions internal server error response has a 2xx status code
func (o *ListAvailablePlansExecutionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list available plans executions internal server error response has a 3xx status code
func (o *ListAvailablePlansExecutionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list available plans executions internal server error response has a 4xx status code
func (o *ListAvailablePlansExecutionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list available plans executions internal server error response has a 5xx status code
func (o *ListAvailablePlansExecutionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list available plans executions internal server error response a status code equal to that given
func (o *ListAvailablePlansExecutionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ListAvailablePlansExecutionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListAvailablePlansExecutionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /executables/plans/executions][%d] listAvailablePlansExecutionsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListAvailablePlansExecutionsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListAvailablePlansExecutionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
