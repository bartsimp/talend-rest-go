// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// SearchTasksReader is a Reader for the SearchTasks structure.
type SearchTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchTasksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchTasksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchTasksOK creates a SearchTasksOK with default headers values
func NewSearchTasksOK() *SearchTasksOK {
	return &SearchTasksOK{}
}

/*
SearchTasksOK describes a response with status code 200, with default header values.

OK
*/
type SearchTasksOK struct {
	Payload *models.Page
}

// IsSuccess returns true when this search tasks o k response has a 2xx status code
func (o *SearchTasksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search tasks o k response has a 3xx status code
func (o *SearchTasksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search tasks o k response has a 4xx status code
func (o *SearchTasksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search tasks o k response has a 5xx status code
func (o *SearchTasksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search tasks o k response a status code equal to that given
func (o *SearchTasksOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchTasksOK) Error() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksOK  %+v", 200, o.Payload)
}

func (o *SearchTasksOK) String() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksOK  %+v", 200, o.Payload)
}

func (o *SearchTasksOK) GetPayload() *models.Page {
	return o.Payload
}

func (o *SearchTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Page)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTasksBadRequest creates a SearchTasksBadRequest with default headers values
func NewSearchTasksBadRequest() *SearchTasksBadRequest {
	return &SearchTasksBadRequest{}
}

/*
SearchTasksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchTasksBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this search tasks bad request response has a 2xx status code
func (o *SearchTasksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search tasks bad request response has a 3xx status code
func (o *SearchTasksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search tasks bad request response has a 4xx status code
func (o *SearchTasksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search tasks bad request response has a 5xx status code
func (o *SearchTasksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search tasks bad request response a status code equal to that given
func (o *SearchTasksBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchTasksBadRequest) Error() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksBadRequest  %+v", 400, o.Payload)
}

func (o *SearchTasksBadRequest) String() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksBadRequest  %+v", 400, o.Payload)
}

func (o *SearchTasksBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SearchTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTasksUnauthorized creates a SearchTasksUnauthorized with default headers values
func NewSearchTasksUnauthorized() *SearchTasksUnauthorized {
	return &SearchTasksUnauthorized{}
}

/*
SearchTasksUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchTasksUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this search tasks unauthorized response has a 2xx status code
func (o *SearchTasksUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search tasks unauthorized response has a 3xx status code
func (o *SearchTasksUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search tasks unauthorized response has a 4xx status code
func (o *SearchTasksUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search tasks unauthorized response has a 5xx status code
func (o *SearchTasksUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search tasks unauthorized response a status code equal to that given
func (o *SearchTasksUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchTasksUnauthorized) Error() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchTasksUnauthorized) String() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchTasksUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SearchTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTasksForbidden creates a SearchTasksForbidden with default headers values
func NewSearchTasksForbidden() *SearchTasksForbidden {
	return &SearchTasksForbidden{}
}

/*
SearchTasksForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchTasksForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this search tasks forbidden response has a 2xx status code
func (o *SearchTasksForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search tasks forbidden response has a 3xx status code
func (o *SearchTasksForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search tasks forbidden response has a 4xx status code
func (o *SearchTasksForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search tasks forbidden response has a 5xx status code
func (o *SearchTasksForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search tasks forbidden response a status code equal to that given
func (o *SearchTasksForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchTasksForbidden) Error() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksForbidden  %+v", 403, o.Payload)
}

func (o *SearchTasksForbidden) String() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksForbidden  %+v", 403, o.Payload)
}

func (o *SearchTasksForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SearchTasksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTasksNotFound creates a SearchTasksNotFound with default headers values
func NewSearchTasksNotFound() *SearchTasksNotFound {
	return &SearchTasksNotFound{}
}

/*
SearchTasksNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchTasksNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this search tasks not found response has a 2xx status code
func (o *SearchTasksNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search tasks not found response has a 3xx status code
func (o *SearchTasksNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search tasks not found response has a 4xx status code
func (o *SearchTasksNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search tasks not found response has a 5xx status code
func (o *SearchTasksNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search tasks not found response a status code equal to that given
func (o *SearchTasksNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchTasksNotFound) Error() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksNotFound  %+v", 404, o.Payload)
}

func (o *SearchTasksNotFound) String() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksNotFound  %+v", 404, o.Payload)
}

func (o *SearchTasksNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SearchTasksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTasksInternalServerError creates a SearchTasksInternalServerError with default headers values
func NewSearchTasksInternalServerError() *SearchTasksInternalServerError {
	return &SearchTasksInternalServerError{}
}

/*
SearchTasksInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SearchTasksInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this search tasks internal server error response has a 2xx status code
func (o *SearchTasksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search tasks internal server error response has a 3xx status code
func (o *SearchTasksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search tasks internal server error response has a 4xx status code
func (o *SearchTasksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search tasks internal server error response has a 5xx status code
func (o *SearchTasksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search tasks internal server error response a status code equal to that given
func (o *SearchTasksInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchTasksInternalServerError) Error() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchTasksInternalServerError) String() string {
	return fmt.Sprintf("[POST /executables/tasks/search][%d] searchTasksInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchTasksInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SearchTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
