// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetTaskScheduledEventsReader is a Reader for the GetTaskScheduledEvents structure.
type GetTaskScheduledEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTaskScheduledEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTaskScheduledEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTaskScheduledEventsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTaskScheduledEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTaskScheduledEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTaskScheduledEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTaskScheduledEventsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTaskScheduledEventsOK creates a GetTaskScheduledEventsOK with default headers values
func NewGetTaskScheduledEventsOK() *GetTaskScheduledEventsOK {
	return &GetTaskScheduledEventsOK{}
}

/*
GetTaskScheduledEventsOK describes a response with status code 200, with default header values.

OK
*/
type GetTaskScheduledEventsOK struct {
	Payload *models.Page
}

// IsSuccess returns true when this get task scheduled events o k response has a 2xx status code
func (o *GetTaskScheduledEventsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get task scheduled events o k response has a 3xx status code
func (o *GetTaskScheduledEventsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task scheduled events o k response has a 4xx status code
func (o *GetTaskScheduledEventsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get task scheduled events o k response has a 5xx status code
func (o *GetTaskScheduledEventsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get task scheduled events o k response a status code equal to that given
func (o *GetTaskScheduledEventsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTaskScheduledEventsOK) Error() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsOK  %+v", 200, o.Payload)
}

func (o *GetTaskScheduledEventsOK) String() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsOK  %+v", 200, o.Payload)
}

func (o *GetTaskScheduledEventsOK) GetPayload() *models.Page {
	return o.Payload
}

func (o *GetTaskScheduledEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Page)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskScheduledEventsBadRequest creates a GetTaskScheduledEventsBadRequest with default headers values
func NewGetTaskScheduledEventsBadRequest() *GetTaskScheduledEventsBadRequest {
	return &GetTaskScheduledEventsBadRequest{}
}

/*
GetTaskScheduledEventsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTaskScheduledEventsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task scheduled events bad request response has a 2xx status code
func (o *GetTaskScheduledEventsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task scheduled events bad request response has a 3xx status code
func (o *GetTaskScheduledEventsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task scheduled events bad request response has a 4xx status code
func (o *GetTaskScheduledEventsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task scheduled events bad request response has a 5xx status code
func (o *GetTaskScheduledEventsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get task scheduled events bad request response a status code equal to that given
func (o *GetTaskScheduledEventsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetTaskScheduledEventsBadRequest) Error() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsBadRequest  %+v", 400, o.Payload)
}

func (o *GetTaskScheduledEventsBadRequest) String() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsBadRequest  %+v", 400, o.Payload)
}

func (o *GetTaskScheduledEventsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskScheduledEventsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskScheduledEventsUnauthorized creates a GetTaskScheduledEventsUnauthorized with default headers values
func NewGetTaskScheduledEventsUnauthorized() *GetTaskScheduledEventsUnauthorized {
	return &GetTaskScheduledEventsUnauthorized{}
}

/*
GetTaskScheduledEventsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTaskScheduledEventsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task scheduled events unauthorized response has a 2xx status code
func (o *GetTaskScheduledEventsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task scheduled events unauthorized response has a 3xx status code
func (o *GetTaskScheduledEventsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task scheduled events unauthorized response has a 4xx status code
func (o *GetTaskScheduledEventsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task scheduled events unauthorized response has a 5xx status code
func (o *GetTaskScheduledEventsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get task scheduled events unauthorized response a status code equal to that given
func (o *GetTaskScheduledEventsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetTaskScheduledEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTaskScheduledEventsUnauthorized) String() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTaskScheduledEventsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskScheduledEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskScheduledEventsForbidden creates a GetTaskScheduledEventsForbidden with default headers values
func NewGetTaskScheduledEventsForbidden() *GetTaskScheduledEventsForbidden {
	return &GetTaskScheduledEventsForbidden{}
}

/*
GetTaskScheduledEventsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTaskScheduledEventsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task scheduled events forbidden response has a 2xx status code
func (o *GetTaskScheduledEventsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task scheduled events forbidden response has a 3xx status code
func (o *GetTaskScheduledEventsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task scheduled events forbidden response has a 4xx status code
func (o *GetTaskScheduledEventsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task scheduled events forbidden response has a 5xx status code
func (o *GetTaskScheduledEventsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get task scheduled events forbidden response a status code equal to that given
func (o *GetTaskScheduledEventsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetTaskScheduledEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsForbidden  %+v", 403, o.Payload)
}

func (o *GetTaskScheduledEventsForbidden) String() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsForbidden  %+v", 403, o.Payload)
}

func (o *GetTaskScheduledEventsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskScheduledEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskScheduledEventsNotFound creates a GetTaskScheduledEventsNotFound with default headers values
func NewGetTaskScheduledEventsNotFound() *GetTaskScheduledEventsNotFound {
	return &GetTaskScheduledEventsNotFound{}
}

/*
GetTaskScheduledEventsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTaskScheduledEventsNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task scheduled events not found response has a 2xx status code
func (o *GetTaskScheduledEventsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task scheduled events not found response has a 3xx status code
func (o *GetTaskScheduledEventsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task scheduled events not found response has a 4xx status code
func (o *GetTaskScheduledEventsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task scheduled events not found response has a 5xx status code
func (o *GetTaskScheduledEventsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get task scheduled events not found response a status code equal to that given
func (o *GetTaskScheduledEventsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetTaskScheduledEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsNotFound  %+v", 404, o.Payload)
}

func (o *GetTaskScheduledEventsNotFound) String() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsNotFound  %+v", 404, o.Payload)
}

func (o *GetTaskScheduledEventsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskScheduledEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskScheduledEventsInternalServerError creates a GetTaskScheduledEventsInternalServerError with default headers values
func NewGetTaskScheduledEventsInternalServerError() *GetTaskScheduledEventsInternalServerError {
	return &GetTaskScheduledEventsInternalServerError{}
}

/*
GetTaskScheduledEventsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetTaskScheduledEventsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get task scheduled events internal server error response has a 2xx status code
func (o *GetTaskScheduledEventsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task scheduled events internal server error response has a 3xx status code
func (o *GetTaskScheduledEventsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task scheduled events internal server error response has a 4xx status code
func (o *GetTaskScheduledEventsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get task scheduled events internal server error response has a 5xx status code
func (o *GetTaskScheduledEventsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get task scheduled events internal server error response a status code equal to that given
func (o *GetTaskScheduledEventsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetTaskScheduledEventsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTaskScheduledEventsInternalServerError) String() string {
	return fmt.Sprintf("[GET /executables/tasks/{taskId}/run-config/events][%d] getTaskScheduledEventsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTaskScheduledEventsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTaskScheduledEventsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
