// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// CreateTaskReader is a Reader for the CreateTask structure.
type CreateTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateTaskCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateTaskUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateTaskForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateTaskInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateTaskCreated creates a CreateTaskCreated with default headers values
func NewCreateTaskCreated() *CreateTaskCreated {
	return &CreateTaskCreated{}
}

/*
CreateTaskCreated describes a response with status code 201, with default header values.

Created
*/
type CreateTaskCreated struct {
	Payload *models.TaskV21
}

// IsSuccess returns true when this create task created response has a 2xx status code
func (o *CreateTaskCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create task created response has a 3xx status code
func (o *CreateTaskCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task created response has a 4xx status code
func (o *CreateTaskCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create task created response has a 5xx status code
func (o *CreateTaskCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create task created response a status code equal to that given
func (o *CreateTaskCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateTaskCreated) Error() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskCreated  %+v", 201, o.Payload)
}

func (o *CreateTaskCreated) String() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskCreated  %+v", 201, o.Payload)
}

func (o *CreateTaskCreated) GetPayload() *models.TaskV21 {
	return o.Payload
}

func (o *CreateTaskCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskV21)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTaskBadRequest creates a CreateTaskBadRequest with default headers values
func NewCreateTaskBadRequest() *CreateTaskBadRequest {
	return &CreateTaskBadRequest{}
}

/*
CreateTaskBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateTaskBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create task bad request response has a 2xx status code
func (o *CreateTaskBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create task bad request response has a 3xx status code
func (o *CreateTaskBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task bad request response has a 4xx status code
func (o *CreateTaskBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create task bad request response has a 5xx status code
func (o *CreateTaskBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create task bad request response a status code equal to that given
func (o *CreateTaskBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateTaskBadRequest) Error() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskBadRequest  %+v", 400, o.Payload)
}

func (o *CreateTaskBadRequest) String() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskBadRequest  %+v", 400, o.Payload)
}

func (o *CreateTaskBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTaskUnauthorized creates a CreateTaskUnauthorized with default headers values
func NewCreateTaskUnauthorized() *CreateTaskUnauthorized {
	return &CreateTaskUnauthorized{}
}

/*
CreateTaskUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateTaskUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create task unauthorized response has a 2xx status code
func (o *CreateTaskUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create task unauthorized response has a 3xx status code
func (o *CreateTaskUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task unauthorized response has a 4xx status code
func (o *CreateTaskUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create task unauthorized response has a 5xx status code
func (o *CreateTaskUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create task unauthorized response a status code equal to that given
func (o *CreateTaskUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateTaskUnauthorized) Error() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateTaskUnauthorized) String() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateTaskUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateTaskUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTaskForbidden creates a CreateTaskForbidden with default headers values
func NewCreateTaskForbidden() *CreateTaskForbidden {
	return &CreateTaskForbidden{}
}

/*
CreateTaskForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateTaskForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create task forbidden response has a 2xx status code
func (o *CreateTaskForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create task forbidden response has a 3xx status code
func (o *CreateTaskForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task forbidden response has a 4xx status code
func (o *CreateTaskForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create task forbidden response has a 5xx status code
func (o *CreateTaskForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create task forbidden response a status code equal to that given
func (o *CreateTaskForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateTaskForbidden) Error() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskForbidden  %+v", 403, o.Payload)
}

func (o *CreateTaskForbidden) String() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskForbidden  %+v", 403, o.Payload)
}

func (o *CreateTaskForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateTaskForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTaskInternalServerError creates a CreateTaskInternalServerError with default headers values
func NewCreateTaskInternalServerError() *CreateTaskInternalServerError {
	return &CreateTaskInternalServerError{}
}

/*
CreateTaskInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateTaskInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create task internal server error response has a 2xx status code
func (o *CreateTaskInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create task internal server error response has a 3xx status code
func (o *CreateTaskInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task internal server error response has a 4xx status code
func (o *CreateTaskInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create task internal server error response has a 5xx status code
func (o *CreateTaskInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create task internal server error response a status code equal to that given
func (o *CreateTaskInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateTaskInternalServerError) Error() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateTaskInternalServerError) String() string {
	return fmt.Sprintf("[POST /executables/tasks][%d] createTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateTaskInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateTaskInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
