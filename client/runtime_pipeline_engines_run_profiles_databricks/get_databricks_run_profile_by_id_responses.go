// Code generated by go-swagger; DO NOT EDIT.

package runtime_pipeline_engines_run_profiles_databricks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetDatabricksRunProfileByIDReader is a Reader for the GetDatabricksRunProfileByID structure.
type GetDatabricksRunProfileByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDatabricksRunProfileByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDatabricksRunProfileByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDatabricksRunProfileByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDatabricksRunProfileByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDatabricksRunProfileByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDatabricksRunProfileByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDatabricksRunProfileByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDatabricksRunProfileByIDOK creates a GetDatabricksRunProfileByIDOK with default headers values
func NewGetDatabricksRunProfileByIDOK() *GetDatabricksRunProfileByIDOK {
	return &GetDatabricksRunProfileByIDOK{}
}

/*
GetDatabricksRunProfileByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetDatabricksRunProfileByIDOK struct {
	Payload *models.DatabricksRunProfile
}

// IsSuccess returns true when this get databricks run profile by Id o k response has a 2xx status code
func (o *GetDatabricksRunProfileByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get databricks run profile by Id o k response has a 3xx status code
func (o *GetDatabricksRunProfileByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get databricks run profile by Id o k response has a 4xx status code
func (o *GetDatabricksRunProfileByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get databricks run profile by Id o k response has a 5xx status code
func (o *GetDatabricksRunProfileByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get databricks run profile by Id o k response a status code equal to that given
func (o *GetDatabricksRunProfileByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetDatabricksRunProfileByIDOK) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdOK  %+v", 200, o.Payload)
}

func (o *GetDatabricksRunProfileByIDOK) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdOK  %+v", 200, o.Payload)
}

func (o *GetDatabricksRunProfileByIDOK) GetPayload() *models.DatabricksRunProfile {
	return o.Payload
}

func (o *GetDatabricksRunProfileByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DatabricksRunProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatabricksRunProfileByIDBadRequest creates a GetDatabricksRunProfileByIDBadRequest with default headers values
func NewGetDatabricksRunProfileByIDBadRequest() *GetDatabricksRunProfileByIDBadRequest {
	return &GetDatabricksRunProfileByIDBadRequest{}
}

/*
GetDatabricksRunProfileByIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDatabricksRunProfileByIDBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get databricks run profile by Id bad request response has a 2xx status code
func (o *GetDatabricksRunProfileByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get databricks run profile by Id bad request response has a 3xx status code
func (o *GetDatabricksRunProfileByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get databricks run profile by Id bad request response has a 4xx status code
func (o *GetDatabricksRunProfileByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get databricks run profile by Id bad request response has a 5xx status code
func (o *GetDatabricksRunProfileByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get databricks run profile by Id bad request response a status code equal to that given
func (o *GetDatabricksRunProfileByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetDatabricksRunProfileByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetDatabricksRunProfileByIDBadRequest) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetDatabricksRunProfileByIDBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDatabricksRunProfileByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatabricksRunProfileByIDUnauthorized creates a GetDatabricksRunProfileByIDUnauthorized with default headers values
func NewGetDatabricksRunProfileByIDUnauthorized() *GetDatabricksRunProfileByIDUnauthorized {
	return &GetDatabricksRunProfileByIDUnauthorized{}
}

/*
GetDatabricksRunProfileByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDatabricksRunProfileByIDUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get databricks run profile by Id unauthorized response has a 2xx status code
func (o *GetDatabricksRunProfileByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get databricks run profile by Id unauthorized response has a 3xx status code
func (o *GetDatabricksRunProfileByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get databricks run profile by Id unauthorized response has a 4xx status code
func (o *GetDatabricksRunProfileByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get databricks run profile by Id unauthorized response has a 5xx status code
func (o *GetDatabricksRunProfileByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get databricks run profile by Id unauthorized response a status code equal to that given
func (o *GetDatabricksRunProfileByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetDatabricksRunProfileByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDatabricksRunProfileByIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDatabricksRunProfileByIDUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDatabricksRunProfileByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatabricksRunProfileByIDForbidden creates a GetDatabricksRunProfileByIDForbidden with default headers values
func NewGetDatabricksRunProfileByIDForbidden() *GetDatabricksRunProfileByIDForbidden {
	return &GetDatabricksRunProfileByIDForbidden{}
}

/*
GetDatabricksRunProfileByIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDatabricksRunProfileByIDForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get databricks run profile by Id forbidden response has a 2xx status code
func (o *GetDatabricksRunProfileByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get databricks run profile by Id forbidden response has a 3xx status code
func (o *GetDatabricksRunProfileByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get databricks run profile by Id forbidden response has a 4xx status code
func (o *GetDatabricksRunProfileByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get databricks run profile by Id forbidden response has a 5xx status code
func (o *GetDatabricksRunProfileByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get databricks run profile by Id forbidden response a status code equal to that given
func (o *GetDatabricksRunProfileByIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetDatabricksRunProfileByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetDatabricksRunProfileByIDForbidden) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetDatabricksRunProfileByIDForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDatabricksRunProfileByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatabricksRunProfileByIDNotFound creates a GetDatabricksRunProfileByIDNotFound with default headers values
func NewGetDatabricksRunProfileByIDNotFound() *GetDatabricksRunProfileByIDNotFound {
	return &GetDatabricksRunProfileByIDNotFound{}
}

/*
GetDatabricksRunProfileByIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDatabricksRunProfileByIDNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get databricks run profile by Id not found response has a 2xx status code
func (o *GetDatabricksRunProfileByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get databricks run profile by Id not found response has a 3xx status code
func (o *GetDatabricksRunProfileByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get databricks run profile by Id not found response has a 4xx status code
func (o *GetDatabricksRunProfileByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get databricks run profile by Id not found response has a 5xx status code
func (o *GetDatabricksRunProfileByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get databricks run profile by Id not found response a status code equal to that given
func (o *GetDatabricksRunProfileByIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetDatabricksRunProfileByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetDatabricksRunProfileByIDNotFound) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetDatabricksRunProfileByIDNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDatabricksRunProfileByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatabricksRunProfileByIDInternalServerError creates a GetDatabricksRunProfileByIDInternalServerError with default headers values
func NewGetDatabricksRunProfileByIDInternalServerError() *GetDatabricksRunProfileByIDInternalServerError {
	return &GetDatabricksRunProfileByIDInternalServerError{}
}

/*
GetDatabricksRunProfileByIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDatabricksRunProfileByIDInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get databricks run profile by Id internal server error response has a 2xx status code
func (o *GetDatabricksRunProfileByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get databricks run profile by Id internal server error response has a 3xx status code
func (o *GetDatabricksRunProfileByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get databricks run profile by Id internal server error response has a 4xx status code
func (o *GetDatabricksRunProfileByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get databricks run profile by Id internal server error response has a 5xx status code
func (o *GetDatabricksRunProfileByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get databricks run profile by Id internal server error response a status code equal to that given
func (o *GetDatabricksRunProfileByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetDatabricksRunProfileByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDatabricksRunProfileByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}][%d] getDatabricksRunProfileByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDatabricksRunProfileByIDInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDatabricksRunProfileByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
