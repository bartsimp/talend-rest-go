// Code generated by go-swagger; DO NOT EDIT.

package promotions_executables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new promotions executables API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for promotions executables API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreatePromotion(params *CreatePromotionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreatePromotionCreated, error)

	DeletePromotion(params *DeletePromotionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeletePromotionNoContent, error)

	GetAvailablePromotions(params *GetAvailablePromotionsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAvailablePromotionsOK, error)

	GetPromotionDetailsByID(params *GetPromotionDetailsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPromotionDetailsByIDOK, error)

	UpdatePromotion(params *UpdatePromotionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdatePromotionNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreatePromotion creates a promotion

Create a Promotion
*/
func (a *Client) CreatePromotion(params *CreatePromotionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreatePromotionCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreatePromotionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createPromotion",
		Method:             "POST",
		PathPattern:        "/executables/promotions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreatePromotionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreatePromotionCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createPromotion: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeletePromotion deletes a promotion

Delete a Promotion
*/
func (a *Client) DeletePromotion(params *DeletePromotionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeletePromotionNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeletePromotionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deletePromotion",
		Method:             "DELETE",
		PathPattern:        "/executables/promotions/{promotionId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeletePromotionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeletePromotionNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deletePromotion: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAvailablePromotions gets available promotions

Get available Promotions
*/
func (a *Client) GetAvailablePromotions(params *GetAvailablePromotionsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetAvailablePromotionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAvailablePromotionsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getAvailablePromotions",
		Method:             "GET",
		PathPattern:        "/executables/promotions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAvailablePromotionsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAvailablePromotionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAvailablePromotions: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPromotionDetailsByID gets promotion details

Get Promotion details
*/
func (a *Client) GetPromotionDetailsByID(params *GetPromotionDetailsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPromotionDetailsByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPromotionDetailsByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getPromotionDetailsById",
		Method:             "GET",
		PathPattern:        "/executables/promotions/{promotionId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPromotionDetailsByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPromotionDetailsByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPromotionDetailsById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdatePromotion updates a promotion

Update a Promotion
*/
func (a *Client) UpdatePromotion(params *UpdatePromotionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdatePromotionNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdatePromotionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "updatePromotion",
		Method:             "PATCH",
		PathPattern:        "/executables/promotions/{promotionId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdatePromotionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdatePromotionNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updatePromotion: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
