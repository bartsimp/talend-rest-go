// Code generated by go-swagger; DO NOT EDIT.

package promotions_executables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetAvailablePromotionsReader is a Reader for the GetAvailablePromotions structure.
type GetAvailablePromotionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAvailablePromotionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAvailablePromotionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAvailablePromotionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAvailablePromotionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAvailablePromotionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAvailablePromotionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAvailablePromotionsOK creates a GetAvailablePromotionsOK with default headers values
func NewGetAvailablePromotionsOK() *GetAvailablePromotionsOK {
	return &GetAvailablePromotionsOK{}
}

/*
GetAvailablePromotionsOK describes a response with status code 200, with default header values.

OK
*/
type GetAvailablePromotionsOK struct {
	Payload []*models.PromotionExecutableDetails
}

// IsSuccess returns true when this get available promotions o k response has a 2xx status code
func (o *GetAvailablePromotionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get available promotions o k response has a 3xx status code
func (o *GetAvailablePromotionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available promotions o k response has a 4xx status code
func (o *GetAvailablePromotionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get available promotions o k response has a 5xx status code
func (o *GetAvailablePromotionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get available promotions o k response a status code equal to that given
func (o *GetAvailablePromotionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAvailablePromotionsOK) Error() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsOK  %+v", 200, o.Payload)
}

func (o *GetAvailablePromotionsOK) String() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsOK  %+v", 200, o.Payload)
}

func (o *GetAvailablePromotionsOK) GetPayload() []*models.PromotionExecutableDetails {
	return o.Payload
}

func (o *GetAvailablePromotionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailablePromotionsBadRequest creates a GetAvailablePromotionsBadRequest with default headers values
func NewGetAvailablePromotionsBadRequest() *GetAvailablePromotionsBadRequest {
	return &GetAvailablePromotionsBadRequest{}
}

/*
GetAvailablePromotionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAvailablePromotionsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get available promotions bad request response has a 2xx status code
func (o *GetAvailablePromotionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available promotions bad request response has a 3xx status code
func (o *GetAvailablePromotionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available promotions bad request response has a 4xx status code
func (o *GetAvailablePromotionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available promotions bad request response has a 5xx status code
func (o *GetAvailablePromotionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get available promotions bad request response a status code equal to that given
func (o *GetAvailablePromotionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAvailablePromotionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAvailablePromotionsBadRequest) String() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAvailablePromotionsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAvailablePromotionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailablePromotionsUnauthorized creates a GetAvailablePromotionsUnauthorized with default headers values
func NewGetAvailablePromotionsUnauthorized() *GetAvailablePromotionsUnauthorized {
	return &GetAvailablePromotionsUnauthorized{}
}

/*
GetAvailablePromotionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAvailablePromotionsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get available promotions unauthorized response has a 2xx status code
func (o *GetAvailablePromotionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available promotions unauthorized response has a 3xx status code
func (o *GetAvailablePromotionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available promotions unauthorized response has a 4xx status code
func (o *GetAvailablePromotionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available promotions unauthorized response has a 5xx status code
func (o *GetAvailablePromotionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get available promotions unauthorized response a status code equal to that given
func (o *GetAvailablePromotionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAvailablePromotionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAvailablePromotionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAvailablePromotionsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAvailablePromotionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailablePromotionsForbidden creates a GetAvailablePromotionsForbidden with default headers values
func NewGetAvailablePromotionsForbidden() *GetAvailablePromotionsForbidden {
	return &GetAvailablePromotionsForbidden{}
}

/*
GetAvailablePromotionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAvailablePromotionsForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get available promotions forbidden response has a 2xx status code
func (o *GetAvailablePromotionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available promotions forbidden response has a 3xx status code
func (o *GetAvailablePromotionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available promotions forbidden response has a 4xx status code
func (o *GetAvailablePromotionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available promotions forbidden response has a 5xx status code
func (o *GetAvailablePromotionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get available promotions forbidden response a status code equal to that given
func (o *GetAvailablePromotionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAvailablePromotionsForbidden) Error() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsForbidden  %+v", 403, o.Payload)
}

func (o *GetAvailablePromotionsForbidden) String() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsForbidden  %+v", 403, o.Payload)
}

func (o *GetAvailablePromotionsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAvailablePromotionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailablePromotionsInternalServerError creates a GetAvailablePromotionsInternalServerError with default headers values
func NewGetAvailablePromotionsInternalServerError() *GetAvailablePromotionsInternalServerError {
	return &GetAvailablePromotionsInternalServerError{}
}

/*
GetAvailablePromotionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAvailablePromotionsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get available promotions internal server error response has a 2xx status code
func (o *GetAvailablePromotionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available promotions internal server error response has a 3xx status code
func (o *GetAvailablePromotionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available promotions internal server error response has a 4xx status code
func (o *GetAvailablePromotionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get available promotions internal server error response has a 5xx status code
func (o *GetAvailablePromotionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get available promotions internal server error response a status code equal to that given
func (o *GetAvailablePromotionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAvailablePromotionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAvailablePromotionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /executables/promotions][%d] getAvailablePromotionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAvailablePromotionsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAvailablePromotionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
