// Code generated by go-swagger; DO NOT EDIT.

package runtime_pipeline_engines_run_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetRunProfileByEngineIDReader is a Reader for the GetRunProfileByEngineID structure.
type GetRunProfileByEngineIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunProfileByEngineIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunProfileByEngineIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRunProfileByEngineIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRunProfileByEngineIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunProfileByEngineIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRunProfileByEngineIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRunProfileByEngineIDOK creates a GetRunProfileByEngineIDOK with default headers values
func NewGetRunProfileByEngineIDOK() *GetRunProfileByEngineIDOK {
	return &GetRunProfileByEngineIDOK{}
}

/*
GetRunProfileByEngineIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRunProfileByEngineIDOK struct {
	Payload []*models.PipelineRunProfileResponse
}

// IsSuccess returns true when this get run profile by engine Id o k response has a 2xx status code
func (o *GetRunProfileByEngineIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get run profile by engine Id o k response has a 3xx status code
func (o *GetRunProfileByEngineIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get run profile by engine Id o k response has a 4xx status code
func (o *GetRunProfileByEngineIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get run profile by engine Id o k response has a 5xx status code
func (o *GetRunProfileByEngineIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get run profile by engine Id o k response a status code equal to that given
func (o *GetRunProfileByEngineIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRunProfileByEngineIDOK) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdOK  %+v", 200, o.Payload)
}

func (o *GetRunProfileByEngineIDOK) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdOK  %+v", 200, o.Payload)
}

func (o *GetRunProfileByEngineIDOK) GetPayload() []*models.PipelineRunProfileResponse {
	return o.Payload
}

func (o *GetRunProfileByEngineIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunProfileByEngineIDBadRequest creates a GetRunProfileByEngineIDBadRequest with default headers values
func NewGetRunProfileByEngineIDBadRequest() *GetRunProfileByEngineIDBadRequest {
	return &GetRunProfileByEngineIDBadRequest{}
}

/*
GetRunProfileByEngineIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRunProfileByEngineIDBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get run profile by engine Id bad request response has a 2xx status code
func (o *GetRunProfileByEngineIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get run profile by engine Id bad request response has a 3xx status code
func (o *GetRunProfileByEngineIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get run profile by engine Id bad request response has a 4xx status code
func (o *GetRunProfileByEngineIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get run profile by engine Id bad request response has a 5xx status code
func (o *GetRunProfileByEngineIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get run profile by engine Id bad request response a status code equal to that given
func (o *GetRunProfileByEngineIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRunProfileByEngineIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetRunProfileByEngineIDBadRequest) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetRunProfileByEngineIDBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRunProfileByEngineIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunProfileByEngineIDUnauthorized creates a GetRunProfileByEngineIDUnauthorized with default headers values
func NewGetRunProfileByEngineIDUnauthorized() *GetRunProfileByEngineIDUnauthorized {
	return &GetRunProfileByEngineIDUnauthorized{}
}

/*
GetRunProfileByEngineIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRunProfileByEngineIDUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get run profile by engine Id unauthorized response has a 2xx status code
func (o *GetRunProfileByEngineIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get run profile by engine Id unauthorized response has a 3xx status code
func (o *GetRunProfileByEngineIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get run profile by engine Id unauthorized response has a 4xx status code
func (o *GetRunProfileByEngineIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get run profile by engine Id unauthorized response has a 5xx status code
func (o *GetRunProfileByEngineIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get run profile by engine Id unauthorized response a status code equal to that given
func (o *GetRunProfileByEngineIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRunProfileByEngineIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRunProfileByEngineIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRunProfileByEngineIDUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRunProfileByEngineIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunProfileByEngineIDNotFound creates a GetRunProfileByEngineIDNotFound with default headers values
func NewGetRunProfileByEngineIDNotFound() *GetRunProfileByEngineIDNotFound {
	return &GetRunProfileByEngineIDNotFound{}
}

/*
GetRunProfileByEngineIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRunProfileByEngineIDNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get run profile by engine Id not found response has a 2xx status code
func (o *GetRunProfileByEngineIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get run profile by engine Id not found response has a 3xx status code
func (o *GetRunProfileByEngineIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get run profile by engine Id not found response has a 4xx status code
func (o *GetRunProfileByEngineIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get run profile by engine Id not found response has a 5xx status code
func (o *GetRunProfileByEngineIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get run profile by engine Id not found response a status code equal to that given
func (o *GetRunProfileByEngineIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRunProfileByEngineIDNotFound) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdNotFound  %+v", 404, o.Payload)
}

func (o *GetRunProfileByEngineIDNotFound) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdNotFound  %+v", 404, o.Payload)
}

func (o *GetRunProfileByEngineIDNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRunProfileByEngineIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunProfileByEngineIDInternalServerError creates a GetRunProfileByEngineIDInternalServerError with default headers values
func NewGetRunProfileByEngineIDInternalServerError() *GetRunProfileByEngineIDInternalServerError {
	return &GetRunProfileByEngineIDInternalServerError{}
}

/*
GetRunProfileByEngineIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetRunProfileByEngineIDInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get run profile by engine Id internal server error response has a 2xx status code
func (o *GetRunProfileByEngineIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get run profile by engine Id internal server error response has a 3xx status code
func (o *GetRunProfileByEngineIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get run profile by engine Id internal server error response has a 4xx status code
func (o *GetRunProfileByEngineIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get run profile by engine Id internal server error response has a 5xx status code
func (o *GetRunProfileByEngineIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get run profile by engine Id internal server error response a status code equal to that given
func (o *GetRunProfileByEngineIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRunProfileByEngineIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunProfileByEngineIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /runtimes/pipeline-engines/{engineId}/run-profiles][%d] getRunProfileByEngineIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunProfileByEngineIDInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRunProfileByEngineIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
