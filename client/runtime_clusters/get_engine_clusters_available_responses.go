// Code generated by go-swagger; DO NOT EDIT.

package runtime_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetEngineClustersAvailableReader is a Reader for the GetEngineClustersAvailable structure.
type GetEngineClustersAvailableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEngineClustersAvailableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEngineClustersAvailableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEngineClustersAvailableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEngineClustersAvailableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEngineClustersAvailableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEngineClustersAvailableOK creates a GetEngineClustersAvailableOK with default headers values
func NewGetEngineClustersAvailableOK() *GetEngineClustersAvailableOK {
	return &GetEngineClustersAvailableOK{}
}

/*
GetEngineClustersAvailableOK describes a response with status code 200, with default header values.

OK
*/
type GetEngineClustersAvailableOK struct {
	Payload []*models.BaseEngine
}

// IsSuccess returns true when this get engine clusters available o k response has a 2xx status code
func (o *GetEngineClustersAvailableOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get engine clusters available o k response has a 3xx status code
func (o *GetEngineClustersAvailableOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get engine clusters available o k response has a 4xx status code
func (o *GetEngineClustersAvailableOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get engine clusters available o k response has a 5xx status code
func (o *GetEngineClustersAvailableOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get engine clusters available o k response a status code equal to that given
func (o *GetEngineClustersAvailableOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetEngineClustersAvailableOK) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters][%d] getEngineClustersAvailableOK  %+v", 200, o.Payload)
}

func (o *GetEngineClustersAvailableOK) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters][%d] getEngineClustersAvailableOK  %+v", 200, o.Payload)
}

func (o *GetEngineClustersAvailableOK) GetPayload() []*models.BaseEngine {
	return o.Payload
}

func (o *GetEngineClustersAvailableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEngineClustersAvailableUnauthorized creates a GetEngineClustersAvailableUnauthorized with default headers values
func NewGetEngineClustersAvailableUnauthorized() *GetEngineClustersAvailableUnauthorized {
	return &GetEngineClustersAvailableUnauthorized{}
}

/*
GetEngineClustersAvailableUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEngineClustersAvailableUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get engine clusters available unauthorized response has a 2xx status code
func (o *GetEngineClustersAvailableUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get engine clusters available unauthorized response has a 3xx status code
func (o *GetEngineClustersAvailableUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get engine clusters available unauthorized response has a 4xx status code
func (o *GetEngineClustersAvailableUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get engine clusters available unauthorized response has a 5xx status code
func (o *GetEngineClustersAvailableUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get engine clusters available unauthorized response a status code equal to that given
func (o *GetEngineClustersAvailableUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetEngineClustersAvailableUnauthorized) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters][%d] getEngineClustersAvailableUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEngineClustersAvailableUnauthorized) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters][%d] getEngineClustersAvailableUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEngineClustersAvailableUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEngineClustersAvailableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEngineClustersAvailableForbidden creates a GetEngineClustersAvailableForbidden with default headers values
func NewGetEngineClustersAvailableForbidden() *GetEngineClustersAvailableForbidden {
	return &GetEngineClustersAvailableForbidden{}
}

/*
GetEngineClustersAvailableForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEngineClustersAvailableForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get engine clusters available forbidden response has a 2xx status code
func (o *GetEngineClustersAvailableForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get engine clusters available forbidden response has a 3xx status code
func (o *GetEngineClustersAvailableForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get engine clusters available forbidden response has a 4xx status code
func (o *GetEngineClustersAvailableForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get engine clusters available forbidden response has a 5xx status code
func (o *GetEngineClustersAvailableForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get engine clusters available forbidden response a status code equal to that given
func (o *GetEngineClustersAvailableForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetEngineClustersAvailableForbidden) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters][%d] getEngineClustersAvailableForbidden  %+v", 403, o.Payload)
}

func (o *GetEngineClustersAvailableForbidden) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters][%d] getEngineClustersAvailableForbidden  %+v", 403, o.Payload)
}

func (o *GetEngineClustersAvailableForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEngineClustersAvailableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEngineClustersAvailableInternalServerError creates a GetEngineClustersAvailableInternalServerError with default headers values
func NewGetEngineClustersAvailableInternalServerError() *GetEngineClustersAvailableInternalServerError {
	return &GetEngineClustersAvailableInternalServerError{}
}

/*
GetEngineClustersAvailableInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetEngineClustersAvailableInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get engine clusters available internal server error response has a 2xx status code
func (o *GetEngineClustersAvailableInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get engine clusters available internal server error response has a 3xx status code
func (o *GetEngineClustersAvailableInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get engine clusters available internal server error response has a 4xx status code
func (o *GetEngineClustersAvailableInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get engine clusters available internal server error response has a 5xx status code
func (o *GetEngineClustersAvailableInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get engine clusters available internal server error response a status code equal to that given
func (o *GetEngineClustersAvailableInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetEngineClustersAvailableInternalServerError) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters][%d] getEngineClustersAvailableInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEngineClustersAvailableInternalServerError) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters][%d] getEngineClustersAvailableInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEngineClustersAvailableInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEngineClustersAvailableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
