// Code generated by go-swagger; DO NOT EDIT.

package runtime_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetRemoteEngineClusterReader is a Reader for the GetRemoteEngineCluster structure.
type GetRemoteEngineClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRemoteEngineClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRemoteEngineClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRemoteEngineClusterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRemoteEngineClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRemoteEngineClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRemoteEngineClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRemoteEngineClusterOK creates a GetRemoteEngineClusterOK with default headers values
func NewGetRemoteEngineClusterOK() *GetRemoteEngineClusterOK {
	return &GetRemoteEngineClusterOK{}
}

/*
GetRemoteEngineClusterOK describes a response with status code 200, with default header values.

OK
*/
type GetRemoteEngineClusterOK struct {
	Payload *models.EngineCluster
}

// IsSuccess returns true when this get remote engine cluster o k response has a 2xx status code
func (o *GetRemoteEngineClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get remote engine cluster o k response has a 3xx status code
func (o *GetRemoteEngineClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine cluster o k response has a 4xx status code
func (o *GetRemoteEngineClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get remote engine cluster o k response has a 5xx status code
func (o *GetRemoteEngineClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get remote engine cluster o k response a status code equal to that given
func (o *GetRemoteEngineClusterOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRemoteEngineClusterOK) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterOK  %+v", 200, o.Payload)
}

func (o *GetRemoteEngineClusterOK) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterOK  %+v", 200, o.Payload)
}

func (o *GetRemoteEngineClusterOK) GetPayload() *models.EngineCluster {
	return o.Payload
}

func (o *GetRemoteEngineClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRemoteEngineClusterUnauthorized creates a GetRemoteEngineClusterUnauthorized with default headers values
func NewGetRemoteEngineClusterUnauthorized() *GetRemoteEngineClusterUnauthorized {
	return &GetRemoteEngineClusterUnauthorized{}
}

/*
GetRemoteEngineClusterUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRemoteEngineClusterUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get remote engine cluster unauthorized response has a 2xx status code
func (o *GetRemoteEngineClusterUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get remote engine cluster unauthorized response has a 3xx status code
func (o *GetRemoteEngineClusterUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine cluster unauthorized response has a 4xx status code
func (o *GetRemoteEngineClusterUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get remote engine cluster unauthorized response has a 5xx status code
func (o *GetRemoteEngineClusterUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get remote engine cluster unauthorized response a status code equal to that given
func (o *GetRemoteEngineClusterUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRemoteEngineClusterUnauthorized) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRemoteEngineClusterUnauthorized) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRemoteEngineClusterUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRemoteEngineClusterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRemoteEngineClusterForbidden creates a GetRemoteEngineClusterForbidden with default headers values
func NewGetRemoteEngineClusterForbidden() *GetRemoteEngineClusterForbidden {
	return &GetRemoteEngineClusterForbidden{}
}

/*
GetRemoteEngineClusterForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRemoteEngineClusterForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get remote engine cluster forbidden response has a 2xx status code
func (o *GetRemoteEngineClusterForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get remote engine cluster forbidden response has a 3xx status code
func (o *GetRemoteEngineClusterForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine cluster forbidden response has a 4xx status code
func (o *GetRemoteEngineClusterForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get remote engine cluster forbidden response has a 5xx status code
func (o *GetRemoteEngineClusterForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get remote engine cluster forbidden response a status code equal to that given
func (o *GetRemoteEngineClusterForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRemoteEngineClusterForbidden) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterForbidden  %+v", 403, o.Payload)
}

func (o *GetRemoteEngineClusterForbidden) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterForbidden  %+v", 403, o.Payload)
}

func (o *GetRemoteEngineClusterForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRemoteEngineClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRemoteEngineClusterNotFound creates a GetRemoteEngineClusterNotFound with default headers values
func NewGetRemoteEngineClusterNotFound() *GetRemoteEngineClusterNotFound {
	return &GetRemoteEngineClusterNotFound{}
}

/*
GetRemoteEngineClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRemoteEngineClusterNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get remote engine cluster not found response has a 2xx status code
func (o *GetRemoteEngineClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get remote engine cluster not found response has a 3xx status code
func (o *GetRemoteEngineClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine cluster not found response has a 4xx status code
func (o *GetRemoteEngineClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get remote engine cluster not found response has a 5xx status code
func (o *GetRemoteEngineClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get remote engine cluster not found response a status code equal to that given
func (o *GetRemoteEngineClusterNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRemoteEngineClusterNotFound) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterNotFound  %+v", 404, o.Payload)
}

func (o *GetRemoteEngineClusterNotFound) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterNotFound  %+v", 404, o.Payload)
}

func (o *GetRemoteEngineClusterNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRemoteEngineClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRemoteEngineClusterInternalServerError creates a GetRemoteEngineClusterInternalServerError with default headers values
func NewGetRemoteEngineClusterInternalServerError() *GetRemoteEngineClusterInternalServerError {
	return &GetRemoteEngineClusterInternalServerError{}
}

/*
GetRemoteEngineClusterInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRemoteEngineClusterInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get remote engine cluster internal server error response has a 2xx status code
func (o *GetRemoteEngineClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get remote engine cluster internal server error response has a 3xx status code
func (o *GetRemoteEngineClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get remote engine cluster internal server error response has a 4xx status code
func (o *GetRemoteEngineClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get remote engine cluster internal server error response has a 5xx status code
func (o *GetRemoteEngineClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get remote engine cluster internal server error response a status code equal to that given
func (o *GetRemoteEngineClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRemoteEngineClusterInternalServerError) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRemoteEngineClusterInternalServerError) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engine-clusters/{clusterId}][%d] getRemoteEngineClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRemoteEngineClusterInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRemoteEngineClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
