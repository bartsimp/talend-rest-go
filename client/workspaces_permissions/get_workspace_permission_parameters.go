// Code generated by go-swagger; DO NOT EDIT.

package workspaces_permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetWorkspacePermissionParams creates a new GetWorkspacePermissionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetWorkspacePermissionParams() *GetWorkspacePermissionParams {
	return &GetWorkspacePermissionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetWorkspacePermissionParamsWithTimeout creates a new GetWorkspacePermissionParams object
// with the ability to set a timeout on a request.
func NewGetWorkspacePermissionParamsWithTimeout(timeout time.Duration) *GetWorkspacePermissionParams {
	return &GetWorkspacePermissionParams{
		timeout: timeout,
	}
}

// NewGetWorkspacePermissionParamsWithContext creates a new GetWorkspacePermissionParams object
// with the ability to set a context for a request.
func NewGetWorkspacePermissionParamsWithContext(ctx context.Context) *GetWorkspacePermissionParams {
	return &GetWorkspacePermissionParams{
		Context: ctx,
	}
}

// NewGetWorkspacePermissionParamsWithHTTPClient creates a new GetWorkspacePermissionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetWorkspacePermissionParamsWithHTTPClient(client *http.Client) *GetWorkspacePermissionParams {
	return &GetWorkspacePermissionParams{
		HTTPClient: client,
	}
}

/*
GetWorkspacePermissionParams contains all the parameters to send to the API endpoint

	for the get workspace permission operation.

	Typically these are written to a http.Request.
*/
type GetWorkspacePermissionParams struct {

	/* UserID.

	   The user for which rights will be applied. Example Value: b9e10a3f-9d68-44bb-862f-b2aa56dc7191
	*/
	UserID string

	/* WorkspaceID.

	   The workspace where rights will be applied. Example Value: 6089228181ef4423736e47a9
	*/
	WorkspaceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get workspace permission params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetWorkspacePermissionParams) WithDefaults() *GetWorkspacePermissionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get workspace permission params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetWorkspacePermissionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get workspace permission params
func (o *GetWorkspacePermissionParams) WithTimeout(timeout time.Duration) *GetWorkspacePermissionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get workspace permission params
func (o *GetWorkspacePermissionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get workspace permission params
func (o *GetWorkspacePermissionParams) WithContext(ctx context.Context) *GetWorkspacePermissionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get workspace permission params
func (o *GetWorkspacePermissionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get workspace permission params
func (o *GetWorkspacePermissionParams) WithHTTPClient(client *http.Client) *GetWorkspacePermissionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get workspace permission params
func (o *GetWorkspacePermissionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserID adds the userID to the get workspace permission params
func (o *GetWorkspacePermissionParams) WithUserID(userID string) *GetWorkspacePermissionParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the get workspace permission params
func (o *GetWorkspacePermissionParams) SetUserID(userID string) {
	o.UserID = userID
}

// WithWorkspaceID adds the workspaceID to the get workspace permission params
func (o *GetWorkspacePermissionParams) WithWorkspaceID(workspaceID string) *GetWorkspacePermissionParams {
	o.SetWorkspaceID(workspaceID)
	return o
}

// SetWorkspaceID adds the workspaceId to the get workspace permission params
func (o *GetWorkspacePermissionParams) SetWorkspaceID(workspaceID string) {
	o.WorkspaceID = workspaceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetWorkspacePermissionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	// path param workspaceId
	if err := r.SetPathParam("workspaceId", o.WorkspaceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
