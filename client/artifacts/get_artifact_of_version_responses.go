// Code generated by go-swagger; DO NOT EDIT.

package artifacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetArtifactOfVersionReader is a Reader for the GetArtifactOfVersion structure.
type GetArtifactOfVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactOfVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactOfVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArtifactOfVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArtifactOfVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArtifactOfVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactOfVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArtifactOfVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArtifactOfVersionOK creates a GetArtifactOfVersionOK with default headers values
func NewGetArtifactOfVersionOK() *GetArtifactOfVersionOK {
	return &GetArtifactOfVersionOK{}
}

/*
GetArtifactOfVersionOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactOfVersionOK struct {
	Payload *models.ArtifactVersion
}

// IsSuccess returns true when this get artifact of version o k response has a 2xx status code
func (o *GetArtifactOfVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifact of version o k response has a 3xx status code
func (o *GetArtifactOfVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact of version o k response has a 4xx status code
func (o *GetArtifactOfVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact of version o k response has a 5xx status code
func (o *GetArtifactOfVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact of version o k response a status code equal to that given
func (o *GetArtifactOfVersionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetArtifactOfVersionOK) Error() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionOK  %+v", 200, o.Payload)
}

func (o *GetArtifactOfVersionOK) String() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionOK  %+v", 200, o.Payload)
}

func (o *GetArtifactOfVersionOK) GetPayload() *models.ArtifactVersion {
	return o.Payload
}

func (o *GetArtifactOfVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactOfVersionBadRequest creates a GetArtifactOfVersionBadRequest with default headers values
func NewGetArtifactOfVersionBadRequest() *GetArtifactOfVersionBadRequest {
	return &GetArtifactOfVersionBadRequest{}
}

/*
GetArtifactOfVersionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArtifactOfVersionBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifact of version bad request response has a 2xx status code
func (o *GetArtifactOfVersionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact of version bad request response has a 3xx status code
func (o *GetArtifactOfVersionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact of version bad request response has a 4xx status code
func (o *GetArtifactOfVersionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact of version bad request response has a 5xx status code
func (o *GetArtifactOfVersionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact of version bad request response a status code equal to that given
func (o *GetArtifactOfVersionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetArtifactOfVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetArtifactOfVersionBadRequest) String() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetArtifactOfVersionBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactOfVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactOfVersionUnauthorized creates a GetArtifactOfVersionUnauthorized with default headers values
func NewGetArtifactOfVersionUnauthorized() *GetArtifactOfVersionUnauthorized {
	return &GetArtifactOfVersionUnauthorized{}
}

/*
GetArtifactOfVersionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetArtifactOfVersionUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifact of version unauthorized response has a 2xx status code
func (o *GetArtifactOfVersionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact of version unauthorized response has a 3xx status code
func (o *GetArtifactOfVersionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact of version unauthorized response has a 4xx status code
func (o *GetArtifactOfVersionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact of version unauthorized response has a 5xx status code
func (o *GetArtifactOfVersionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact of version unauthorized response a status code equal to that given
func (o *GetArtifactOfVersionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetArtifactOfVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArtifactOfVersionUnauthorized) String() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArtifactOfVersionUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactOfVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactOfVersionForbidden creates a GetArtifactOfVersionForbidden with default headers values
func NewGetArtifactOfVersionForbidden() *GetArtifactOfVersionForbidden {
	return &GetArtifactOfVersionForbidden{}
}

/*
GetArtifactOfVersionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetArtifactOfVersionForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifact of version forbidden response has a 2xx status code
func (o *GetArtifactOfVersionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact of version forbidden response has a 3xx status code
func (o *GetArtifactOfVersionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact of version forbidden response has a 4xx status code
func (o *GetArtifactOfVersionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact of version forbidden response has a 5xx status code
func (o *GetArtifactOfVersionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact of version forbidden response a status code equal to that given
func (o *GetArtifactOfVersionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetArtifactOfVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionForbidden  %+v", 403, o.Payload)
}

func (o *GetArtifactOfVersionForbidden) String() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionForbidden  %+v", 403, o.Payload)
}

func (o *GetArtifactOfVersionForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactOfVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactOfVersionNotFound creates a GetArtifactOfVersionNotFound with default headers values
func NewGetArtifactOfVersionNotFound() *GetArtifactOfVersionNotFound {
	return &GetArtifactOfVersionNotFound{}
}

/*
GetArtifactOfVersionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactOfVersionNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifact of version not found response has a 2xx status code
func (o *GetArtifactOfVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact of version not found response has a 3xx status code
func (o *GetArtifactOfVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact of version not found response has a 4xx status code
func (o *GetArtifactOfVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact of version not found response has a 5xx status code
func (o *GetArtifactOfVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact of version not found response a status code equal to that given
func (o *GetArtifactOfVersionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetArtifactOfVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetArtifactOfVersionNotFound) String() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetArtifactOfVersionNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactOfVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactOfVersionInternalServerError creates a GetArtifactOfVersionInternalServerError with default headers values
func NewGetArtifactOfVersionInternalServerError() *GetArtifactOfVersionInternalServerError {
	return &GetArtifactOfVersionInternalServerError{}
}

/*
GetArtifactOfVersionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetArtifactOfVersionInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifact of version internal server error response has a 2xx status code
func (o *GetArtifactOfVersionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact of version internal server error response has a 3xx status code
func (o *GetArtifactOfVersionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact of version internal server error response has a 4xx status code
func (o *GetArtifactOfVersionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact of version internal server error response has a 5xx status code
func (o *GetArtifactOfVersionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get artifact of version internal server error response a status code equal to that given
func (o *GetArtifactOfVersionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetArtifactOfVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArtifactOfVersionInternalServerError) String() string {
	return fmt.Sprintf("[GET /artifacts/{id}/versions/{version}][%d] getArtifactOfVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArtifactOfVersionInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactOfVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
