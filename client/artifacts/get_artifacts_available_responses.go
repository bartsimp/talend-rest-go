// Code generated by go-swagger; DO NOT EDIT.

package artifacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetArtifactsAvailableReader is a Reader for the GetArtifactsAvailable structure.
type GetArtifactsAvailableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactsAvailableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactsAvailableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArtifactsAvailableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArtifactsAvailableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArtifactsAvailableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactsAvailableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArtifactsAvailableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetArtifactsAvailableOK creates a GetArtifactsAvailableOK with default headers values
func NewGetArtifactsAvailableOK() *GetArtifactsAvailableOK {
	return &GetArtifactsAvailableOK{}
}

/*
GetArtifactsAvailableOK describes a response with status code 200, with default header values.

Successful response
*/
type GetArtifactsAvailableOK struct {
	Payload *models.Page
}

// IsSuccess returns true when this get artifacts available o k response has a 2xx status code
func (o *GetArtifactsAvailableOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifacts available o k response has a 3xx status code
func (o *GetArtifactsAvailableOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts available o k response has a 4xx status code
func (o *GetArtifactsAvailableOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifacts available o k response has a 5xx status code
func (o *GetArtifactsAvailableOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts available o k response a status code equal to that given
func (o *GetArtifactsAvailableOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetArtifactsAvailableOK) Error() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableOK  %+v", 200, o.Payload)
}

func (o *GetArtifactsAvailableOK) String() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableOK  %+v", 200, o.Payload)
}

func (o *GetArtifactsAvailableOK) GetPayload() *models.Page {
	return o.Payload
}

func (o *GetArtifactsAvailableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Page)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsAvailableBadRequest creates a GetArtifactsAvailableBadRequest with default headers values
func NewGetArtifactsAvailableBadRequest() *GetArtifactsAvailableBadRequest {
	return &GetArtifactsAvailableBadRequest{}
}

/*
GetArtifactsAvailableBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArtifactsAvailableBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifacts available bad request response has a 2xx status code
func (o *GetArtifactsAvailableBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts available bad request response has a 3xx status code
func (o *GetArtifactsAvailableBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts available bad request response has a 4xx status code
func (o *GetArtifactsAvailableBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts available bad request response has a 5xx status code
func (o *GetArtifactsAvailableBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts available bad request response a status code equal to that given
func (o *GetArtifactsAvailableBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetArtifactsAvailableBadRequest) Error() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableBadRequest  %+v", 400, o.Payload)
}

func (o *GetArtifactsAvailableBadRequest) String() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableBadRequest  %+v", 400, o.Payload)
}

func (o *GetArtifactsAvailableBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactsAvailableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsAvailableUnauthorized creates a GetArtifactsAvailableUnauthorized with default headers values
func NewGetArtifactsAvailableUnauthorized() *GetArtifactsAvailableUnauthorized {
	return &GetArtifactsAvailableUnauthorized{}
}

/*
GetArtifactsAvailableUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetArtifactsAvailableUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifacts available unauthorized response has a 2xx status code
func (o *GetArtifactsAvailableUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts available unauthorized response has a 3xx status code
func (o *GetArtifactsAvailableUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts available unauthorized response has a 4xx status code
func (o *GetArtifactsAvailableUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts available unauthorized response has a 5xx status code
func (o *GetArtifactsAvailableUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts available unauthorized response a status code equal to that given
func (o *GetArtifactsAvailableUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetArtifactsAvailableUnauthorized) Error() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArtifactsAvailableUnauthorized) String() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableUnauthorized  %+v", 401, o.Payload)
}

func (o *GetArtifactsAvailableUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactsAvailableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsAvailableForbidden creates a GetArtifactsAvailableForbidden with default headers values
func NewGetArtifactsAvailableForbidden() *GetArtifactsAvailableForbidden {
	return &GetArtifactsAvailableForbidden{}
}

/*
GetArtifactsAvailableForbidden describes a response with status code 403, with default header values.

Forbidden - no permissions to access resource
*/
type GetArtifactsAvailableForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifacts available forbidden response has a 2xx status code
func (o *GetArtifactsAvailableForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts available forbidden response has a 3xx status code
func (o *GetArtifactsAvailableForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts available forbidden response has a 4xx status code
func (o *GetArtifactsAvailableForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts available forbidden response has a 5xx status code
func (o *GetArtifactsAvailableForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts available forbidden response a status code equal to that given
func (o *GetArtifactsAvailableForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetArtifactsAvailableForbidden) Error() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableForbidden  %+v", 403, o.Payload)
}

func (o *GetArtifactsAvailableForbidden) String() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableForbidden  %+v", 403, o.Payload)
}

func (o *GetArtifactsAvailableForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactsAvailableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsAvailableNotFound creates a GetArtifactsAvailableNotFound with default headers values
func NewGetArtifactsAvailableNotFound() *GetArtifactsAvailableNotFound {
	return &GetArtifactsAvailableNotFound{}
}

/*
GetArtifactsAvailableNotFound describes a response with status code 404, with default header values.

Not found - resource not found
*/
type GetArtifactsAvailableNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifacts available not found response has a 2xx status code
func (o *GetArtifactsAvailableNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts available not found response has a 3xx status code
func (o *GetArtifactsAvailableNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts available not found response has a 4xx status code
func (o *GetArtifactsAvailableNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts available not found response has a 5xx status code
func (o *GetArtifactsAvailableNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts available not found response a status code equal to that given
func (o *GetArtifactsAvailableNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetArtifactsAvailableNotFound) Error() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableNotFound  %+v", 404, o.Payload)
}

func (o *GetArtifactsAvailableNotFound) String() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableNotFound  %+v", 404, o.Payload)
}

func (o *GetArtifactsAvailableNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactsAvailableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsAvailableInternalServerError creates a GetArtifactsAvailableInternalServerError with default headers values
func NewGetArtifactsAvailableInternalServerError() *GetArtifactsAvailableInternalServerError {
	return &GetArtifactsAvailableInternalServerError{}
}

/*
GetArtifactsAvailableInternalServerError describes a response with status code 500, with default header values.

Server error - something went wrong on server side
*/
type GetArtifactsAvailableInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get artifacts available internal server error response has a 2xx status code
func (o *GetArtifactsAvailableInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts available internal server error response has a 3xx status code
func (o *GetArtifactsAvailableInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts available internal server error response has a 4xx status code
func (o *GetArtifactsAvailableInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifacts available internal server error response has a 5xx status code
func (o *GetArtifactsAvailableInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get artifacts available internal server error response a status code equal to that given
func (o *GetArtifactsAvailableInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetArtifactsAvailableInternalServerError) Error() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArtifactsAvailableInternalServerError) String() string {
	return fmt.Sprintf("[GET /artifacts][%d] getArtifactsAvailableInternalServerError  %+v", 500, o.Payload)
}

func (o *GetArtifactsAvailableInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetArtifactsAvailableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
