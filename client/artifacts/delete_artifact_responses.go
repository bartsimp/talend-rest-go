// Code generated by go-swagger; DO NOT EDIT.

package artifacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// DeleteArtifactReader is a Reader for the DeleteArtifact structure.
type DeleteArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteArtifactNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteArtifactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteArtifactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteArtifactForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteArtifactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteArtifactConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteArtifactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteArtifactNoContent creates a DeleteArtifactNoContent with default headers values
func NewDeleteArtifactNoContent() *DeleteArtifactNoContent {
	return &DeleteArtifactNoContent{}
}

/*
DeleteArtifactNoContent describes a response with status code 204, with default header values.

No content
*/
type DeleteArtifactNoContent struct {
}

// IsSuccess returns true when this delete artifact no content response has a 2xx status code
func (o *DeleteArtifactNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete artifact no content response has a 3xx status code
func (o *DeleteArtifactNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact no content response has a 4xx status code
func (o *DeleteArtifactNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete artifact no content response has a 5xx status code
func (o *DeleteArtifactNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact no content response a status code equal to that given
func (o *DeleteArtifactNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteArtifactNoContent) Error() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactNoContent ", 204)
}

func (o *DeleteArtifactNoContent) String() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactNoContent ", 204)
}

func (o *DeleteArtifactNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteArtifactBadRequest creates a DeleteArtifactBadRequest with default headers values
func NewDeleteArtifactBadRequest() *DeleteArtifactBadRequest {
	return &DeleteArtifactBadRequest{}
}

/*
DeleteArtifactBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteArtifactBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete artifact bad request response has a 2xx status code
func (o *DeleteArtifactBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact bad request response has a 3xx status code
func (o *DeleteArtifactBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact bad request response has a 4xx status code
func (o *DeleteArtifactBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact bad request response has a 5xx status code
func (o *DeleteArtifactBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact bad request response a status code equal to that given
func (o *DeleteArtifactBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteArtifactBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteArtifactBadRequest) String() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteArtifactBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteArtifactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactUnauthorized creates a DeleteArtifactUnauthorized with default headers values
func NewDeleteArtifactUnauthorized() *DeleteArtifactUnauthorized {
	return &DeleteArtifactUnauthorized{}
}

/*
DeleteArtifactUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteArtifactUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete artifact unauthorized response has a 2xx status code
func (o *DeleteArtifactUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact unauthorized response has a 3xx status code
func (o *DeleteArtifactUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact unauthorized response has a 4xx status code
func (o *DeleteArtifactUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact unauthorized response has a 5xx status code
func (o *DeleteArtifactUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact unauthorized response a status code equal to that given
func (o *DeleteArtifactUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteArtifactUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteArtifactUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteArtifactUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteArtifactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactForbidden creates a DeleteArtifactForbidden with default headers values
func NewDeleteArtifactForbidden() *DeleteArtifactForbidden {
	return &DeleteArtifactForbidden{}
}

/*
DeleteArtifactForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteArtifactForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete artifact forbidden response has a 2xx status code
func (o *DeleteArtifactForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact forbidden response has a 3xx status code
func (o *DeleteArtifactForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact forbidden response has a 4xx status code
func (o *DeleteArtifactForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact forbidden response has a 5xx status code
func (o *DeleteArtifactForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact forbidden response a status code equal to that given
func (o *DeleteArtifactForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteArtifactForbidden) Error() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactForbidden  %+v", 403, o.Payload)
}

func (o *DeleteArtifactForbidden) String() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactForbidden  %+v", 403, o.Payload)
}

func (o *DeleteArtifactForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteArtifactForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactNotFound creates a DeleteArtifactNotFound with default headers values
func NewDeleteArtifactNotFound() *DeleteArtifactNotFound {
	return &DeleteArtifactNotFound{}
}

/*
DeleteArtifactNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteArtifactNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete artifact not found response has a 2xx status code
func (o *DeleteArtifactNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact not found response has a 3xx status code
func (o *DeleteArtifactNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact not found response has a 4xx status code
func (o *DeleteArtifactNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact not found response has a 5xx status code
func (o *DeleteArtifactNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact not found response a status code equal to that given
func (o *DeleteArtifactNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteArtifactNotFound) Error() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactNotFound  %+v", 404, o.Payload)
}

func (o *DeleteArtifactNotFound) String() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactNotFound  %+v", 404, o.Payload)
}

func (o *DeleteArtifactNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteArtifactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactConflict creates a DeleteArtifactConflict with default headers values
func NewDeleteArtifactConflict() *DeleteArtifactConflict {
	return &DeleteArtifactConflict{}
}

/*
DeleteArtifactConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteArtifactConflict struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete artifact conflict response has a 2xx status code
func (o *DeleteArtifactConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact conflict response has a 3xx status code
func (o *DeleteArtifactConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact conflict response has a 4xx status code
func (o *DeleteArtifactConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact conflict response has a 5xx status code
func (o *DeleteArtifactConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact conflict response a status code equal to that given
func (o *DeleteArtifactConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteArtifactConflict) Error() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactConflict  %+v", 409, o.Payload)
}

func (o *DeleteArtifactConflict) String() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactConflict  %+v", 409, o.Payload)
}

func (o *DeleteArtifactConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteArtifactConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactInternalServerError creates a DeleteArtifactInternalServerError with default headers values
func NewDeleteArtifactInternalServerError() *DeleteArtifactInternalServerError {
	return &DeleteArtifactInternalServerError{}
}

/*
DeleteArtifactInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteArtifactInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete artifact internal server error response has a 2xx status code
func (o *DeleteArtifactInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact internal server error response has a 3xx status code
func (o *DeleteArtifactInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact internal server error response has a 4xx status code
func (o *DeleteArtifactInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete artifact internal server error response has a 5xx status code
func (o *DeleteArtifactInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete artifact internal server error response a status code equal to that given
func (o *DeleteArtifactInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteArtifactInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteArtifactInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /artifacts/{id}][%d] deleteArtifactInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteArtifactInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteArtifactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
