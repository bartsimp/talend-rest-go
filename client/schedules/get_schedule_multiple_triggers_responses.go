// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetScheduleMultipleTriggersReader is a Reader for the GetScheduleMultipleTriggers structure.
type GetScheduleMultipleTriggersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScheduleMultipleTriggersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScheduleMultipleTriggersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScheduleMultipleTriggersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScheduleMultipleTriggersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScheduleMultipleTriggersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScheduleMultipleTriggersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScheduleMultipleTriggersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScheduleMultipleTriggersOK creates a GetScheduleMultipleTriggersOK with default headers values
func NewGetScheduleMultipleTriggersOK() *GetScheduleMultipleTriggersOK {
	return &GetScheduleMultipleTriggersOK{}
}

/*
GetScheduleMultipleTriggersOK describes a response with status code 200, with default header values.

OK
*/
type GetScheduleMultipleTriggersOK struct {
	Payload *models.Schedule
}

// IsSuccess returns true when this get schedule multiple triggers o k response has a 2xx status code
func (o *GetScheduleMultipleTriggersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get schedule multiple triggers o k response has a 3xx status code
func (o *GetScheduleMultipleTriggersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schedule multiple triggers o k response has a 4xx status code
func (o *GetScheduleMultipleTriggersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schedule multiple triggers o k response has a 5xx status code
func (o *GetScheduleMultipleTriggersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get schedule multiple triggers o k response a status code equal to that given
func (o *GetScheduleMultipleTriggersOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetScheduleMultipleTriggersOK) Error() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersOK  %+v", 200, o.Payload)
}

func (o *GetScheduleMultipleTriggersOK) String() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersOK  %+v", 200, o.Payload)
}

func (o *GetScheduleMultipleTriggersOK) GetPayload() *models.Schedule {
	return o.Payload
}

func (o *GetScheduleMultipleTriggersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Schedule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScheduleMultipleTriggersBadRequest creates a GetScheduleMultipleTriggersBadRequest with default headers values
func NewGetScheduleMultipleTriggersBadRequest() *GetScheduleMultipleTriggersBadRequest {
	return &GetScheduleMultipleTriggersBadRequest{}
}

/*
GetScheduleMultipleTriggersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetScheduleMultipleTriggersBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get schedule multiple triggers bad request response has a 2xx status code
func (o *GetScheduleMultipleTriggersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schedule multiple triggers bad request response has a 3xx status code
func (o *GetScheduleMultipleTriggersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schedule multiple triggers bad request response has a 4xx status code
func (o *GetScheduleMultipleTriggersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schedule multiple triggers bad request response has a 5xx status code
func (o *GetScheduleMultipleTriggersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get schedule multiple triggers bad request response a status code equal to that given
func (o *GetScheduleMultipleTriggersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetScheduleMultipleTriggersBadRequest) Error() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersBadRequest  %+v", 400, o.Payload)
}

func (o *GetScheduleMultipleTriggersBadRequest) String() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersBadRequest  %+v", 400, o.Payload)
}

func (o *GetScheduleMultipleTriggersBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetScheduleMultipleTriggersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScheduleMultipleTriggersUnauthorized creates a GetScheduleMultipleTriggersUnauthorized with default headers values
func NewGetScheduleMultipleTriggersUnauthorized() *GetScheduleMultipleTriggersUnauthorized {
	return &GetScheduleMultipleTriggersUnauthorized{}
}

/*
GetScheduleMultipleTriggersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetScheduleMultipleTriggersUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get schedule multiple triggers unauthorized response has a 2xx status code
func (o *GetScheduleMultipleTriggersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schedule multiple triggers unauthorized response has a 3xx status code
func (o *GetScheduleMultipleTriggersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schedule multiple triggers unauthorized response has a 4xx status code
func (o *GetScheduleMultipleTriggersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schedule multiple triggers unauthorized response has a 5xx status code
func (o *GetScheduleMultipleTriggersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get schedule multiple triggers unauthorized response a status code equal to that given
func (o *GetScheduleMultipleTriggersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetScheduleMultipleTriggersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScheduleMultipleTriggersUnauthorized) String() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScheduleMultipleTriggersUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetScheduleMultipleTriggersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScheduleMultipleTriggersForbidden creates a GetScheduleMultipleTriggersForbidden with default headers values
func NewGetScheduleMultipleTriggersForbidden() *GetScheduleMultipleTriggersForbidden {
	return &GetScheduleMultipleTriggersForbidden{}
}

/*
GetScheduleMultipleTriggersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetScheduleMultipleTriggersForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get schedule multiple triggers forbidden response has a 2xx status code
func (o *GetScheduleMultipleTriggersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schedule multiple triggers forbidden response has a 3xx status code
func (o *GetScheduleMultipleTriggersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schedule multiple triggers forbidden response has a 4xx status code
func (o *GetScheduleMultipleTriggersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schedule multiple triggers forbidden response has a 5xx status code
func (o *GetScheduleMultipleTriggersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get schedule multiple triggers forbidden response a status code equal to that given
func (o *GetScheduleMultipleTriggersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetScheduleMultipleTriggersForbidden) Error() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersForbidden  %+v", 403, o.Payload)
}

func (o *GetScheduleMultipleTriggersForbidden) String() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersForbidden  %+v", 403, o.Payload)
}

func (o *GetScheduleMultipleTriggersForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetScheduleMultipleTriggersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScheduleMultipleTriggersNotFound creates a GetScheduleMultipleTriggersNotFound with default headers values
func NewGetScheduleMultipleTriggersNotFound() *GetScheduleMultipleTriggersNotFound {
	return &GetScheduleMultipleTriggersNotFound{}
}

/*
GetScheduleMultipleTriggersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetScheduleMultipleTriggersNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get schedule multiple triggers not found response has a 2xx status code
func (o *GetScheduleMultipleTriggersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schedule multiple triggers not found response has a 3xx status code
func (o *GetScheduleMultipleTriggersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schedule multiple triggers not found response has a 4xx status code
func (o *GetScheduleMultipleTriggersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schedule multiple triggers not found response has a 5xx status code
func (o *GetScheduleMultipleTriggersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get schedule multiple triggers not found response a status code equal to that given
func (o *GetScheduleMultipleTriggersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetScheduleMultipleTriggersNotFound) Error() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersNotFound  %+v", 404, o.Payload)
}

func (o *GetScheduleMultipleTriggersNotFound) String() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersNotFound  %+v", 404, o.Payload)
}

func (o *GetScheduleMultipleTriggersNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetScheduleMultipleTriggersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScheduleMultipleTriggersInternalServerError creates a GetScheduleMultipleTriggersInternalServerError with default headers values
func NewGetScheduleMultipleTriggersInternalServerError() *GetScheduleMultipleTriggersInternalServerError {
	return &GetScheduleMultipleTriggersInternalServerError{}
}

/*
GetScheduleMultipleTriggersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetScheduleMultipleTriggersInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get schedule multiple triggers internal server error response has a 2xx status code
func (o *GetScheduleMultipleTriggersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schedule multiple triggers internal server error response has a 3xx status code
func (o *GetScheduleMultipleTriggersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schedule multiple triggers internal server error response has a 4xx status code
func (o *GetScheduleMultipleTriggersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schedule multiple triggers internal server error response has a 5xx status code
func (o *GetScheduleMultipleTriggersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get schedule multiple triggers internal server error response a status code equal to that given
func (o *GetScheduleMultipleTriggersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetScheduleMultipleTriggersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScheduleMultipleTriggersInternalServerError) String() string {
	return fmt.Sprintf("[GET /schedules/{scheduleId}][%d] getScheduleMultipleTriggersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScheduleMultipleTriggersInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetScheduleMultipleTriggersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
