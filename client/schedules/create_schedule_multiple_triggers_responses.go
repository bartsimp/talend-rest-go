// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// CreateScheduleMultipleTriggersReader is a Reader for the CreateScheduleMultipleTriggers structure.
type CreateScheduleMultipleTriggersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateScheduleMultipleTriggersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateScheduleMultipleTriggersCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateScheduleMultipleTriggersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateScheduleMultipleTriggersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateScheduleMultipleTriggersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateScheduleMultipleTriggersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateScheduleMultipleTriggersCreated creates a CreateScheduleMultipleTriggersCreated with default headers values
func NewCreateScheduleMultipleTriggersCreated() *CreateScheduleMultipleTriggersCreated {
	return &CreateScheduleMultipleTriggersCreated{}
}

/*
CreateScheduleMultipleTriggersCreated describes a response with status code 201, with default header values.

Created
*/
type CreateScheduleMultipleTriggersCreated struct {
}

// IsSuccess returns true when this create schedule multiple triggers created response has a 2xx status code
func (o *CreateScheduleMultipleTriggersCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create schedule multiple triggers created response has a 3xx status code
func (o *CreateScheduleMultipleTriggersCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create schedule multiple triggers created response has a 4xx status code
func (o *CreateScheduleMultipleTriggersCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create schedule multiple triggers created response has a 5xx status code
func (o *CreateScheduleMultipleTriggersCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create schedule multiple triggers created response a status code equal to that given
func (o *CreateScheduleMultipleTriggersCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateScheduleMultipleTriggersCreated) Error() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersCreated ", 201)
}

func (o *CreateScheduleMultipleTriggersCreated) String() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersCreated ", 201)
}

func (o *CreateScheduleMultipleTriggersCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateScheduleMultipleTriggersBadRequest creates a CreateScheduleMultipleTriggersBadRequest with default headers values
func NewCreateScheduleMultipleTriggersBadRequest() *CreateScheduleMultipleTriggersBadRequest {
	return &CreateScheduleMultipleTriggersBadRequest{}
}

/*
CreateScheduleMultipleTriggersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateScheduleMultipleTriggersBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create schedule multiple triggers bad request response has a 2xx status code
func (o *CreateScheduleMultipleTriggersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create schedule multiple triggers bad request response has a 3xx status code
func (o *CreateScheduleMultipleTriggersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create schedule multiple triggers bad request response has a 4xx status code
func (o *CreateScheduleMultipleTriggersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create schedule multiple triggers bad request response has a 5xx status code
func (o *CreateScheduleMultipleTriggersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create schedule multiple triggers bad request response a status code equal to that given
func (o *CreateScheduleMultipleTriggersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateScheduleMultipleTriggersBadRequest) Error() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersBadRequest  %+v", 400, o.Payload)
}

func (o *CreateScheduleMultipleTriggersBadRequest) String() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersBadRequest  %+v", 400, o.Payload)
}

func (o *CreateScheduleMultipleTriggersBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateScheduleMultipleTriggersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateScheduleMultipleTriggersUnauthorized creates a CreateScheduleMultipleTriggersUnauthorized with default headers values
func NewCreateScheduleMultipleTriggersUnauthorized() *CreateScheduleMultipleTriggersUnauthorized {
	return &CreateScheduleMultipleTriggersUnauthorized{}
}

/*
CreateScheduleMultipleTriggersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateScheduleMultipleTriggersUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create schedule multiple triggers unauthorized response has a 2xx status code
func (o *CreateScheduleMultipleTriggersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create schedule multiple triggers unauthorized response has a 3xx status code
func (o *CreateScheduleMultipleTriggersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create schedule multiple triggers unauthorized response has a 4xx status code
func (o *CreateScheduleMultipleTriggersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create schedule multiple triggers unauthorized response has a 5xx status code
func (o *CreateScheduleMultipleTriggersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create schedule multiple triggers unauthorized response a status code equal to that given
func (o *CreateScheduleMultipleTriggersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateScheduleMultipleTriggersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateScheduleMultipleTriggersUnauthorized) String() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateScheduleMultipleTriggersUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateScheduleMultipleTriggersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateScheduleMultipleTriggersForbidden creates a CreateScheduleMultipleTriggersForbidden with default headers values
func NewCreateScheduleMultipleTriggersForbidden() *CreateScheduleMultipleTriggersForbidden {
	return &CreateScheduleMultipleTriggersForbidden{}
}

/*
CreateScheduleMultipleTriggersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateScheduleMultipleTriggersForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create schedule multiple triggers forbidden response has a 2xx status code
func (o *CreateScheduleMultipleTriggersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create schedule multiple triggers forbidden response has a 3xx status code
func (o *CreateScheduleMultipleTriggersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create schedule multiple triggers forbidden response has a 4xx status code
func (o *CreateScheduleMultipleTriggersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create schedule multiple triggers forbidden response has a 5xx status code
func (o *CreateScheduleMultipleTriggersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create schedule multiple triggers forbidden response a status code equal to that given
func (o *CreateScheduleMultipleTriggersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateScheduleMultipleTriggersForbidden) Error() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersForbidden  %+v", 403, o.Payload)
}

func (o *CreateScheduleMultipleTriggersForbidden) String() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersForbidden  %+v", 403, o.Payload)
}

func (o *CreateScheduleMultipleTriggersForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateScheduleMultipleTriggersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateScheduleMultipleTriggersInternalServerError creates a CreateScheduleMultipleTriggersInternalServerError with default headers values
func NewCreateScheduleMultipleTriggersInternalServerError() *CreateScheduleMultipleTriggersInternalServerError {
	return &CreateScheduleMultipleTriggersInternalServerError{}
}

/*
CreateScheduleMultipleTriggersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateScheduleMultipleTriggersInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create schedule multiple triggers internal server error response has a 2xx status code
func (o *CreateScheduleMultipleTriggersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create schedule multiple triggers internal server error response has a 3xx status code
func (o *CreateScheduleMultipleTriggersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create schedule multiple triggers internal server error response has a 4xx status code
func (o *CreateScheduleMultipleTriggersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create schedule multiple triggers internal server error response has a 5xx status code
func (o *CreateScheduleMultipleTriggersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create schedule multiple triggers internal server error response a status code equal to that given
func (o *CreateScheduleMultipleTriggersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateScheduleMultipleTriggersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateScheduleMultipleTriggersInternalServerError) String() string {
	return fmt.Sprintf("[POST /schedules][%d] createScheduleMultipleTriggersInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateScheduleMultipleTriggersInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateScheduleMultipleTriggersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
