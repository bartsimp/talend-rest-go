// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// CloneScheduleMultipleTriggersReader is a Reader for the CloneScheduleMultipleTriggers structure.
type CloneScheduleMultipleTriggersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloneScheduleMultipleTriggersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCloneScheduleMultipleTriggersCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloneScheduleMultipleTriggersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCloneScheduleMultipleTriggersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloneScheduleMultipleTriggersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCloneScheduleMultipleTriggersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloneScheduleMultipleTriggersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCloneScheduleMultipleTriggersCreated creates a CloneScheduleMultipleTriggersCreated with default headers values
func NewCloneScheduleMultipleTriggersCreated() *CloneScheduleMultipleTriggersCreated {
	return &CloneScheduleMultipleTriggersCreated{}
}

/*
CloneScheduleMultipleTriggersCreated describes a response with status code 201, with default header values.

Created
*/
type CloneScheduleMultipleTriggersCreated struct {
}

// IsSuccess returns true when this clone schedule multiple triggers created response has a 2xx status code
func (o *CloneScheduleMultipleTriggersCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this clone schedule multiple triggers created response has a 3xx status code
func (o *CloneScheduleMultipleTriggersCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone schedule multiple triggers created response has a 4xx status code
func (o *CloneScheduleMultipleTriggersCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this clone schedule multiple triggers created response has a 5xx status code
func (o *CloneScheduleMultipleTriggersCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this clone schedule multiple triggers created response a status code equal to that given
func (o *CloneScheduleMultipleTriggersCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CloneScheduleMultipleTriggersCreated) Error() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersCreated ", 201)
}

func (o *CloneScheduleMultipleTriggersCreated) String() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersCreated ", 201)
}

func (o *CloneScheduleMultipleTriggersCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCloneScheduleMultipleTriggersBadRequest creates a CloneScheduleMultipleTriggersBadRequest with default headers values
func NewCloneScheduleMultipleTriggersBadRequest() *CloneScheduleMultipleTriggersBadRequest {
	return &CloneScheduleMultipleTriggersBadRequest{}
}

/*
CloneScheduleMultipleTriggersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloneScheduleMultipleTriggersBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this clone schedule multiple triggers bad request response has a 2xx status code
func (o *CloneScheduleMultipleTriggersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this clone schedule multiple triggers bad request response has a 3xx status code
func (o *CloneScheduleMultipleTriggersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone schedule multiple triggers bad request response has a 4xx status code
func (o *CloneScheduleMultipleTriggersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this clone schedule multiple triggers bad request response has a 5xx status code
func (o *CloneScheduleMultipleTriggersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this clone schedule multiple triggers bad request response a status code equal to that given
func (o *CloneScheduleMultipleTriggersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CloneScheduleMultipleTriggersBadRequest) Error() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersBadRequest  %+v", 400, o.Payload)
}

func (o *CloneScheduleMultipleTriggersBadRequest) String() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersBadRequest  %+v", 400, o.Payload)
}

func (o *CloneScheduleMultipleTriggersBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CloneScheduleMultipleTriggersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneScheduleMultipleTriggersUnauthorized creates a CloneScheduleMultipleTriggersUnauthorized with default headers values
func NewCloneScheduleMultipleTriggersUnauthorized() *CloneScheduleMultipleTriggersUnauthorized {
	return &CloneScheduleMultipleTriggersUnauthorized{}
}

/*
CloneScheduleMultipleTriggersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CloneScheduleMultipleTriggersUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this clone schedule multiple triggers unauthorized response has a 2xx status code
func (o *CloneScheduleMultipleTriggersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this clone schedule multiple triggers unauthorized response has a 3xx status code
func (o *CloneScheduleMultipleTriggersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone schedule multiple triggers unauthorized response has a 4xx status code
func (o *CloneScheduleMultipleTriggersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this clone schedule multiple triggers unauthorized response has a 5xx status code
func (o *CloneScheduleMultipleTriggersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this clone schedule multiple triggers unauthorized response a status code equal to that given
func (o *CloneScheduleMultipleTriggersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CloneScheduleMultipleTriggersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersUnauthorized  %+v", 401, o.Payload)
}

func (o *CloneScheduleMultipleTriggersUnauthorized) String() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersUnauthorized  %+v", 401, o.Payload)
}

func (o *CloneScheduleMultipleTriggersUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CloneScheduleMultipleTriggersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneScheduleMultipleTriggersForbidden creates a CloneScheduleMultipleTriggersForbidden with default headers values
func NewCloneScheduleMultipleTriggersForbidden() *CloneScheduleMultipleTriggersForbidden {
	return &CloneScheduleMultipleTriggersForbidden{}
}

/*
CloneScheduleMultipleTriggersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloneScheduleMultipleTriggersForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this clone schedule multiple triggers forbidden response has a 2xx status code
func (o *CloneScheduleMultipleTriggersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this clone schedule multiple triggers forbidden response has a 3xx status code
func (o *CloneScheduleMultipleTriggersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone schedule multiple triggers forbidden response has a 4xx status code
func (o *CloneScheduleMultipleTriggersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this clone schedule multiple triggers forbidden response has a 5xx status code
func (o *CloneScheduleMultipleTriggersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this clone schedule multiple triggers forbidden response a status code equal to that given
func (o *CloneScheduleMultipleTriggersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CloneScheduleMultipleTriggersForbidden) Error() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersForbidden  %+v", 403, o.Payload)
}

func (o *CloneScheduleMultipleTriggersForbidden) String() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersForbidden  %+v", 403, o.Payload)
}

func (o *CloneScheduleMultipleTriggersForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CloneScheduleMultipleTriggersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneScheduleMultipleTriggersNotFound creates a CloneScheduleMultipleTriggersNotFound with default headers values
func NewCloneScheduleMultipleTriggersNotFound() *CloneScheduleMultipleTriggersNotFound {
	return &CloneScheduleMultipleTriggersNotFound{}
}

/*
CloneScheduleMultipleTriggersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CloneScheduleMultipleTriggersNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this clone schedule multiple triggers not found response has a 2xx status code
func (o *CloneScheduleMultipleTriggersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this clone schedule multiple triggers not found response has a 3xx status code
func (o *CloneScheduleMultipleTriggersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone schedule multiple triggers not found response has a 4xx status code
func (o *CloneScheduleMultipleTriggersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this clone schedule multiple triggers not found response has a 5xx status code
func (o *CloneScheduleMultipleTriggersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this clone schedule multiple triggers not found response a status code equal to that given
func (o *CloneScheduleMultipleTriggersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CloneScheduleMultipleTriggersNotFound) Error() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersNotFound  %+v", 404, o.Payload)
}

func (o *CloneScheduleMultipleTriggersNotFound) String() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersNotFound  %+v", 404, o.Payload)
}

func (o *CloneScheduleMultipleTriggersNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CloneScheduleMultipleTriggersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneScheduleMultipleTriggersInternalServerError creates a CloneScheduleMultipleTriggersInternalServerError with default headers values
func NewCloneScheduleMultipleTriggersInternalServerError() *CloneScheduleMultipleTriggersInternalServerError {
	return &CloneScheduleMultipleTriggersInternalServerError{}
}

/*
CloneScheduleMultipleTriggersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CloneScheduleMultipleTriggersInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this clone schedule multiple triggers internal server error response has a 2xx status code
func (o *CloneScheduleMultipleTriggersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this clone schedule multiple triggers internal server error response has a 3xx status code
func (o *CloneScheduleMultipleTriggersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone schedule multiple triggers internal server error response has a 4xx status code
func (o *CloneScheduleMultipleTriggersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this clone schedule multiple triggers internal server error response has a 5xx status code
func (o *CloneScheduleMultipleTriggersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this clone schedule multiple triggers internal server error response a status code equal to that given
func (o *CloneScheduleMultipleTriggersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CloneScheduleMultipleTriggersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersInternalServerError  %+v", 500, o.Payload)
}

func (o *CloneScheduleMultipleTriggersInternalServerError) String() string {
	return fmt.Sprintf("[POST /schedules/{scheduleId}][%d] cloneScheduleMultipleTriggersInternalServerError  %+v", 500, o.Payload)
}

func (o *CloneScheduleMultipleTriggersInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CloneScheduleMultipleTriggersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
