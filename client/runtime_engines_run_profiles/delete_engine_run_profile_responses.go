// Code generated by go-swagger; DO NOT EDIT.

package runtime_engines_run_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// DeleteEngineRunProfileReader is a Reader for the DeleteEngineRunProfile structure.
type DeleteEngineRunProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEngineRunProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteEngineRunProfileNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteEngineRunProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEngineRunProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteEngineRunProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEngineRunProfileNoContent creates a DeleteEngineRunProfileNoContent with default headers values
func NewDeleteEngineRunProfileNoContent() *DeleteEngineRunProfileNoContent {
	return &DeleteEngineRunProfileNoContent{}
}

/*
DeleteEngineRunProfileNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteEngineRunProfileNoContent struct {
}

// IsSuccess returns true when this delete engine run profile no content response has a 2xx status code
func (o *DeleteEngineRunProfileNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete engine run profile no content response has a 3xx status code
func (o *DeleteEngineRunProfileNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete engine run profile no content response has a 4xx status code
func (o *DeleteEngineRunProfileNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete engine run profile no content response has a 5xx status code
func (o *DeleteEngineRunProfileNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete engine run profile no content response a status code equal to that given
func (o *DeleteEngineRunProfileNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteEngineRunProfileNoContent) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] deleteEngineRunProfileNoContent ", 204)
}

func (o *DeleteEngineRunProfileNoContent) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] deleteEngineRunProfileNoContent ", 204)
}

func (o *DeleteEngineRunProfileNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEngineRunProfileForbidden creates a DeleteEngineRunProfileForbidden with default headers values
func NewDeleteEngineRunProfileForbidden() *DeleteEngineRunProfileForbidden {
	return &DeleteEngineRunProfileForbidden{}
}

/*
DeleteEngineRunProfileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteEngineRunProfileForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete engine run profile forbidden response has a 2xx status code
func (o *DeleteEngineRunProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete engine run profile forbidden response has a 3xx status code
func (o *DeleteEngineRunProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete engine run profile forbidden response has a 4xx status code
func (o *DeleteEngineRunProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete engine run profile forbidden response has a 5xx status code
func (o *DeleteEngineRunProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete engine run profile forbidden response a status code equal to that given
func (o *DeleteEngineRunProfileForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteEngineRunProfileForbidden) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] deleteEngineRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *DeleteEngineRunProfileForbidden) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] deleteEngineRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *DeleteEngineRunProfileForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteEngineRunProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEngineRunProfileNotFound creates a DeleteEngineRunProfileNotFound with default headers values
func NewDeleteEngineRunProfileNotFound() *DeleteEngineRunProfileNotFound {
	return &DeleteEngineRunProfileNotFound{}
}

/*
DeleteEngineRunProfileNotFound describes a response with status code 404, with default header values.

No run profile can be found
*/
type DeleteEngineRunProfileNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete engine run profile not found response has a 2xx status code
func (o *DeleteEngineRunProfileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete engine run profile not found response has a 3xx status code
func (o *DeleteEngineRunProfileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete engine run profile not found response has a 4xx status code
func (o *DeleteEngineRunProfileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete engine run profile not found response has a 5xx status code
func (o *DeleteEngineRunProfileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete engine run profile not found response a status code equal to that given
func (o *DeleteEngineRunProfileNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteEngineRunProfileNotFound) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] deleteEngineRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *DeleteEngineRunProfileNotFound) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] deleteEngineRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *DeleteEngineRunProfileNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteEngineRunProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEngineRunProfileInternalServerError creates a DeleteEngineRunProfileInternalServerError with default headers values
func NewDeleteEngineRunProfileInternalServerError() *DeleteEngineRunProfileInternalServerError {
	return &DeleteEngineRunProfileInternalServerError{}
}

/*
DeleteEngineRunProfileInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteEngineRunProfileInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete engine run profile internal server error response has a 2xx status code
func (o *DeleteEngineRunProfileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete engine run profile internal server error response has a 3xx status code
func (o *DeleteEngineRunProfileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete engine run profile internal server error response has a 4xx status code
func (o *DeleteEngineRunProfileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete engine run profile internal server error response has a 5xx status code
func (o *DeleteEngineRunProfileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete engine run profile internal server error response a status code equal to that given
func (o *DeleteEngineRunProfileInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteEngineRunProfileInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] deleteEngineRunProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteEngineRunProfileInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] deleteEngineRunProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteEngineRunProfileInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteEngineRunProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
