// Code generated by go-swagger; DO NOT EDIT.

package runtime_engines_run_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bartsimp/talend-rest-go/models"
)

// GetEngineRunProfileReader is a Reader for the GetEngineRunProfile structure.
type GetEngineRunProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEngineRunProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEngineRunProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetEngineRunProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEngineRunProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEngineRunProfileOK creates a GetEngineRunProfileOK with default headers values
func NewGetEngineRunProfileOK() *GetEngineRunProfileOK {
	return &GetEngineRunProfileOK{}
}

/*
GetEngineRunProfileOK describes a response with status code 200, with default header values.

OK
*/
type GetEngineRunProfileOK struct {
	Payload *models.RuntimeRunProfile
}

// IsSuccess returns true when this get engine run profile o k response has a 2xx status code
func (o *GetEngineRunProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get engine run profile o k response has a 3xx status code
func (o *GetEngineRunProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get engine run profile o k response has a 4xx status code
func (o *GetEngineRunProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get engine run profile o k response has a 5xx status code
func (o *GetEngineRunProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get engine run profile o k response a status code equal to that given
func (o *GetEngineRunProfileOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetEngineRunProfileOK) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] getEngineRunProfileOK  %+v", 200, o.Payload)
}

func (o *GetEngineRunProfileOK) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] getEngineRunProfileOK  %+v", 200, o.Payload)
}

func (o *GetEngineRunProfileOK) GetPayload() *models.RuntimeRunProfile {
	return o.Payload
}

func (o *GetEngineRunProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeRunProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEngineRunProfileForbidden creates a GetEngineRunProfileForbidden with default headers values
func NewGetEngineRunProfileForbidden() *GetEngineRunProfileForbidden {
	return &GetEngineRunProfileForbidden{}
}

/*
GetEngineRunProfileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEngineRunProfileForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get engine run profile forbidden response has a 2xx status code
func (o *GetEngineRunProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get engine run profile forbidden response has a 3xx status code
func (o *GetEngineRunProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get engine run profile forbidden response has a 4xx status code
func (o *GetEngineRunProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get engine run profile forbidden response has a 5xx status code
func (o *GetEngineRunProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get engine run profile forbidden response a status code equal to that given
func (o *GetEngineRunProfileForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetEngineRunProfileForbidden) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] getEngineRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *GetEngineRunProfileForbidden) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] getEngineRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *GetEngineRunProfileForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEngineRunProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEngineRunProfileNotFound creates a GetEngineRunProfileNotFound with default headers values
func NewGetEngineRunProfileNotFound() *GetEngineRunProfileNotFound {
	return &GetEngineRunProfileNotFound{}
}

/*
GetEngineRunProfileNotFound describes a response with status code 404, with default header values.

Run profile not found
*/
type GetEngineRunProfileNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get engine run profile not found response has a 2xx status code
func (o *GetEngineRunProfileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get engine run profile not found response has a 3xx status code
func (o *GetEngineRunProfileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get engine run profile not found response has a 4xx status code
func (o *GetEngineRunProfileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get engine run profile not found response has a 5xx status code
func (o *GetEngineRunProfileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get engine run profile not found response a status code equal to that given
func (o *GetEngineRunProfileNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetEngineRunProfileNotFound) Error() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] getEngineRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *GetEngineRunProfileNotFound) String() string {
	return fmt.Sprintf("[GET /runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}][%d] getEngineRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *GetEngineRunProfileNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetEngineRunProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
