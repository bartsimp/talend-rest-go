// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateEnvironmentRequest create environment request
//
// swagger:model CreateEnvironmentRequest
type CreateEnvironmentRequest struct {

	// Environment description
	// Example: environment detail description
	Description string `json:"description,omitempty"`

	// The max cloud containers count
	MaxCloudContainers int32 `json:"maxCloudContainers,omitempty"`

	// Environment name
	// Example: Development
	// Required: true
	Name *string `json:"name"`

	// The owner of the workspace
	// Required: true
	Owner *string `json:"owner"`

	// Workspace name
	// Example: Personal
	// Required: true
	WorkspaceName *string `json:"workspaceName"`
}

// Validate validates this create environment request
func (m *CreateEnvironmentRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOwner(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWorkspaceName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateEnvironmentRequest) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *CreateEnvironmentRequest) validateOwner(formats strfmt.Registry) error {

	if err := validate.Required("owner", "body", m.Owner); err != nil {
		return err
	}

	return nil
}

func (m *CreateEnvironmentRequest) validateWorkspaceName(formats strfmt.Registry) error {

	if err := validate.Required("workspaceName", "body", m.WorkspaceName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create environment request based on context it is used
func (m *CreateEnvironmentRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateEnvironmentRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateEnvironmentRequest) UnmarshalBinary(b []byte) error {
	var res CreateEnvironmentRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
