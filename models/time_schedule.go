// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TimeSchedule time schedule
//
// swagger:model TimeSchedule
type TimeSchedule struct {

	// Interval end timestamp, required only if type of schedule at times equal to AT_INTERVALS
	// Example: 23:00
	EndTime string `json:"endTime,omitempty"`

	// Duration of interval in minutes, required only if type of schedule at times equal to AT_INTERVALS
	// Example: 10
	Interval int32 `json:"interval,omitempty"`

	// Interval start timestamp, required only if type of schedule at times equal to AT_INTERVALS
	// Example: 10:00
	StartTime string `json:"startTime,omitempty"`

	// Timestamp to run task/plan, required only if type of schedule at times equal to AT_TIME
	// Example: 10:00
	Time string `json:"time,omitempty"`

	// Timestamps to run task/plan, required only if type of schedule at times equal to AT_SPECIFIC_TIMES
	// Example: ["10:00"]
	Times []string `json:"times"`

	// Type of schedule at times
	// Example: AT_TIME
	// Required: true
	// Enum: [AT_TIME AT_SPECIFIC_TIMES AT_INTERVALS]
	Type *string `json:"type"`
}

// Validate validates this time schedule
func (m *TimeSchedule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var timeScheduleTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AT_TIME","AT_SPECIFIC_TIMES","AT_INTERVALS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		timeScheduleTypeTypePropEnum = append(timeScheduleTypeTypePropEnum, v)
	}
}

const (

	// TimeScheduleTypeATTIME captures enum value "AT_TIME"
	TimeScheduleTypeATTIME string = "AT_TIME"

	// TimeScheduleTypeATSPECIFICTIMES captures enum value "AT_SPECIFIC_TIMES"
	TimeScheduleTypeATSPECIFICTIMES string = "AT_SPECIFIC_TIMES"

	// TimeScheduleTypeATINTERVALS captures enum value "AT_INTERVALS"
	TimeScheduleTypeATINTERVALS string = "AT_INTERVALS"
)

// prop value enum
func (m *TimeSchedule) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, timeScheduleTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TimeSchedule) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this time schedule based on context it is used
func (m *TimeSchedule) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TimeSchedule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TimeSchedule) UnmarshalBinary(b []byte) error {
	var res TimeSchedule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
